2009 IEEE International Conference on Robotics and Automation
Kobe International Conference Center
Kobe, Japan, May 12-17, 2009

Modeling RFID Signal Strength and Tag Detection
for Localization and Mapping
Dominik Joho

Christian Plagemann
1.5

Abstract— In recent years, there has been an increasing
interest within the robotics community in investigating whether
Radio Frequency Identification (RFID) technology can be utilized to solve localization and mapping problems in the context
of mobile robots. We present a novel sensor model which can
be utilized for localizing RFID tags and for tracking a mobile
agent moving through an RFID-equipped environment. The
proposed probabilistic sensor model characterizes the received
signal strength indication (RSSI) information as well as the
tag detection events to achieve a higher modeling accuracy
compared to state-of-the-art models which deal with one of
these aspects only. We furthermore propose a method that is
able to bootstrap such a sensor model in a fully unsupervised
fashion. Real-world experiments demonstrate the effectiveness
of our approach also in comparison to existing techniques.

9
8.5
8
7.5
7
6.5
6
5.5
5
4.5

1
0.5
0
-0.5
-1
-1.5

(a) Mean of the logarithmic signal strength.
1.5

1.6
1.4
1.2
1
0.8
0.6
0.4
0.2
0

1
0.5
0
-0.5
-1
-1.5

I. I NTRODUCTION

(b) Standard deviation of the logarithmic signal strength.

Radio Frequency Identification (RFID) technology has
become popular in areas such as supply chain management
and inventory control, primarily because information can be
attached to real-world products cheaply and can be retrieved
without requiring physical contact. Recently, also robotics
researchers have started to explore potential applications
of the technology, focusing on the tasks of localization,
mapping, and activity recognition. An RFID system consists
of one or several RFID antennas and tags distributed in the
environment. The antenna sends out electromagnetic waves
and the passive RFID tags, consisting of a chip and a small
antenna, use either load modulation or backscattering to send
back their unique ID to the receiver. Ultra-high frequency
(UHF) systems, one of which is also used in this work, has
a reading range of up to a few meters.
According to scenarios envisioned for the near future,
virtually every retail product could be equipped with an
RFID tag. In addition to the semantic information about a
given environment or situation [1], [2], such a setup also
provides a rich source of spatial information, which can
be utilized (a) to infer the location of the tags within the
environment, (b) to localize the sensor relative to them, or
(c) to solve both tasks jointly. A major precondition for
solving all these tasks is the availability of an accurate sensor
model p(z | x) that characterizes the relationship between
locations x and measurements z. The contribution of this
paper is two-fold: First, we present a novel sensor model
that utilizes the received signal strength indication (RSSI)
as well as tag detection events to achieve superior accuracy
compared to state-of-the-art models that cover one of the
The authors are with the University of Freiburg, Department of Computer Science, Georges-Koehler-Allee 79, D-79110 Freiburg, Germany.
{joho,plagem,burgard}@informatik.uni-freiburg.de

978-1-4244-2789-5/09/$25.00 ©2009 IEEE

Wolfram Burgard

1.5

0.4
0.35

1

0.3

0.5

0.25

0

0.2

-0.5

0.15

-1

0.1

-1.5

0.05
-2

-1

0

1

2

3

4

(c) Tag detection probability.
Fig. 1: The proposed sensor model combines information about the expected
received signal strength, (a) and (b), and about the probability of detecting
a tag (c).

two aspects only (see Fig. 1 for an illustration). We use
this sensor model for localizing RFID tags and for tracking
a shopping cart equipped with two RFID antennas. As a
second contribution, we describe how our sensor model can
be learned in an fully unsupervised fashion. We also compare
our model with a sensor model that has been shown to
be effective for WiFi localization and we point out how
this model can be further improved in the context of RFID
localization and present experimental results. Real-world
experiments in an office environment and a supermarket
demonstrate that our system is able to robustly estimate the
position of the tags and to track a shopping cart moving
through an RFID-equipped supermarket.
The paper is organized as follows. After discussing related
work in the field of RFID localization as well as in the
related field of WiFi localization, Sec. III then introduces
the proposed sensor model. In Section IV we explain how
to learn the model in an unsupervised fashion and Sec. V
and VI contain a description about how this sensor model is
utilized for localizing RFID tags and for tracking a shopping
cart. Finally, Sec. VII presents real-world experiments that
were performed in an office environment and a supermarket.

3160

0.25

II. R ELATED W ORK

2

There is a variety of approaches to RFID-based localization, which can be characterized by the type of sensor
information used as well as by the general approach to
modeling this information. Some of the earlier systems only
provided information about the ID of the detected tag while
later systems also provide information about the received
signal strength. Hence, some localization techniques utilize
sensor models that are based only on tag detection events
[3], [4], [5], [6], [7]. For some RFID readers that do not
provide RSSI (signal strength) directly, this information can
be emulated by means of different attenuation levels or
power levels of the antenna [8], [9], [10]. Sensor models for
localizing tags are usually designed to be sensor centric [3],
[6], [7], [9]. A different design, that can be used for localizing
a mobile agent, is to lay out the sensor model relative to the
environment [5], [11], [12], [13].
Hähnel et al. [3] utilized a piecewise constant tag detection
sensor model to first localize the tags and then use the tag
map to localize a mobile antenna. Schneegans et al. [5] compared histograms of tag detections with previously recorded
histograms at different locations. Kleiner et al. [4] used
a combination of pedestrian odometry and tag detections
to perform graph-based RFID SLAM in a large outdoor
environment. Kanda et al. [10] deployed RFID readers in a
science museum and tracked people with attached RFID tags.
Vorst et al. [14] showed how to learn a tag detection sensor
model in a semi-autonomous fashion. Some approaches in
the context of WiFi localization model the expected signal
strength at different locations by using a discrete grid [11],
or Gaussian process regression [12], [13].
Several approaches have addressed exclusively the tag
localization problem. Ni et al. [8] compared the (emulated)
signal strengths of tags at unknown locations with signal
strengths received from reference tags at known locations.
Alippi et al. [9] used several rotating antennas. Ehrenberg et
al. [6] used an HF RFID system to localize books on a shelf.
Liu et al. [7] used a tag detection model that is able to
estimate the 3D position of the tag.
In contrast to the above-mentioned approaches, we model
both phenomena—tag detection events as well as signal
strength. The increased accuracy of the model allows us to
address (a) localization of a mobile sensor relative to given
tag locations and (b) mapping of tag locations when these
are unknown. Furthermore, we show how to simultaneously
learn the sensor model and estimate the position of the
RFID tags in an unsupervised fashion. We present realworld experiments in an office environment as well as in
a supermarket environment and compare our approach with
state-of-the-art methods.
III. T HE S ENSOR M ODEL
The techniques for localizing RFID tags as well as for
tracking a mobile antenna both rely on a sensor model
p(z | x, ℓg ) which specifies the likelihood of obtaining a
measurement z given the pose x = (x, y, θ) of the antenna
and the location ℓg = (xg , yg ) of the detected tag with unique

0.25
2

0.2
1

0.2
1

0.15
0

0.15
0

0.1
-1

0.1
-1

0.05
-2

0.05
-2

0
-2

-1

0

1

2

(a) RSSI=log(2000)

3

0
-2

-1

0

1

2

3

(b) RSSI=log(500)

Fig. 2: Two instances of the inverse sensor model that describes the
likelihood of relative offsets between antenna and tag given a certain
level of received signal strength (RSSI). We plot (a) RSSI=log(2000) and
(b) RSSI=log(500). The antenna is located at (0, 0) and oriented towards
the positive x-axis.

ID g. In our case, an observation z = (g, s) carries two pieces
of information, namely that we have detected the tag g in
the first place, and secondly that we received its signal with
a signal strength s. Indeed, the event of detecting a tag is
informative in itself, and this fact forms the basis for many of
the previously proposed probabilistic sensor models for tag
localization [3], [6], [7], [14]. Note also that the other class of
existing sensor models, which consider signal strength only,
implicitly condition on the tag detection event since a signal
strength measurement can be obtained in this way only. We
make the distinction between both sources of information
explicit by denoting with d the binary variable that encodes
the detection of a certain tag. Hence, the sensor model can
be formalized as
p(z | x, ℓg ) = p(s, d | x, ℓg )
= p(s | d, x, ℓg ) · p(d | x, ℓg ).

(1)

In the most general form, these two conditional distributions are intractable to learn in practice since, for example,
p(d | x, ℓg ) specifies a tag detection probability for every
possible combination of antenna pose x and tag location ℓg .
Therefore, we make the common assumption that only the
relative location δ(x, ℓg ) of a tag with respect to the antenna
is relevant (see [3], [6], [7], [14]). This assumption certainly
is a strong one, since the propagation of an RFID signal is
also influenced by location-dependent factors, such as the
materials the tags are attached to, the orientation of the tags
relative to the antenna, or obstacles that reflect or absorb
electro magnetic waves. The gain in efficiency, however, is
large in comparison to other simplifications that could be
made. As we will show in the experimental evaluation, the
accuracy of a location-dependent sensor model for RFID tags
is slightly higher than of our model, but that gain comes at
a high computational cost already for small environments.
Committing ourselves to sensor-centric sensor modeling,
which considers relative tag positions only as outlined above,
we get
p(z | x, ℓg ) = p(s | d, δ(x, ℓg )) · p(d | δ(x, ℓg )) .

(2)

In words, this models the likelihood of an observation as
the likelihood of receiving signal strength s at position
δ(x, ℓg ) relative to the antenna multiplied by the probability
of detecting a tag at this relative position.

3161

about the average received logarithmic signal strength µx,y
and the empirical variance σx,y for each grid cell. Under
the assumption that the logarithmic signal strengths within
each grid cell are normally distributed, we can estimate the
likelihood of an observation z = (g, s) at the antenna relative
position δ(xt , ℓg ) = (x, y) as
p(z | x, ℓg ) = p(s | d, δ(x, ℓg )) · p(d | δ(x, ℓg ))
(3)


(log(s) − µx,y )2
1
√ exp −
· px,y .
∝
2
2σx,y
σx,y 2π
B. Bootstrapping the Sensor Model

Fig. 3: Ground truth tag locations (black) and tag locations estimated (green
/ gray) with the initial sensor model (top), and with the learned models at
bootstrapping iterations 2 (middle) and 25 (bottom).

Location-dependent sensor models, that characterize the
distribution of signal strength relative to the environment
rather than to the sensor (see [11], [12], [13]), can be
understood as a different approximation that stays more
faithful to the true signal strength distribution. Instead of
conditioning the signal strength on the relative tag position,
they learn a separate signal strength distribution pg (s | x)
for each tag individually, which is conditioned only on
the antenna location. The resulting signal strength maps
implicitly contain all environment-specific factors. On the
downside, they do not model the location of the tag explicitly
and, thus, cannot be used to estimate the location of the tags
directly.
IV. L EARNING THE M ODEL FROM DATA
We first describe how the components of (2) can be learned
in a semi-autonomous way and then extend this procedure
to an unsupervised bootstrapping method.
A. Semi-Autonomous Learning
Vorst et al. [14] proposed a method for learning a tag
detection sensor model in a semi-autonomous fashion, which
we will adopt and extend towards also learning the signal
strength distribution. Building on this, we show how to
learn both models in an fully autonomous way. The semiautonomous way of learning a tag detection model is to
assume a list of tag positions given as well as the trajectory
of a mobile antenna moving through the environment. At
every tag detection event, we transform the positions of tags
into the antenna’s local coordinate system and register the
tag detection at the tags relative position as a positive event
while registering the non-detected tags as negative events. We
then discretize the space relative to the antenna according
to a two-dimensional grid and count for every grid cell
−
(x, y) the positive events n+
x,y and the negative events nx,y .
Given these counts, the maximum likelihood estimator of

+
−
the tag detection probability is px,y = n+
x,y / nx,y + nx,y .
Likewise, we maintain a second grid that contains statistics

So far, learning the sensor models required knowledge
about the true tag positions, which might be tedious or
impossible to acquire. We can sidestep this, by bootstrapping
the sensor models. We start with a basic, yet plausible tag
detection model similar to the one proposed by Hähnel et
al. [3] and iterate the following steps:
1) Use the current model to estimate the tag locations (as
described in the next section) and
2) learn a new sensor model based on the estimated tag
locations (as described above).
In the experimental section, we present results that indicate
that alternating tag location estimation and sensor model
learning converges in terms of tag location error and the
similarity of the bootstrapped sensor model to a model
learned in a semi-autonomous way. Fig. 1 shows an example
for a sensor model learned this way in an office environment.
Fig. 2 visualizes two instances of the corresponding inverse
sensor model, that is, the likelihood of relative poses given
a certain level of received signal strength. This model has
been calculated analytically from the three components of
the sensor model depicted in Fig. 1. The improvement of the
estimated tag locations during the bootstrapping procedure is
illustrated in Fig. 3.
Based on this bootstrapping procedure, we can learn both
the sensor model and the tag locations in a fully unsupervised
fashion. This greatly simplifies sensor modeling in practice,
compared to the manual acquisition of calibration data. In
contrast to the semi-autonomous method, it does not require
knowledge about the true tag positions.
V. M APPING TAGS FROM K NOWN S ENSOR P OSES
For localizing RFID tags, we move a mobile antenna
through the environment and integrate the measurements
iteratively so that the estimates of tag locations improve
gradually over time. We assume that the antenna is localized,
e.g., applying laser-based FastSLAM [15], so that we have
accurate estimates of the positions at which observations
have been made.
Formally, we are given a sequence of tag readings z1:t =
{(gi , si )}ti=1 denoting the unique ID g of the detected tag
and the received signal strength s, as well as a sequence
of antenna poses x1:t = {(xi , yi , θi )}ti=1 , denoting the
antenna’s position and orientation at which these observations have been made. We are interested in the posterior
p(ℓg | x1:t , z1:t ) of the tag location ℓg = (xg , yg ) given the

3162

(a) Initial filter state.

(b) After second filter update.

(c) After 5th filter update.

(d) After 30th filter update.

Fig. 4: Localizing RFID tags in an office corridor: The green circle indicates the estimated tag location and the black circle the pose of the shopping cart.

information up to time t. Using Bayes’ rule and assuming
independence between measurements, we get the recursive
update formula
p(ℓg |x1:t , z1:t )
= η · p(zt | δ(xt , ℓg )) · p(ℓg | x1:t−1 , z1:t−1 ),

(4)

where p(zt | δ(xt , ℓg )) is the sensor model described in the
previous section and η is a normalization factor (see also [3]).
To estimate this posterior sequentially as new data arrives,
we apply a particle filter for each tag and use its unique ID
for data association. Each filter is initialized with a uniform
particle distribution bounded by the maximum reading range
of the antenna and centered around the antenna’s position
during the first encounter of the tag [visualized in Fig. 4 (a)].
We resample whenever the
so-called number of effective
P 2 −1
falls below a threshold κ,
particles neff =
w
i
i
which we set to half the number of particles of the filter.
Here, wi denotes the weight of particle i. Following Liu
and West [16], we disturb the individual particle locations
by resampling them from a normal distribution with mean
ap[i] + (1 − a)p and variance h2 V. Here, p and V are the
mean and covariance matrix of the particle set and a = 3γ−1
2γ
and h2 = 1 − a2 only depend on a discount factor γ,
which we set to 0.95. This procedure causes the particlebased estimates of the tag locations to converge to the true
locations even for crudely initialized estimates within a few
filter iterations, as can be seen in Fig. 4.

that consists of the current pose x = (x, y, θ) of the cart,
its velocity ẋ—parameterized by the translational velocity
ẋ in direction of the cart, a lateral drift velocity ẏ, and a
rotational velocity θ̇—and a discrete motion state m, which
can be one of the following seven states: standing, moving
forwards (backwards), turning left forwards (backwards), or
turning right forwards (backwards).
[i]
The transition from one particle state pt to the state
[i]
pt+1 at the next point in time is modeled as follows:
first, we sample a new motion state mt+1 according to a
state transition probability p(mt+1 | mt ). If the motion
state changed, we sample new velocities ẋt+1 from three
motion state specific normal distributions N (µm,ẋ , σm,ẋ ),
N (µm,ẏ , σm,ẏ ), N (µm,θ̇ , σm,θ̇ ) that capture the velocity
distributions of the particular state. If the sampled motion
state is the same as in the time step before, we do not
sample new velocities, but keep the velocities of the previous
point in time. Once the new velocities are determined, we
deterministically compute the new pose of a particle based
on the velocities and the time passed during one filter update
step. As during tag localization, we resample whenever the
number of effective particles is less than half of the particle
set size. To account for physical constraints imposed by walls
and other obstacles, we set the weight of a particle close to
zero, whenever it enters an occupancy grid cell that is likely
to be occupied. The transition probabilities and the velocity
distributions of the motion model were learned from recorded
trajectories with hand-labeled motion states.

VI. L OCALIZING A M OBILE AGENT
Given that we know the locations of the RFID tags, we
can use the very same sensor model to track a mobile agent
equipped with an RFID antenna. We apply Monte Carlo
Localization (MCL) [17], which utilizes a particle filter to
maintain the posterior over the agent’s location
bel(xt+1 ) = η p(zt+1 | δ(xt+1 , ℓg ))
Z
· p(xt+1 | xt ) · bel(xt )dxt .

(5)

While the sensor model p(z | δ(x, ℓg )) remains the same,
the crucial part here is the motion model p(xt+1 | xt ), from
which we sample the next particle distribution. As we are
tracking a shopping cart, which does not provide odometry
information, we used a velocity based motion model that tries
to capture the typical motion patterns of people pushing the
cart. For this, each particle p[i] is constrained in a sevendimensional space
p[i] = (x, ẋ, m) = (x, y, θ, ẋ, ẏ, θ̇, m) ,

(6)

VII. E XPERIMENTAL E VALUATION
To evaluate our approach, we equipped a shopping cart
with a SICK RFI 641 UHF RFID reader with two antennas
mounted perpendicular to each side of the cart (see Fig. 6).
The reader also reports which antenna detected the tag, and
we know their positions relative to the center of the cart.
As the antennas are identical in construction we assume the
same sensor model for both. The reader is configured to run
in continuous mode, reporting a tag as soon as it is detected.
The typical tag detection rate of the system is about 10 Hz.
We used passive UHF tags (“DogBone” by UPM Raflatac).
In order to acquire a ground truth trajectory and an occupancy grid of the environment we additionally equipped the
cart with a SICK LMS 291 laser scanner and processed the
data with the GMapping algorithm [15], which is an efficient
laser-based realization of the FastSLAM approach. In the
remainder of this section we present experimental results
about the tag localization approach and the localization of
a mobile agent.

3163

0.9

0.8
0.7
0.6
0.5
0.4
0.3
0.2

0.09

signal strength models

0.8

Kullback-Leibler-Divergence

combined model
signal strength model
tag detection model

Kullback-Leibler-Divergence

mean tag location error (m)

1
0.9

0.7
0.6
0.5
0.4
0.3
0.2
0.1
0

0

5

10
15
20
bootstrapping iteration

(a) Average tag localization error.

25

tag detections models

0.08
0.07
0.06
0.05
0.04
0.03
0.02
0.01
0

0

5

10
15
20
bootstrapping iteration

25

(b) Divergence of the signal strength models.

0

5

10
15
20
bootstrapping iteration

25

(c) Divergence of the tag detection models.

Fig. 5: The bootstrapping process: (a) The process converges in terms of the average tag location error. The error bars depict the 2σ confidence interval.
(b) and (c) show that the bootstrapping procedure also converges in terms of sensor model similarity to a semi-autonomously learned model.

A. Localizing the RFID Tags
We distributed 28 RFID tags in an office corridor as
depicted by the black circles in Fig. 3. Neighboring tags
had an average distance of about two meters. We knew the
true locations of the tags and therefore could evaluate the
accuracy of tag localization quantitatively. We bootstrapped
the sensor model by moving the shopping cart up and
down the corridor several times—performing 360◦ turns at
several locations. This took about 4 minutes and resulted in
roughly 4100 tag detections. Fig. 5 (a) shows the evolution
of the average error of the estimated tag locations after each
iteration of the bootstrapping process. As can be seen, the
error converges to a final value of about 29 cm. We also give
the estimation results for (a) the signal strength-based model
alone and (b) the tag detection-based model alone evaluated
on the same trajectory. The proposed combined sensor model
is significantly better than either the signal strength-based
model or the tag detection-based one alone.
If we learn the sensor model semi-autonomously based
on the true tag locations, we achieve a localization accuracy of about 27 cm. This indicates, that the bootstrapping
process yields a sensor model that is comparable to a semiautonomously learned sensor model. This was also confirmed
by visually comparing the individual components of the two
models. To confirm this finding quantitatively, we calculated
the average symmetric Kullback-Leibler divergence between
all grid cells of the two models after each bootstrapping
iteration. The results illustrated in Figs. 5 (b) and (c) show
that the bootstrapping process also converges in terms of
model similarity to a semi-autonomously learned model.
B. Localizing a Mobile Agent
We distributed about 350 tags along the shelves in a
supermarket at an average distance of approximately one
meter. Then we bootstrapped the sensor models and the tag

Fig. 6: We equipped a shopping cart with an RFID reader and a laser range
scanner and deployed about 350 passive UHF tags in a supermarket.

Fig. 7: Comparison of the estimated trajectory (black) and the ground truth
trajectory (red / gray) on one of the supermarket log files.

positions by using data from six log files, which we collected
by moving the shopping cart through the environment. The
log files contained 34 200 tag detections and lasted about 74
minutes in total. We used the agent localization technique
described above and defined as the localization result the
trajectory of the most likely particle. An example of an estimated trajectory and its corresponding ground truth trajectory
is depicted in Fig. 7 as well as in the accompanying video.
To evaluate the accuracy of the localization technique
quantitatively, we localized the agent on seven different log
files which lasted 24 minutes in total and contained 13 400
tag detections. We repeatedly localized the cart for each log
file ten times and averaged the measured error values. The
error was quantified in terms of the average position error
and the average orientation error. Results are given in Fig. 8.
Using only the tag detection model can be considered
equivalent to the approach by Vorst et al. [14]. For further
comparison, we implemented a model similar to the one
presented by Ferris et al. [13], which used Gaussian process
regression [18] to model the signal strength distributions
of WLAN access points in 2D space. We used Gaussian
process regression for modeling the log-signal strength of
the RFID tags in the supermarket. We observed that the estimation of the cart’s orientation can be significantly improved
[Fig. 8 (b)], if the antenna’s orientation is taken into account,
and hence the signal strength is mapped in pose space
rather than in 2D. The proposed combined sensor model
outperforms both of its components—the tag detection model
and the signal strength model—and performs comparable to
the signal strength map. Both methods can be executed online
for 2 500 particles, but the proposed model needs only 2.6
minutes on average to process all log files, while the signal

3164

1.4

0.65

0.65

0.6

0.6

0.55
0.5

1.2
1

0.45

0.8

0.4

0.6
0.35

0.4
0.2
250 500

0.3

1000
number of particles

2500

(a) Average position error.

2500

0.45

proposed combined model
tag detection model
signal strength model
signal strength map (pose)
signal strength map (point)

0.55
0.5

proposed combined model
tag detection model
signal strength model
signal strength map (pose)
signal strength map (point)

0.4
0.35

0.45

12
10
8

0.3

0.4

14

6

0.35

0.25

4

0.3

runtime (minutes)

mean position error (m)

1.6

proposed combined model
tag detection model
signal strength model
signal strength map (pose)
signal strength map (point)

mean orientation error (rad)

2
1.8

0.2

0.25

2

0.2
250 500

0.15

1000
number of particles

2500

2500

250 500

1000
number of particles

(b) Average orientation error.

0
2500

(c) Runtime.

Fig. 8: Evaluating several sensor models for agent localization: the proposed combined model, and its two components alone. For comparison, we show
the results of a signal strength map, similar to the model by Ferris et al. [13], mapping the signal strength either in pose space (“pose”) or in 2D (“point”).

strength map, which uses Gaussian process regression instead
of a grid, requires 13.4 minutes, as can be seen in Fig. 8 (c).
In both tasks—localization and mapping—the signal
strength model alone was consistently less accurate than
the tag detection model. This is an unexpected finding,
since the received signal strength should intuitively be more
informative than a simple detection event. Close inspection
of the recorded data reveals, however, that the relationship
between signal-strength and sensor location is more noisy
than it is the case for tag detections. Thus, the particle filter
as a sophisticated way of integrating information over time, is
able to recover the (real-valued) pose information accurately
from the stream of (binary) tag detection events.
VIII. F UTURE W ORK
There are several directions for future work. Our results
showed that considering signal strength information along
with tag detection events lead to an improved sensor centric
model. Therefore, it would be interesting to see if the
accuracy of signal strength maps could be improved in just
the same way by combining them with “tag detection maps”.
Another direction would be to extend the model to a 3D
sensor model. Moreover, the assumption made that the tag
map remains static could be alleviated—a technique for
mapping “nomadic” tags (static tags which change locations
from time to time) was presented in [7].
IX. C ONCLUSIONS
In this paper, we presented a novel combined sensor
model that utilizes both (a) the received signal strength and
(b) tag detections of RFID systems for robot localization and
mapping of tags. We also presented a technique to learn such
a model in an unsupervised way. This greatly simplifies the
task of sensor modeling in practice compared to the manual
acquisition of calibration data. For comparison, we implemented a sensor model that has been shown to be effective
for WiFi localization. We furthermore described how this
model can be improved in the context of RFID localization.
As our experiments in several real-world settings showed, our
approach achieves the computational efficiency of existing
sensor-centric models and an accuracy of a state-of-the-art
approach that learns a location-dependent model for each tag.
ACKNOWLEDGEMENT
This work has been supported by the Deutsche
Forschungsgemeinschaft (DFG) under contract number
SFB/TR 8 Spatial Cognition (R6-[SpaceGuide]).

R EFERENCES
[1] M. Philipose, K. Fishkin, M. Perkowitz, D. Patterson, D. Fox,
H. Kautz, and D. Hähnel, “Inferring activities from interactions with
objects,” IEEE Pervasive Computing, vol. 3, pp. 50–57, Oct. 2004.
[2] N. Landwehr, B. Gutmann, I. Thon, M. Philipose, and L. D. Raedt,
“Relational transformation-based tagging for human activity recognition,” Fundamenta Informaticae, 2008, to appear.
[3] D. Hähnel, W. Burgard, D. Fox, K. Fishkin, and M. Philipose,
“Mapping and localization with RFID technology,” in Proc. of the
IEEE Int. Conf. on Robotics and Automation (ICRA), vol. 1, New
Orleans, LA, USA, 2004, pp. 1015–1020.
[4] A. Kleiner, C. Dornhege, and S. Dali, “Mapping disaster areas jointly:
RFID-coordinated SLAM by humans and robots,” in Proc. of the IEEE
Int. Workshop on Safety, Security and Rescue Robotics (SSRR), 2007.
[5] S. Schneegans, P. Vorst, and A. Zell, “Using RFID snapshots for
mobile robot self-localization,” in Proc. of the European Conf. on
Mobile Robots (ECMR), Freiburg, Germany, 2007.
[6] I. Ehrenberg, C. Floerkemeier, and S. Sarma, “Inventory management
with an RFID-equipped mobile robot,” in Proc. of the IEEE Int. Conf.
on Automation Science and Engineering (CASE), 2007.
[7] X. Liu, M. Corner, and P. Shenoy, “Ferret: RFID localization for
pervasive multimedia,” in Proc. of the Int. Conf. on Ubiquitous
Computing (UbiComp), 2006.
[8] L. M. Ni, Y. Liu, Y. C. Lau, and A. P. Patil, “LANDMARC: Indoor
location sensing using active RFID,” in Proc. of the IEEE Int. Conf.
on Pervasive Computing and Communications (PerCom), 2003.
[9] C. Alippi, D. Cogliati, and G. Vanini, “A statistical approach to
localize passive RFIDs,” in Proc. of the IEEE Int. Symp. on Circuits
and Systems (ISCAS), Island of Kos, Greece, 2006, pp. 843–846.
[10] T. Kanda, M. Shiomi, L. Perrin, T. Nomura, H. Ishiguro, and
N. Hagita, “Analysis of people trajectories with ubiquitous sensors
in a science museum,” in Proc. of the IEEE Int. Conf. on Robotics
and Automation (ICRA), Roma, Italy, 2007, pp. 4846–4853.
[11] V. Seshadri, G. V. Záruba, and M. Huber, “A Bayesian sampling
approach to in-door localization of wireless devices using received
signal strength indication,” in Proc. of the IEEE Int. Conf. on Pervasive
Computing and Communications (PerCom), 2005, pp. 75–84.
[12] A. Schwaighofer, M. Grigoras, V. Tresp, and C. Hoffmann, “GPPS:
a Gaussian process positioning system for cellular networks,” in
Advances in Neural Information Processing Systems (NIPS), 2003.
[13] B. Ferris, D. Hähnel, and D. Fox, “Gaussian processes for signal
strength-based location estimation,” in Proc. of Robotics: Science and
Systems (RSS), Philadelphia, PA, USA, 2006.
[14] P. Vorst and A. Zell, European Robotics Symposium 2008, ser. Springer
Tracts in Advanced Robotics. Springer, 2008, vol. 44/2008, ch. SemiAutonomous Learning of an RFID Sensor Model for Mobile Robot
Self-localization, pp. 273–282.
[15] G. Grisetti, C. Stachniss, and W. Burgard, “Improved techniques for
grid mapping with Rao-Blackwellized particle filters,” IEEE Trans. on
Robotics, vol. 23, no. 1, pp. 34–46, 2007.
[16] J. Liu and M. West, “Combined parameter and state estimation in
simulation-based filtering,” in Sequential Monte Carlo Methods in
Practice, A. Doucet, N. de Freitas, and N. Gordon, Eds., 2001, ch. 10.
[17] F. Dellaert, D. Fox, W. Burgard, and S. Thrun, “Monte carlo localization for mobile robots,” in Proc. of the IEEE Int. Conf. on Robotics
and Automation (ICRA), vol. 2, 1999, pp. 1322–1328.
[18] C. E. Rasmussen and C. K. I. Williams, Gaussian Processes for
Machine Learning. MIT Press, 2006.

3165

