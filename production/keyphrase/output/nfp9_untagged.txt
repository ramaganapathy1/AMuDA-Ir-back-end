indoor localization without the pain krishna chintalapudi anand padmanabha iyer microsoft research india microsoft research india krchinta @ microsoft.com v-anandi @ microsoft.com abstract microsoft research india padmanab @ microsoft.com research on indoor localization  in particular  there has been a focus on leveraging existing infrastructure  e.g  wifi access points  to enable indoor localization  the advantage being that the cost of deploying a specialized infrastructure for localization is avoided  existing solutions  however  require extensive pre-deployment effort  for instance  to build detailed rf maps  4  or rf propagation models based on surveys of the environment  in this work  we propose a novel indoor localization system  ez  that leverages existing infrastructure without requiring any explicit pre-deployment effort  ez relies on three basic assumptions   i  that there are enough wifi aps to provide excellent coverage throughout the indoor environment   ii  that users carry mobile devices  such as smartphones and netbooks  equipped with wifi  and  iii  that occasionally a mobile device obtains an absolute location fix  say by obtaining a gps lock at the edges of the indoor environment  such as at the entrance or near a window  in ez  users simply sit  stand  or move around in the indoor environment in normal course  while they do so  each users mobile device records the received signal strength  rss  from the wifi aps visible to it at various  unknown  locations  and reports this information  along with the occasional location fix when available  to a central localization server  the server uses this data to simultaneously learn the characteristics of the rf propagation environment and to localize the users  localization is performed in terms of absolute coordinates  latitude and longitude  since we focus on 2d locations in this paper  a key advantage of ez is that it does not require any prior knowledge of the rf environment  including the location and transmit power of the aps  information that is often not readily available in settings such as malls and multi-tenant office buildings  where aps have been deployed by many different entities  this is a key advance over prior work on reducing the calibration effort needed for indoor localization  11  17   another key advantage is that ez does not require any explicit user participation to aid the localization process  in particular  users are not required to indicate their current locations  even during the training phase  finally  in contrast to work on collaborative  ad-hoc  localization  20  7  23   ez only requires measurements of the aps by the mobile node and does not require any distance measurements between mobile nodes  so even a single mobile node that traverses the space of interest over time could generate sufficient data for ez localization  as in the experiments we report here  in contrast  prior work on collaborative localization requires the simultaneous presence of a sufficient number of participating nodes  a requirement that makes bootstrapping non-trivial thereby impeding easy deployment  we believe that by not requiring any pre-deployment effort or explicit user participation  ez has the potential of enabling practical and viable indoor localization  for instance  an ez server in the cloud could automatically construct an rf model for  and thereby while wifi-based indoor localization is attractive  the need for a significant degree of pre-deployment effort is a key challenge  in this paper  we ask the question  can we perform indoor localization with no pre-deployment effort ? our setting is an indoor space  such as an office building or a mall  with wifi coverage but where we do not assume knowledge of the physical layout  including the placement of the aps  users carrying wifi-enabled devices such as smartphones traverse this space in normal course  the mobile devices record received signal strength  rss  measurements corresponding to aps in their view at various  unknown  locations and report these to a localization server  occasionally  a mobile device will also obtain and report a location fix  say by obtaining a gps lock at the entrance or near a window  the centerpiece of our work is the ez localization algorithm  which runs on the localization server  the key intuition is that all of the observations reported to the server  even the many from unknown locations  are constrained by the physics of wireless propagation  ez models these constraints and then uses a genetic algorithm to solve them  the results from our deployment in two different buildings are promising  despite the absence of any explicit pre-deployment calibration  ez yields a median localization error of 2m and 7m  respectively  in a small building and a large building  which is only somewhat worse than the 0.7m and 4m yielded by the best-performing but calibrationintensive horus scheme  29  from prior work  categories and subject descriptors c.2  computer-communication networks   miscellaneous general terms algorithms  design  experimentation  theory 1 venkata n padmanabhan introduction the need for location information to enable pervasive computing applications in indoor environments  coupled with the unavailability of gps in such environments  has motivated a large body of permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page  to copy otherwise  to republish  to post on servers or to redistribute to lists  requires prior specific permission and/or a fee  mobicom10  september 2024  2010  chicago  illinois  usa  copyright 2010 acm 978-1-4503-0181-7/10/09  $ 10.00  173 model-based techniques  an rf propagation model  e.g  the log-distance path loss  ldpl  model  can be used to predict rss at various locations in the indoor environment  the advantage of using these models is that it reduces the number of rss measurements dramatically compared to rf fingerprinting schemes  albeit at the cost of decreased localization accuracy  since rf propagation characteristics vary widely  the model parameters would have to be estimated specifically for each indoor space in question  tix  11  assumes that the transmit power and locations of all wifi aps is known  the aps are modified to measure the rss of the beacons from neighboring aps  linear interpolation is then used to estimate the rss at every location in the indoor space  which is then used for localization  to allow unmodified  off-theshelf aps to be used  lim et al   17  employ wifi sniffers at known locations  these sniffers measure the rss from the various aps and use the ldpl model to construct an rss map  ariadne  13  also deploys sniffers at known locations but makes use of a more sophisticated ray-tracing model based on detailed floor maps and uses simulated annealing to estimate radio propagation parameters  finally  madigan et al   18  use a bayesian hierarchical approach for indoor localization  which avoids the need to know the locations of the training points  however  they still depend on knowledge of the ap locations  besides assuming that the path loss exponent in the ldpl model is the same for all aps  while these methods cut down the measurement effort  they still require effort in terms of placing infrastructure such as sniffers  extending the capabilities of off-the-shelf aps  and obtaining information on the floor plans  or at least knowledge of ap placement and power settings  localization in indoor robotics  for a robot to navigate through an indoor environment  it must have the ability to determine its current location  initial approaches provisioned the robot with a map of the indoor environment  allowing it to determine its location by comparing its observed environment  using ultra-sound  ladar sensors  etc   to the map  a significant step in the area of robotics was simultaneous localization and mapping  slam   16   which allowed a robot to build a map of the indoor environment  in terms of walls and other obstructions  while simultaneously determining its location with respect to the constructed map  wifi-slam  9  extends this to building a wifi rss map using a mobile robot  the robot uses its onboard odometer to determine the distance it has moved between measurement points  knowing a few of these locations  using gps or certain landmarks  allows estimating the parameters of the ldpl model  in contrast  ez builds an rf model without the benefit of sensors such as odometers and ladars  ad-hoc localization  finally  there has been work on ad-hoc localization  wherein a set of nodes  some of which may know their own locations  i.e  landmark or anchor nodes   collaborate to enable all nodes to locate themselves  the earliest notable examples are dv-hop and dv-dist by nicelescu et al   20   spa by capkun et al   7  and n-hop multilateration by savvides et al   23   these scheme assume that the nodes can estimate the distance between each other  while other schemes use angle of arrival information  21   there also exist more approximate methods such as  14   which uses the connectivity graph among the nodes to perform localization in outdoor environments  the target environment was outdoors and it is unclear how well a simple connectivity based approach would carry over to indoor environments  likewise  sextant  10  uses a geometric approach that may not carry over to indoor environments  all of these approaches assume node-to-node communication  which requires the simultaneous presence of multiple nodes in the space of interest  this requirement makes bootstrapping in such localization procedure difficult  while the presence of fixed nodes such as aps might alleviate this problem in enable localization in  an indoor space in any part of the world  based just on the measurements reported by the ez clients in the space of interest  such automated operation brings forth a number of novel challenges  which we address here  including filtering the very large number of measurement reports to identify a small and useful subset  and efficiently computing the rf model despite the very large space of possibilities  the advantage of no pre-deployment effort provided by ez inevitably comes at the cost of some loss of accuracy relative to localization approaches such as radar  4  and horus  29  that rely on extensive measurement to map the rf environment  however  our experience from deploying ez in two different office buildings is promising  for instance  in one of the buildings  the median localization error with ez is 2m  which is somewhat worse than the error of 0.7m and 1.3m  respectively  with horus and radar  on the other hand  ezs approach of inferring an rf model is more robust than that of constructing an rf map as in horus and radar  for instance  in the above building when measurements are made using a laptop but then are used to localize a different device a smartphone ezs error remains unchanged at 2m whereas that for both horus and radar degrades to 3m or worse  2 related work indoor localization has been an active area of research for the past two decades  initially in the context of robot navigation and more recently in the context of pervasive and mobile computing  here we provide a brief overview of some key research contributions to this area  schemes that require specialized infrastructure  the earliest schemes relied on deploying specialized infrastructure to enable indoor localization  for example  active badge  26   uses infrared  ir  beacons and receivers to perform localization  cricket  22  and bat  27  rely on ultrasound devices being deployed at various locations within the indoor environment as well as on the mobile devices  recently  rfid based systems such as landmarc  19  also have been proposed  the practical deployment of these systems is hindered by the significant cost and effort involved  schemes that build rf signal maps  the proliferation of static  radio-frequency transmitters such as wifi aps and gsm towers has enabled localization without the need for additional infrastructure  the basic approach is to fingerprint each location in the space of interest with a vector of received signal strength  rss  measurements of the various transmitters  a mobile device is then localized by matching the observed rss readings against this database  an early system that used this approach with pre-wifi wlans was radar  4   which used a deterministic fingerprint for each location  since then several schemes have improved upon radar  most notably horus  29   which employs a stochastic description of the rss map and uses a maximum likelihood based approach  commercial localization products have also been built using these methods  8   otsasonet al   25  has demonstrated that gsm signal strength from various towers can also be used for indoor localization  surroundsense  2  builds a map using several features found in typical indoor spaces such as ambient sound  light  color  etc  in addition to wifi rss  all these schemes  however  entail a considerable amount manual effort to perform detailed measurements across the entire indoor space and maintain the rf map over time  efforts have been made to reduce the mapping effort  for instance  by performing measurement at a coarser  room-level granularity  12   however  the overall pre-deployment effort remains substantial  dair  3  eliminates the need for mapping  but it assumes a very dense deployment of wifi transmitters  much denser than typical wifi deployments  174 vironment  rss from an ap that is located in an area surrounded by walls  people and other obstacles might decay at a much faster rate compared to the same from other aps in the indoor environment that enjoy relatively freer signal propagation  r in eqn 1 is a random variable that hopes to capture the variations in the rss due to multi-path effects  asymmetries in the physical environment  e.g  obstructions  and other imperfections in the model itself  based on the ldpl model dij can be computed as   dij = 10 figure 1  knowing enough distances between aps and mobile devices allows unique determination of their relative locations localization using ez to provide a physical intuition to the working of ez  we start with the example depicted in figure 1 in scenario i-a  two mobile nodes  m1 and m2  have measured their distances  d11  d12  d21  d22  from two aps  ap1 and ap2  with the hope of determining their locations relative to the two aps  this is however not possible  since the same set of distances allows for several different possibilities for relative locations  an alternative is depicted in scenario i-b   for a set of three aps and three mobile user locations  as depicted in scenario-ii   it can be shown that knowing all nine pairs of distances between aps and mobile users allows for only one possible realization for their relative positions  such a structure is deemed localizable   or globally rigid  i.e  the entire set of locations can be translated  rotated and reflected  flipped  but not distorted in any manner if all distances are to be preserved  localizability is a well studied area and conditions for localizability have been well studied  28   in general given enough distance constraints between aps and mobile devices  it is possible to establish all their locations in a relative sense  knowing the absolute locations of any three non-collinear mobile devices then allows determination of the absolute locations of the rest  in practice  however  the distances between mobile devices and aps can only be inferred from rss values  pij = pi 10i log dij + r dij =   xj ci  t  xj ci     3  eqn 3 assumes the a priori knowledge of pi and i  ez  takes a novel approach to estimating these  given a set of rss observations between aps and mobile users  pij   ez treats pi and i as unknowns in addition to the unknown locations of aps and mobile users  it then solves the set of simultaneous equations formed by the ldpl model for each rss observation  assume that there are m aps and n unknown locations on a floor  for simplicity assume that all the m aps are visible from each of the n locations  this assumption will be relaxed later in this section   the total number of rss observations and hence the total number of ldpl equations will be mn  assuming 2d locations  each of the n locations has two unknowns namely the x and y coordinates  in xj in eqn 2   each of the m aps has four unknowns namely pi  i and its 2d location  the total number of unknowns is thus 4m + 2n  while mn grows in a quadratic fashion  4m + 2n grows linearly  this suggests that given enough locations  such that mn > 4m + 2n   there will be eventually enough constraints in the system of equations to make the system uniquely solvable  closer examination however  reveals that the system of ldpl equations is scale  translation  rotation and reflection invariant  we do not include the proof due to space constraints   in other words  a solution to ldpl equations will yield locations that are a scaled  translated  rotated and/or reflected version of the true locations  knowing three true  non-collinear locations  either ap or mobile users  then  all the other true locations can be determined  in our implementation  these true locations are obtained opportunistically  when gps enabled mobile devices gain access to gps at the edges of the indoor environment such as entrances and near windows  the above description of relative localization followed by anchoring in an absolute coordinate space  makes for a clean  conceptual separation between the two steps  however  in our implementation  we found it advantageous to combine the two steps  by directly using the absolute locations  obtained opportunistically through gps  throughout the solution procedure  as we elaborate in section 4.2 principle  the difficulty on practice is the need for the aps to be modified to participate in the ad-hoc localization protocol  ez compared to prior work  ez works with existing wifi infrastructure  requiring neither modifications to the aps nor deployment of additional infrastructure  it does not require knowledge of the floorplan  ap placement or power settings  again  it does not require explicit mapping of the indoor space  whether manually or using a robot  finally  ez only relies on measurement of the aps signal at the mobile node  s   not on any mobile-to-mobile measurement  hence ez could even work with measurements by a single device which  over time  traverses the space of interest  3 pi pij 10i 3.1 the nature of ldpl equations  1  ldpl equations  eqn 1  are a system of simultaneous non-linear equations  to the best of our knowledge there exists neither an analytical solution nor any prior work that analyzes them  in this section we attempt to provide the reader with some crucial insights into the nature of solutions to these equations   2  th in eqn 1  the j mobile user located at a distance dij  measured in meters  from the ith ap sees a signal strength of pij  measured in dbm   the location of the ith ap and the j th mobile user measurement are represented by 2d vectors ci and xj respectively in eqn 2 pi is the rss from the ith ap at a distance of one meter  referred to as transmit power henceforth   the path loss exponent i captures the rate of fall of rss in the vicinity of the ith ap  the higher the value of i  the steeper is the fall of rss with distance  the need for having a different i for each ap arises from the fact that rate at which rss falls with distance depends on the local en 3.1.1 solving for the parameters of a solitary ap it is well known that distances from at least three known noncollinear locations are necessary to uniquely determine an unknown location  using trilateration   a corresponding question in ez is  what is the minimum number of known locations at which rss measurements must be taken in order to uniquely determine the four ap parameters namely p  and the 2d location ? if pi and i are known  then an rss measurement pij can be 175 c1  each unknown location must see at least 3 aps  c2  each ap must be seen from at least 5 locations  known or unknown   c3  the jacobian of the system of ldpl equations must have a full rank  equal to the number of variables  for a random choice of the ap parameters and unknown locations  conditions c1 and c2 follow from the discussion in section 3.1 condition c3 essentially linearizes the system of ldpl equations into the form jy = k  where j is the jacobian  y is a vector containing all unknown parameters and k a constant vector  the lack of full rank then exposes any insufficient coupling in the equations i.e  situations similar to that depicted in figure 2 figure 2  illustrating non-localizability 4 computational challenges while there are several different approaches to solving a set of over-determined equations  in our implementation  we attempt to find a solution that minimizes the least mean absolute error   1   jez = pij pi0 + 10 i log dij   4  n ij converted into the distance dij between the unknown location  xj  and the ith ap using the equation eqn 3 a minimum of three such rss measurements at known locations are then required to uniquely establish the location of the ap  in the absence of the knowledge of p and  then  two additional measurements  constraints  will be required to uniquely determine their values  in other words five rss measurements are required to uniquely determine an ap  it also follows that given rss measurements from only four known locations  there will be two possible solutions for  p  and location  that satisfy the set of four rss measurements  due to the lack of space we do not present a formal proof  in eqn 4  n is the total number of ez equations  jez is a non-linear objective function and to the best of our knowledge  does not allow for an analytical closed form solution  optimization schemes such as the newton raphson method  24  or gradient descent  1   gd  are iterative schemes that start from an initial guess and find the closest local minimum  in our initial trials we found that such schemes fail to find a solution to jez since the number of local minima in jez is immense  the other alternatives are search techniques such as simulated annealing  15  or genetic algorithms  6   gas   while genetic algorithms can search the solution space efficiently  they can miss local minima that might provide a reasonably good solution  consequently  to obtain the benefits of both these approaches  in our implementation  we used a hybrid approach that used gradient descent to refine the solutions generated by a ga solving ldpl equations using the ga can take a few minutes to several hours depending on the size of the problem  however  these equations need only be solved once  or periodically once every a few days to refresh the model  to determine the ap locations  their transmit powers and the path loss exponents  once having estimated the model  new location queries can be answered through standard techniques such as trilateration  by converting rss measurements to distances eqn 3  in real-time  3.1.2 the notion of co-circular dependency it is well known that three or more collinear locations can not be used in trilateration to determine an unknown location  a similar yet slightly different situation arises in solving ldpl equations when all the locations where rss observations were taken are cocircular with respect to the ap i.e  lie on a circle centered around the aps location  in this special case  while the location of the ap can be ascertained as the center of the circle passing through these locations  it is impossible to uniquely determine both p and  in ez thus  one must avoid observations that have almost the same rss values from the same ap  3.2 localizability while a necessary criterion for the existence of a unique solution to the system of simultaneous equations is that the number of equations should greater than or equal to the number of variables  this is by no means a sufficient condition  in figure 2  for example  there are 6 aps  ap1 through ap6  and 20 mobile user locations from which rss observations were made  an edge between an ap and a mobile user location is drawn iff the ap can be seen from that location  the number of ldpl equations in this system is 61  and the number of variables is 58 however  from the very structure it is clear that the system is not localizable since the group of aps  ap 1 through ap 3 is free to rotate about ap 4 through ap 6 the localizability question in ez is as follows  given a set of rss measurements at some unknown and known locations  is it possible to determine a unique set of coordinates for all the unknown locations by solving the corresponding ez equations ? the question is extremely relevant because  in practice not all aps may be visible from all locations in the indoor environment  unfortunately  determining the necessary and sufficient conditions under which a set of ldpl equations has a unique solution is still an open problem that we hope to tackle in the future  however  for most practical scenarios  it is possible to determine whether or not a system of ldpl equations can be uniquely solved by making sure that following three conditions are satisfied  4.1 the genetic algorithm the ga starts by picking an initial set of solutions  initial generation  randomly and refining them using gradient descent  a solution consists of a vector of values of all the unknowns to be solved in the ldpl equations  the fitness of each solution is then eval1 uated by computing jez for the solution  thereafter  consecutive generations of solutions are generated in the following manner  1  10 % of the solutions with the highest fitness are retained  2  10 % of the solutions are randomly generated  3  60 % of the solutions are generated by picking two solutions old sold 1  s2 from the previous generation  parent solutions  and mixing them using a random convex linear combination  in other words old snew = a sold 1 +  1 a  s2  5  here  a is a random vector with each element independently randomly drawn from  0  1   1 is vector with all its elements equal to 1 and represents a vector dot product  the newly generated solution is then refined using gd  176 mined using trilateration  these determined locations in turn can be used to determine the parameters of some other aps  the procedure continues until all aps and locations have been determined  the pseudo code for ersga is provided below  4 the remaining 20 % solutions are generated by randomly picking a solution from the previous generation and perturbing it  perturbation based mutation  by adding  or subtracting  random values  drawn from an exponential distribution to allow occasional large perturbations  to all the locations  pi and i  the solutions is then refined using the gd  as generations evolve  solutions with higher fitness are discovered  the ga terminates when solutions do not improve for ten consecutive generations  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  4.2 reducing the search space when the solution space is extremely large  a randomly picked solution is likely to be far from the optimal solution  consequently it may take a large amount of time before the ga stumbles upon it  narrowing the search space can dramatically reduce running times  the most obvious way to narrow search space is to limit the search space of the variables  for example  knowing the dimensions of the floor one can limit the search of the locations to within the floor perimeter  for ap transmission powers we chose a generous search space namely  50  0  dbm  for i we chose the search space  1.5  6.0   we believe that these ranges will be accommodating for most practical indoor deployments  another way to narrow the search space is to leverage constraints inherent to the problem  given m aps and n locations  as discussed in section 3 there are a total of 4m + 2n variables to be picked randomly  however  having picked all the 4m ap parameters the 2n unknown locations can be determined through trilateration  using eqn 3 to convert rss to distances   thus  the ga needs to randomly pick only 4m unknowns rather than 4m + 2n  the search space reduces exponentially with each eliminated variable  the search space can be further reduced by using the already determined  or known  locations  for example  suppose that a particular ap can be seen from three known locations  then after randomly picking p and  its location can be uniquely determined  in general  the underlying constraints in the ldpl equations can be listed as follows  r1  if an ap can be seen from five or more fixed  or determined  locations  then all four of its parameters can be uniquely solved  r2  if an ap can be seen from four fixed locations  there exist only two possible solutions for the four parameters of the ap  r3  if an ap  say ith ap  can be seen from three fixed locations  then after picking i randomly from  1.5,6.0  there exist only two possible solutions that satisfy the observations for the ap location and its transmission power  r4  if an ap can be seen from two fixed locations  then  having picked pi and i randomly  there will be only two possible solutions for its location  r5  if an ap can be seen from one location only  then  after picking pi and i randomly  the ap can only lie on a circle of radius given by eqn 3 centered about the known location  r6  if the parameters for three  or more  aps have been fixed  then all unknown locations that see all these aps can be exactly determined using trilateration  constraints r1-r6 indicate that after selecting only a few of the variables randomly  the rest can be deterministically computed  based on these underlying constraints in epl equations  we devised the ez random solution generation algorithm  ersga   ersga attempts to minimize the number of variables that need to randomly picked among the entire set of variables in a given set of ez equations in a greedy fashion  the essential idea behind ersga is to start by determining ap parameters with as many known locations as possible  upon determining ap parameters for three or more aps  locations that can see these aps can be deter function ersga  ldone  cdone  o  l  base  repeat change = false for i = 1 to m do if i / c then set o = pij |j ldone if |o| l then  ci  pi  i  = aprandominit  l  o  ldone  cdone = cdone  i  change = true if l < base then return true end if end if end if end for if change = false then if l > 0 then change = ersga  ldone  cdone  o  l 1  base  if l < base then return change end if else return change end if end if for j = 1 to n do if j / l then set o = pij |i cdone if |o| 3 then xj = trilaterate  o  c  ldone = ldone  j  change = true end if end if end for until change = true return change ersga is a recursive algorithm that takes five inputs  ldone the set indices of all locations where rss observations were taken that have been determined so far  cdone the set of indices of aps with their ap parameters determined  o is the set of rss observations p1n,1m  l is the recursion level which searches for the constraint ri  base takes a value of 5 if there are 5 or more known locations  otherwise it takes the value of the number of known locations  the entire procedure begins by initializing ldone with indices of all the known locations  cdone as an empty set and l = base  the function aprandominit  l  o  ldone   line 8  finds a set of random ap parameters given l determined  or known  locations based on constraint rule ri  for each value of l in aprandominit  l  o  ldone   a different strategy is used to determine the random ap parameters based on constraints r2-r6  for example  in case of r2 or r3  l = 4  5   the values of the ap parameters are determined through an exhaustive search over several combinations of p and in combination with trilateration  in case of r4  l = 3   is chosen randomly and p is searched exhaustively to determine local minima in 177 mobile device laptop xenovo x61 hp ipaq # 1 hp ipaq # 2 samsung sghi780 # 1 samsung sghi780 # 2 htc adv7510 htc adv7501 rss  in dbm  -41 -43 -31 -51 -49 -49 -37 suppose that two mobile devices  k1 and k2  took rss mea1 > and surements from m aps of qkj11 = < pk1j11  pk2j11   pkmj 1 k2 k2 k2 k2 qj2 = < p1j2  p2j2  pmj2 > from two  unknown  locations  j1 and j2  to factor out the  unknown  receiver gain  we subtract the devices respective rss measurements corresponding to the first ap from the rss of each of the remaining aps  this 1 yields the vectors  vjk11 = < 0  pk2j11 pk1j11   pkmj pk1j11 > 1 k2 k2 k2 k2 k2 k1 and vj2 = < 0  p2j2 p1j2   pmj2 p1j2 >  if vj1 and vjk22 are `` close '' to each other  it means that the rss measurements  qkj11 and qkj22  are similar modulo an offset  hence  it is very likely that the locations  j1 and j2  where these measurements were made are in proximity  in our implementation  if the average difference between the elements of vjk11 and vjk22 is less than 3db  then locations j1 and j2 are deemed as being proximate  rgea uses this criterion to create a set  m k1 k2  of pairs of measurements   pkij11  pkij22  such that j1th and j2th locations are proximate  then   1 gk1 k2 =  p1 p2   7  |m k1 k2 | k k table 1  difference in rss readings across mobile devices the mean absolute error  at l = 0  all ap parameters are generated randomly  5 accommodating receiver gain differences while ideally all mobile devices should measure the same rss at the same location  they often do not  table 1 shows the average rss measured by different mobile devices simultaneously and at the same location  with line-of-sight to an ap  such differences can arise from differences in the receiver gains of these mobile devices and from calibration offsets  since several different mobile devices can participate in ez  such differences can potentially increase localization errors unless these are compensated for  haeberlen et al   12  have suggested maintaining a database of pre-measured differences in receiver gains among various  widely-used mobile devices  however  in our experiments we have found that there are gain differences of 2-7db even among devices of the same make and model  to account for these gain differences we introduce an additional unknown parameter g  the receiver gain for each user  in other words  the ldpl model becomes  pkij = pi gk + 10 i log dkij + r  p1  p2  m 1 2   gij =  1 |m k1 k2 |   p1 p2 gk1 k2  2  p1  p2  m k1 k2  8  in this manner rgea computes gij and  gij  for all pairs of mobile devices whenever possible  note that in many cases two mobile devices i and k might not have even a single pair of measurements from proximate locations  nevertheless  knowing gij and gjk  gik can be estimated transitively as gik = gij + gjk  hence  we can determine gij even for devices that have no measurement locations in common  or in proximity  using the additive property of the receiver gains  to effect the transitive estimation noted above  rgea constructs a graph with a node assigned to each mobile device  an edge is drawn between two nodes if and only if there was at least one pair of measurements that came from proximate locations  each connected component in this graph  then  represents the set of devices whose gain differences can be estimated relative to each other  for each such component  rgea picks a node  device  randomly as the root node and assigns it a gain by sampling uniformly randomly in the interval  20  20  db  to estimate gains corresponding to the other nodes  devices  in the connected component  rgea starts with equations of the form   6  here  k indicates data specific to the kth mobile device  so gk is the receiver gain of the kth mobile device  gk is then estimated using the genetic algorithm along with all the other parameters  as discussed in section 4  narrowing the search space for the parameters of the ldpl model can provide significant gains in the execution time and performance of the genetic algorithm based solver  a span of  20  20  db provides a generous range to search for differences in receiver gains  however  searching for the gains of several mobile devices even in this limited range is not easy  hence  in our implementation  we use a novel scheme the relative gain estimation algorithm  rgea  to provide a coarse-grained estimate of the gain differences among various mobile devices  in other words  rgea estimates the difference in gain  gij = gi gj  between the ith and the j th mobile devices  in addition to estimating gij  rgea also estimates the uncertainty   gij   in the estimate of gij  this information helps the ga significantly narrow the search space for the receiver gains of the mobile devices  gj gi = gij  9  rgea then estimates all the gains  gk  relative to the gain that was randomly assigned to the root node   by solving the simultaneous system of equations 9 in a weighted least mean square sense  the weight for each equation is set as the estimated standard deviation   gij   of the gain difference  in our evaluation we found that rgea estimates receiver gain differences accurately within 1-3db  5.1 relative gain estimation algorithm 5.2 localizing new device with unknown gain the difference in rss measurements obtained using two different devices at the same physical location  or locations that are '' close ''  will be equal to the difference in the devices receiver gains  most rss measurements in ez are collected at unknown locations  how then do we determine that rss measurements from two devices were taken at the same or proximate locations ? to overcome this challenge  ez uses the implication from equation 6 that the difference in rss from two aps measured by a given device at a location   pki1 j pki2 j   is independent of its receiver gain  after the locations  transmit powers and path loss exponents for the aps have been estimated  ez uses these to localize new mobile devices in real time  in the absence of receiver gain differences  as discussed in section 3  the measurement from each ap is converted into an estimate of the distance from that ap using equation 3 knowing at least three such distances from aps  we can use standard trilateration to estimate the location of the mobile device  however  this approach will fail when there are differences in receiver gain  hence  to localize a new mobile device  ez treats its 178 gain also as an unknown  then  ez constructs the set of simultaneous  gain-independent equations as  uses the ez algorithm to construct and maintain the model for the indoor environment in question  since the data from a large number of mobile users can be very large and in many cases not useful for training  thus  ez performs pre-filtering and selects only a useful subset of the available data to learn the model  see section 7   the ez algorithm  described in section 4.1  then uses this data to generate the model  the ez algorithm is computationally intensive and may require several minutes to hours depending on the specifics of the indoor space an the nature of data  the ez server  may potentially reside in the cloud and leverage its computing resource to construct the rf model  the ga is inherently amenable to massively parallel computation  since each of the operations such as crossover and mutation can be parallelized  to take advantage of the parallelism  in our implementation  we implemented each such operation as a separate thread  this allowed us to take advantage of multiple cores at the ez server  the ez ga was run on a hp proline 8-core server class machine  further parallelism can be exploited if the ga is implemented using parallel programming paradigms such as using an mpi interface  the current implementation of the ez server comprises about 7000 lines of c # and python code  pki2 j pki1 j = pi2 pi1 + i1 log  di1 j  i2 log  di2 j   10  in equation 10  dij is the distance of the ith ap from the unknown location of the mobile device  the unknown location of the new mobile device is then estimated by solving these set of equations in a least mean squared sense  to the best of our knowledge  no analytical solution exists to solve the above set of simultaneous equations  since the distances noted in equation 10 embed the unknown coordinates of the mobile device in quadratic form   hence  ez finds the solutions by searching in a bounding box around the aps  6 implementation of ez system the ez system has been built based on a client-server architecture  mobile devices  laptops  cell phones  netbooks etc   act as ez clients and connect to a ez server  the ez server is responsible for providing the location information to the ez clients  the current system can support multiple mobile devices to communicate with the server and obtain location information  all communication between the client and the server has been implemented over tcp sockets  while the current implementation uses wifi for communication  extensions to use a cellular interfaces are possible  7 challenges in real environments 6.1 ez clients in this section we describe in detail the novel practical challenges that we had to address on the path to making a ez based localization system work in real environments  the ez client is a piece of software that can be installed on a variety of mobile devices  we have implemented the ez client for windows mobile 6 and tested it on a variety of smartphones such as htc advantage  samsung sgh i780 and hp ipaq  the ez client has two important tasks  first  it provides location information to mobile applications residing on the device and second it assists the ez server in constructing an rss map of the indoor environment  7.1 selecting the right set of aps the sheer number of wifi aps that could be seen on a given floor in our deployments came to us as a rather unexpected surprise  for example  in one of our deployments we could see a total of about 160 aps across a single office floor ! a large fraction of these actually belonged to neighboring office buildings  another interesting observation was that often each ap was configured with multiple ssids and appears as different aps  clearly  running ez on all observed aps would constitute an immense computational hardship at the cost of incremental gains  consequently  an automated ap filtering mechanism had to be designed that would select the most suitable aps  note that ez has no information as to if these aps belonged to the indoor environment of interest or not  several nave approaches to ap selection can be designed based on desirable properties such as coverage  low standard deviation in rss  and high average signal strength  for ez however  our goal was to minimize the number of selected aps while preserving its performance  to this end  we developed the apselect algorithm  the essential idea behind apselect is to select each ap to provide information that other selected ap do not  information theoretically speaking the mutual entropy between the data from any two aps must be high  apselect however  uses a more approximate and simpler approach  it starts by computing a similarity metric for each pair of aps based on observed rss  aps with the most similar data are then clustered together  a representative ap is then elected from each cluster  to compute the similarity metric  all the rss observations pij from the ith ap at the j th location are first normalized to lie within the range  0,1  by dividing them by 100  since observed rss typically lie in the range 0 to -100 dbm  and then their mean is subtracted from each reading to give a normalized rss observation pnormalized  when rss readings are not available at certain locaij tions  these gaps are filled with a reading of -100 dbm assuming that the rss is below the receive threshold of the receiver  the 6.1.1 location queries the client first checks to see it can obtain the location from gps on the device  if no gps signal is available  it scans its environment for wifi aps in its view  the scanner scans for a few seconds  3 in our implementation  collecting beacons from each ap it sees  it then transmits a list of the mean and standard deviation of the rss seen from various aps to the ez server over the collected data  using the mean reduces errors due to multi-path  scans that yield rss measurements with a standard deviation greater than 10 db are deemed unreliable and are discarded  the ez server then uses the computed model of the rss environment to determine the location of the mobile device in real time and responds to the ez client  the current implementation of the ez client comprises about 2000 lines of c # and c++ code  6.1.2 assisting the ez server in model creation for new indoor spaces  an rss model must be first generated before queries can be answered  for this  the ez clients scan for wifi aps in their range and transmit the observed mean and standard deviation of rss to the ez server exactly in the same manner as a location query  while in our implementation devices periodically perform a scan and push the information to the ez server  this can be easily implemented as a pull  where the ez server requests for a scan  pull is desirable since mobile devices then need scan only when necessary and this can lead to significant energy savings  6.2 the ez server the ez server has two important functions  first  it responds to location queries from the ez clients in real time and second it 179 similarity metric is then computed as  1 |pik pjk | ij = 1 n k large floor used as a call center  fig 3b   this l-shaped floor also contains several obstructions  including pillars  wooden partitions and concrete walls ; and houses a few hundred people   11  8.2 comparisons ij essentially measures how similar rss readings were across all locations  known and unknown  for the two aps  for clustering similar aps  we used hierarchical clustering  initially each ap represents a single cluster and at each following step two of the most similar clusters are merged  the similarity between two ap clusters is computed as the average similarity between all inter-cluster pairs of aps  for selecting a representative ap within a cluster all aps are first ranked in the order of the number of known locations that can be see the ap  an ap that can see a larger number of known locations is given a higher priority  among aps with same priority  an ap which has the highest average similarity to rest of the aps in its cluster is selected as the cluster head  we select the minimum number clusters while ensuring that no two clusters have a similarity greater than 90 %  we demonstrate the efficacy of apselect in section 8 we compare the performance of ez against three schemes  radar  radar is an rss fingerprinting scheme  which involves considerable pre-deployment effort in constructing a database of rss signatures collected from various known locations within the floor  an incoming signature is then matched against this database  the closest match  or the average of k-nearest matches  is returned as the estimated location  we found that averaging with k = 5 performs the best and used it in our evaluations  horus  horus improves on radar by maintaining a probability distribution of the observed rss values at various locations instead of single values  locations are then determined as an average over a few most likely locations  weighed by their likelihood  as in the original implementation  29   we return a weighted average of the top 6 locations  ez+loc  to evaluate the performance of a model-based scheme when given the benefit of knowing all measurement as well as ap locations  we experimented with an ez+loc scheme  which operated as follows  we fed in the locations of all aps and measurement points to ez  and then estimated the transmit power  p  and path loss exponent   for the aps  7.2 selecting a subset of locations for training ez  ideally rss observations must come from several different locations across the indoor environment  for example  data from a single mobile user who actively ventures to different places across the indoor space while his mobile device transmits the rss information to a ez server  alternatively  data from a large number of mobile device users spread out across various locations of the indoor space  given the large amount of data  then  how should we cull out the useful '' subset of data ? to tackle this problem we developed the locselect algorithm  it works exactly the same as apselect  except that we flip the problem by treating the selected aps as locations and vice-versa  in other words each new location is selected such that the rss information it provides has minimum overlap with other selected locations  we demonstrate the efficacy of locselect in section 8  8  8.3 experiment methodology for our experiments  we used two different kinds of mobile devices  a lenovo x61 laptop and an hp ipaq hw6965 smartphone  to build the databases for radar  horus  and ez+loc  we collected rss signatures at grid locations throughout the floor at roughly every 1.5m in small and 3m in large  at every location  we collected a total of 10,000 beacons  an exercise which took us about 5 minutes per location  for ez  a user held the mobile device and simply walked across the floor briefly stopping for about 3 seconds at each location to establish ground truth for evaluation  note that the ground truth information is used only for the evaluation of localization errors  and is not supplied to ez for training  since our laptop was not equipped with a gps unit  we used a commercial gps equipped with a sirf star iii chipset running navigon software for obtaining gps locks  for evaluating the different schemes  we gathered a test data set at a number of locations spread across various sections of the floor  we chose the median and 80th percentile error on this test data set as our evaluation metrics  deployment and results in this section  we present a comprehensive overview of our evaluation methodology and experimental results  which attempts to answer the following questions  what is the cost in terms of localization error paid by ez to achieve the ease and freedom from pre-deployment effort compared to fingerprinting based schemes ? how does ez compare with a model based scheme that has access to ap and measurement locations ? how does the performance of ez improve as more and more measurements become available ? how does the system fare in localizing new devices which are not used in the training process ? how robust is performance to using multiple devices  with different receiver gains  to build the rf model ? how effective are the apselect and locselect algorithms ? what is the computational cost of rf model estimation ? 8.4 performance in small in the data collected for ez  the lenovo x61 laptop was used to obtain rss readings from 48 unknown locations  depicted as hollow triangles in figure 3a   and also 3 known locations  depicted as filled triangles in figure 3a   where a gps lock was obtained  our data showed that 48 different aps  mac addresses  were visible from this floor  many of these aps did not belong to small  apselect selected 4 aps from these 48  which coincidentally all of these belonged to small  for radar and horus we used all the 48 visible aps since this constituted the most information  some studies  4  have reported that having a larger number of aps sometimes degrades performance  consequently  we tested radar and horus with smaller subsets of aps obtained from apselect and found that the best performance  in terms of mean square error  was indeed obtained when all 48 aps were selected  for ez+loc  we had location information only for four aps  and we used these aps for localization  8.1 deployment in two buildings we have deployed ez in two different office buildings  the first  henceforth referred to as small  is a typical office floor housing around 30 people  fig 3a   the floor comprises several obstructions in the form of concrete walls  wooden partitions  and glass/metal doors  the second  henceforth referred to as large  is a very 180  a  small  b  large 1 0.8 0.8 0.6 0.4 ez radar horus ez+loc 0.2 0 0 1 2 3 4 5 6 0.6 0.4 ez radar 10 aps radar 156 aps horus ez+loc 0.2 6 0 0 5 10 15 error  m  error  m  20 location error  m  1 probability probability figure 3  floorplans for the buildings  5 4 3 2 mean median 80 percentile 1 0 0 20 40 60 80 100 fraction of training data  %  figure 4  cdf of localization errors in small figure 5  cdf of localization errors in large figure 6  dependence of ezs performance on using the lenovo x61 laptop  using the lenovo x61 laptop  amount of training data ez+loc  we obtained locations for 12 of these aps  radar and horus database were created using all the 156 aps  ez used apselect algorithm  which picked 10 out of the 156 aps found  for testing we collected rss readings at a separate testing set of 40 locations and evaluated all the four schemes over these locations  as in the case of small  horus performed the best with 50 and 80 percentile errors of 4m and 7m  respectively  however  radar performed significantly worse  median error of 7m and 80 percentile of 12m   indicating the need for careful selection of aps  in the absence of any specified scheme for the selection of aps for radar  4   we used apselect to pick out a smaller subset of aps  the best performance of radar was found with 10 aps  with the 50 and 80 percentile errors being 5m and 7m  respectively  we also ran horus with different subsets of aps selected using apselect  but the best performance was achieved with all the 156 aps  ez yielded 50 and 80 percentile errors of 7m and 10m  respectively  this implies that localization accuracy was within two to three cubicles in the call center  the accuracy is still quite useful since the office building is quite large and houses a few hundred cubicles  as in case of the small building  ez+loc performed significantly worse than ez  figure 4 depicts the cumulative distribution of localization errors obtained for all the four localization schemes  horus performs the best with 50th and 80th percentile error of 0.7m and 1.3m respectively  followed by radar with values of 1.3m and 2.1m for the same  ez provides a 50th percentile error of 2m and an 80th percentile error of 3.3m  an office cube in this floor is roughly 3m in size  contrary to what we expected  ez+loc performed the worst  with error values of 3.1m and 4.4m respectively  to understand the reason for this  we analyzed the rss map generated by ez and ez+loc and found that ezs map was closer to reality although the locations and transmit powers of the aps it found did not match exactly with the ground truth  while ez had the flexibility to compensate for estimation errors in the path loss exponent   by adjusting the estimated locations of the aps  ez+loc did not have this luxury  consequently  it could not compensate for the errors in the model  thus  fixing the ap locations resulted in degraded performance  8.5 performance in large in this experiment rss data was collected for ez at 101 different locations within this floor  as depicted by the triangles in figure 3b  the entire floor is not well ventilated and has few very small windows  as a result we could not obtain a gps lock at any location within this floor  however  this was an excellent opportunity to test the performance of ez on a large floor  so we selected points that were closest to the boundaries of the floor and deemed these as known locations  there were 15 such known locations in the training data  depicted as filled triangles in figure 3b  we processed the collected data  and found 156 different ap mac addresses  only a few of which belonged to the office  for 8.6 dependence on amount of training data as users cover more ground within the indoor environment and hence more rss measurements become available for training  we would expect ezs performance to improve  to evaluate this  we started with measurement data from the full set of 50 locations in small  we then selected random subsets comprising 20 %  40 %  60 %  80 %  and 100 % of the full measurement data  such that each successive subset included the previous subsets  we then trained 181 1 1 0.8 probability probability 0.8 0.6 0.4 ez laptopipaq ez ipaqipaq radar horus ez+loc 0.2 0 0 1 2 3 4 5 0.6 0.4 0.2 6 laptop ipaq # 1 ipaq # 2 0 0 error  m  1 2 3 4 5 6 7 error  m  figure 7  performance on a new mobile device figure 8  locations of the two mobile devices figure 9  training with different mobile devices 15 25m x 25m median 25m x 25m mean 25m x 25m 80 % ile 100m x 100m median 100m x 100m mean 100m x 100m 80 % ile 10 5 0 0 1 1 0.8 0.8 probability 20 used in the ez model construction probability location error  m  in small 0.6 0.4 0.2 5 10 15 20 number of devices figure 10  dependence of ezs performance on number of different devices 0 0 apselect naive average rss naive max rss 2 4 6 8 10 12 error  m  14 16 18 20 figure 11  apselect versus naive schemes 0.6 0.4 0.2 0 0 ez 100 % data ez locselect 25 % ez random 25 % 2 4 6 8 10 12 14 16 18 20 error  m  figure 12  locselect versus random 25 % to collect ground truth information  to train ez using the ipaq  the curve labeled ez ipaq-ipaq shows the result from this experiment  indeed it can be seen that the performance is almost similar for the curves ez ipaq-ipaq and ez laptop-ipaq  the relatively poor performance of  unmodified  radar and horus  as shown in figure 7  highlights the importance of estimating and compensating for differences in receiver gain  even when multiple devices of the same type are used for measurement  it is likely that horus and radar would perform better if also given the benefit of gain compensation  however  unlike ez  it is unclear how either horus or radar could automatically estimate the gain for a new device that has not been used to create the rss map  ez using these subsets and evaluated localization accuracy using a separate test data set gathered at 30 locations within small  we repeated the above procedure of evaluating ez with random subsets 10 times  figure 6 depicts the median  mean  and 80th percentile of the localization errors over the 10 runs  even with only 20 % of the training data  i.e  10 measurement points  being available  ez is able to achieve a median error of about 3m  as more training data is made available  the median and 80th percentile errors progressively decrease to under 2m and 4m  respectively  8.7 performance for a new mobile device how well does ez localize a new mobile device that has never been used to generate the model ? in particular  how does the receiver gain difference among receivers  as discussed in section 7  affect performance ? to answer these questions  we collected rss signatures at 40 different locations in small using the ipaq smartphone  we then localized these positions using the model generated with measurements made using the laptop  in ez  in addition to the location of the mobile device  we also estimate its  unknown  receiver gain  g  as discussed in section 7 we experimentally determined the gain difference to be roughly 11db  although this information was not supplied to ez  note that none of the schemes other than ez provide mechanisms to estimate or correct for errors due to differences in receiver gain  figure 7 shows the cdf of errors over these 40 points  the first key observation is that ez outperforms all the other schemes  curve ez laptop-ipaq in the figure   this clearly demonstrates the benefit of ezs estimation and compensation of receiver gain for the new device  ez yields 50 and 80 percentile errors of 1.8m and 2.8m  respectively  to determine how the performance would have been if the model was built using the same device  we had a user walk around the floor  with intermittent stops lasting a few seconds 8.8 training with data from multiple devices all our results with ez so far have utilized data collected using a single device for training  however  in practical scenarios  multiple users would provide training data  how does ez perform when multiple devices are used for data collection ? to analyze the behavior of ez under such a setting  we used a mixture of data from the laptop and ipaq  ipaq # 1  for training  as shown in figure 8  the laptop user limited themselves to the south side of the building while the ipaq # 1 user restricted themselves to the north side  the two users had a common area of coverage  about 6 locations  indicated by the dotted ellipse  in the region between the kitchen and the entrance to the floor  ez was able to used these locations to compute the receiver gain offsets between the two devices as discussed in section 7 for testing purpose  we collected observations at approximately 30 different locations on three different mobile devices  two of these were the ones used for training  i.e  the laptop and ipaq # 1 the third was another ipaq  which we label as ipaq # 2 experimentally we determined that ipaq # 1 and ipaq # 2 had a receiver 182 m n known 5 5 5 50 25 12 3 3 3 time in minutes lenovo t61 server 65 53 38 22 16 12 figure 14  ez running times  a  locations selected by locselect  b  locations selected randomly figure 13  spatial distribution of errors at various locations from ez  all the locations for each ap and selects the strongest aps  the second scheme  maxrssapselect finds the maximum rss across all locations for each ap and then selects the top aps  to be fair and consistent with apselect  we selected the same number of aps using the two alternate schemes  figure 11 depicts the cdf obtained by training ez on each of selected set of aps on the small data set  we see that the set of aps selected by apselect significantly outperforms those by the other two schemes  upon inspecting the distribution of rss seen at various locations for aps given by avgrssapselect and maxrssapselect  we noticed a curious occurrence  two different pairs of aps selected in both schemes showed almost the same rss values at all locations  in other words they were co-located aps on different channels  apselect wisely avoided picking both of them since they were providing the same information  gain difference of about 7db while ipaq-1 and the laptop had a receiver gain difference of 11db  note that this information was not supplied to ez  as seen from figure 9  the performance of all three devices is almost the same  yielding median and 80th percentile errors of about 2m and 4m  respectively  how does ezs performance scale as the number and diversity of the mobile devices grows ? to answer this question  we built a custom simulator  we assumed two floor sizes  25m 25m and 100m 100m  ap locations were generated randomly in the floor and each ap was assigned random values of p  in -20dbm to -50dbm  and  in 2 to 5   5 aps were used for the 25m 25m floor and 9 for the 100m 100m floor  these choices were based on our experience from actual deployments  ten batches each of training and testing locations  100 points each  were generated randomly for each floor  from each batch of training locations  five different training data sets were derived  corresponding to there being 1  5  10  15  or 20 devices  a training data set with k devices was derived by creating k partitions in the batch of training locations and assigning each partition to a different mobile device  to generate the measured rss values  our simulator used the ldpl model  with a randomly picked gain  g in equation 6  in the range  0,20  db assigned to each device  temporal variations in rss were modeled using a gaussian random variable with a standard deviation of 3db  finally  all training locations within 3m from the boundary were assumed to acquire gps and hence deemed as known locations  thus  the above procedure ensured that for each batch of locations  we had runs of the experiment that only differed in the number of mobile devices  to evaluate localization accuracy for a new mobile device  we generated rss measurements at the locations in the testing set  using another random gain value drawn from  0,20  db corresponding to the new device  for each training data set  we used ez to estimate the ap parameters  we then used these to estimate the locations of the new device in the test set and then compute the localization error  figure 10 depicts the median  mean and 80th percentile errors across the 15 batches of training and testing locations for each of the two floors  we see that the accuracy of ez does not change significantly with an increasing number of mobile devices  this indicates that the rgea algorithm  section 5  is able to effectively estimate and compensate for gain differences across mobile devices  8.10 the efficacy of locselect locselect carefully picks a subset of the rss data collected across locations with the goal of reducing model training time while incurring a minimum loss in localization performance  to evaluate the efficacy of locselect  we selected 25 % of the locations using locselect and trained ez  the estimated ap parameters were then used to estimate error over a separate testing set of 30 locations  to investigate how a randomly picked subset would perform  we then picked 25 % of the locations randomly and trained ez on these randomly picked locations  localization error was then evaluated over the testing set  figure 12 depicts the cdf of the errors obtained from the two strategies  the cdf obtained by running ez with all the locations is provided as reference  as seen in figure 12  both the 50 and 80 percentile errors obtained by using just 25 % of the unknown locations match those obtained by picking all the unknown locations ! random selection  however  did not perform as well  with the 80 percentile error being almost 7m  figures 13a and 13b depict the spatial distribution of locations errors across the entire floor  the locations that were picked for training ez are indicated by solid circles  as seen from figure 13a and 13b  the distribution of the selected locations appears to be random  however  these locations are  in fact  picked carefully using locselect and these help ez learn the rf model accurately  8.11 running time of ez 8.9 the efficacy of apselect the time taken by ez to estimate the rf model depends on several factors including the number of unknowns  locations and ap parameters   the nature of data  data that fits the model well is solved faster   the number and placement of known locations  we showcase the efficacy of our apselect algorithm by comparing it with two  nave  versions of ap selection schemes  our first scheme  avgrssapselect computes the average rss seen across 183 12 references the distribution of the unknown locations and finally the choice of initial solutions that were randomly picked for the ga and their number  in table 14 we provide the typical running times that we observed while training ez  these measurements were conducted by training ez on two different machines  the first  a lenovo t61p laptop and the other hp proline which was a server class machine with 8 cores  note that model estimation is an offline task and one that is likely to be repeated infrequently for a given indoor space  so a relatively long running time is not a hindrance  9   1  m avriel  nonlinear programming  analysis and methods  dover publishing  2003   2  m azizyan  i constandache  and r roy choudhury  surroundsense  mobile phone localization via ambience fingerprinting  in mobicom  2009   3  p bahl  j padhye  l ravindranath  m singh  a wolman  and b zill  dair  a framework for managing enterprise wireless networks using desktop infrastructure  in hotnets  2005   4  p bahl and v n padmanabhan  radar  an inbuilding rf-based user location and tracking system  in infocom  2000   5  p bahl  v n padmanabhan  and a balachandran  enhancements to the radar user location and tracking system  feb 2000 microsoft research technical report msr-tr-2000-12   6  w banzhaf  p nordin  r keller  and f francone  genetic programming  an introduction  morgan kaufmann  1998   7  s capkun  m hamdi  and j hubaux  gps-free positioning in mobile ad-hoc networks  in hicss  2001   8  ekahau  http  //www.ekahau.com/   9  b ferris  d fox  and n lawrence  wifi slam using gaussian process latent variable model  in jcai  january 2007   10  s guha  r murty  and e g sirer  sextant  a unified node and event localization framework using non-convex constraints  in mobihoc  2005   11  y gwon and r jain  error characteristics and calibration-free techniques for wireless lan-based location estimation  in mobiwac  2004   12  a haeberlen  e flannery  a m ladd  a rudys  d s wallach  and l e kavraki  practical robust localization over large-scale 802.11 wireless networks  in mobicom  2004   13  y ji  s biaz  s pandey  and p agrawal  ariadne  a dynamic indoor signal map construction and localization system  in mobisys  2006   14  n b john  j heidemann  and d estrin  gps-less low cost outdoor localization for very small devices  ieee personal communications magazine  7:2834  2000   15  s kirkpatrick  c d gelatt  and m p vecchi  optimization by simulated annealing  science  new series  220:671680  1983   16  j leonard and h f durrant-whyte  simultanoues map building and localization for an autonomous mobile robot  in iros  pages 14421447  1991   17  h lim  c l kung  j c hou  and h luo  zero configuration robust indoor localization  theory and experimentation  in infocom  2006   18  d madigan  e e  r p martin  w ju  p krishnan  and a krishnakumar  bayesian indoor positioning systems  in infocom  2005   19  l ni  y liu  c yiu  and a patil  landmarc  indoor location sensing using active rfid  in winet  2004   20  d niculescu and b nath  ad-hoc position system  in ieee globecom  2001   21  d niculescu and b nath  ad-hoc positioning system  aps  using aoa  in infocom  2003   22  n b priyantha  a chakraborty  and h balakrishnan  the cricket location-support system  in mobicom  2000   23  a savvides  c han  and m srivastava  fine-grained localization in ad-hoc networks of sensors  in mobicom  2001   24  e sli and d mayers  an introduction to numerical analysis  cambridge university press  2003   25  a varshavsky  e lara  j hightower  a lamarca  and v otsason  gsm indoor localization  pervasive and mobile computing  2007   26  r want and et al  the active badge location system  acm transactions on information systems  jan 1992   27  a ward  a jones  and a hopper  a new location technique for the active office  ieee per  comm  4  5  :4247  1997   28  z yang  y liu  and x.-y  li  beyond trilateration  on the localizability of wireless ad-hoc networks  in infocom  2009   29  m youssef and a agrawala  the horus wlan location determination system  in mobisys  2005 discussion there are several challenging extensions to the current state of ez  in this section we briefly describe a few of these  all of our evaluation has been based on measurements made from within the indoor space of interest  how would we ensure this in practice ? the ez framework from section 3 does not explicitly assume that the measurements are made within the indoor space of interest  however  measurements taken from outside the space could distort the solution due to signal attenuation from significant obstructions such as the exterior walls  such rss measurements would however stand out as outliers  due to their poor fit in eqn 1  and could be identified and discarded accordingly  we hope to address this in our future work  energy is an important consideration for mobile devices  scanning for wifi devices or obtaining a gps lock  and transmitting this information to the ez server  could consume a significant amount of energy  the energy cost could be reduced by having the ez server pull in rss information from mobile devices only when needed  furthermore  such crowd-sourcing of information can be effected in a manner that balances the burden across mobile devices while also being cognizant of their battery levels  thus  the energy cost for any individual mobile device would be minimal  finally  the parameters of the rf model are likely to be subject to diurnal variations  for instance  rf propagation might be more severely attenuated when an airport or a mall is crowded than when it is sparsely populated  to address this issue  we could construct separate models for different times of the day and borrow from prior work on rf environment profiling  5   10 conclusion ez is a novel  configuration-free indoor localization scheme that uses existing wifi infrastructure to localize mobile devices  it does not require any pre-deployment effort  infrastructure support  prior knowledge about wifi aps  or active user participation  ez learns by collecting data from mobile devices carried by users as they traverse the indoor space of interest in normal course  we have implemented ez and compared it against radar and horus  localization schemes that use rf fingerprinting  and also a scheme that leverages knowledge of ap and measurement locations  based on deployment in two different office buildings  ezs performance is only somewhat worse than that of schemes that depend on extensive mapping effort  median error of 2m with ez compared to 0.7m and 1.3m with horus and radar  respectively   while more being robust to device diversity  in future work  we plan to extend ez to 3 dimensions and  separately  investigate energy efficiency issues  11 acknowledgements we thank our shepherd  alex snoeren  and the anonymous reviewers for their constructive comments  we also thank moses raju  vinod mathews and santhanam lakshmanan for helping us with conducting experiments in microsoft gtsc  india  184 