practical robust localization over large-scale 802.11 wireless networks andreas haeberlen eliot flannery andrew m ladd rice university rice university rice university ahae @ cs.rice.edu ef @ cs.rice.edu aladd @ cs.rice.edu algis rudys dan s wallach lydia e kavraki rice university rice university rice university arudys @ cs.rice.edu dwallach @ cs.rice.edu kavraki @ cs.rice.edu abstract general terms we demonstrate a system built using probabilistic techniques that allows for remarkably accurate localization across our entire office building using nothing more than the built-in signal intensity meter supplied by standard 802.11 cards  while prior systems have required significant investments of human labor to build a detailed signal map  we can train our system by spending less than one minute per office or region  walking around with a laptop and recording the observed signal intensities of our buildings unmodified base stations  we actually collected over two minutes of data per office or region  about 28 man-hours of effort  using less than half of this data to train the localizer  we can localize a user to the precise  correct location in over 95 % of our attempts  across the entire building  even in the most pathological cases  we almost never localize a user any more distant than to the neighboring office  a user can obtain this level of accuracy with only two or three signal intensity measurements  allowing for a high frame rate of localization results  furthermore  with a brief calibration period  our system can be adapted to work with previously unknown user hardware  we present results demonstrating the robustness of our system against a variety of untrained time-varying phenomena  including the presence or absence of people in the building across the day  our system is sufficiently robust to enable a variety of locationaware applications without requiring special-purpose hardware or complicated training and calibration procedures  algorithms  design  experimentation  measurement categories and subject descriptors c.2.1  computer systems organization   network architecture and designwireless communication ; g.3  mathematics of computing   probability and statisticsmarkov processes  probabilistic algorithms ; i.2.9  computing methodologies   roboticssensors ; i.5.1  pattern recognition   models statistical permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page  to copy otherwise  to republish  to post on servers or to redistribute to lists  requires prior specific permission and/or a fee  mobicom04  sept 26-oct 1  2004  philadelphia  pennsylvania  usa  copyright 2004 acm 1-58113-868-7/04/0009  $ 5.00  keywords 802.11  wireless networks  mobile systems  topological localization  bayesian methods  location-aware computing 1 introduction a practical scheme for mobile device location awareness has long been a target of mobility research  many interesting applications  including systems like easyliving  6  and the rhino project  1   among others  2,13,14,35   would benefit from a practical locationsensing system  until now  however  indoor location-sensing systems have either required specialized hardware  involved lengthy training steps  or had poor precision  a practical scheme should have relatively low training time  achieve high accuracy  use widely-deployed off-the-shelf hardware  and be robust in the face of untrained variations  most previous indoor location-sensing schemes have been based on occupancy grid models of the environment  such schemes divide the environment into a coordinate grid  with one to two meter precision  and attempt to map a devices location to a point on that grid  occupancy grid systems require lengthy training at each point in the grid to achieve usable accuracy  many location-aware applications  however  do not need one to two meter precision for the location of a mobile device  we use a topological model of our environment  in which the building is divided into cells which each map to a region in our building  i.e  a specific office or a hallway segment   and we map a devices location to a cell instead of a point  in this way  we trade off some metric resolution for a dramatic reduction in training time  room or region-level granularity of location provides sufficient context for many location-aware applications  additionally  operating at a coarser granularity leads to an improvement in localization robustness  and allows localization to occur with fewer samples  and thus operate at a higher frame rate  we present a high-precision topological location inference technique based on bayesian inference and using the 802.11 wireless network protocol  most significant in our work is the scale  we deployed our wireless location-sensing system in our entire office building  which is over 12,000 square meters in area  our technique can localize a device to one of 510 cells in the building within seconds ; it succeeded in over 95 % of all attempts  when the localization is off  it is almost always off by only one cell  e.g  it thinks you are in the adjacent office   a training time of around 60 seconds per room is sufficient ; thus  a small team can measure an entire office building in an evening  our techniques are robust even against time-of-day variation  including the presence or absence or large groups of people in the same room as the platform being localized  furthermore  our techniques allow us to calibrate and use 802.11 implementations different from the system used to initially measure the building  our system supports both static localization and dynamic tracking at speeds of over 3 m/s  we describe our basic localization system and report its performance in section 2 our analysis and experimental results on timevarying phenomena are presented in section 3 section 4 presents our calibration technique  which is designed to compensate for variations in hardware and time-varying phenomena  we discuss our results in section 5 and present our conclusions in section 6  1.1 related work location-aware computing  10,22  is primarily concerned with determining the location of a mobile computing device  early inbuilding location-sensing systems required specialized hardware to ascertain a devices location  for example  the active badge system relied on specialized tags which emitted diffuse infrared pulses detected by ceiling-mounted sensors  55   the later active bat system used ultrasound time-of-flight information  56   the cricket compass  40  41  used specialized ultrasound and radio frequency receivers to detect signals transmitted by fixed beacons  in spoton  23   specialized wireless devices use signal intensity to localize either against fixed base stations or against one another in an ad-hoc fashion  finally  easyliving  28  uses cameras to determine location  later systems for location-aware computing used off-the-shelf wireless networking hardware  measuring radio frequency signal intensity to determine the location of a mobile computing device  radar  4  5  was one of the first systems to use rf signal intensity for location-sensing  small et al   46  and smailagic et al   45  looked at how signal intensity varies over time and developed a location-sensing system based on these observations  gwon et al   20  discuss two deterministic schemes for aggregating and improving the output of a location-sensing system  the most recent systems have used probabilistic techniques for sensing a devices location  nibble  9   one of the first systems of this generation  used a neural network to estimate a devices location  in our first work on wireless location sensing  31   we developed a grid-based bayesian location-sensing system over a small region of our office building  achieving localization and tracking to within 1.5 meters over 50 % of the time  roos et al   43  implemented a similar system and got similar localization results  they are also the first to compare taking a gaussian fit of signal strength to using the full histogram of signal strength  although they came to no definite conclusion on this  in a follow-up to our previous work  31   we explored variations in hardware and transmission power  and addressed the symmetry of localizing a laptop by measuring the signal intensity of packets transmitted from a mobile device as received by a base station versus packets transmitted by a base station and received by the device  48   clustering techniques have also been applied to the problem of location determination  58   krumm and platt  29  introduced a number of techniques for simplifying the process of training a locationsensing system  including localizing based on topological regions  e.g  rooms  rather than grid coordinates  finally  ekahau  inc  16  offer a wireless location-sensing system commercially ; they claim 1 meter accuracy with a short training time  although they do not detail how their system works  a number of localization techniques have been developed for other wireless technologies  for instance  in part as a result of the fccs e911 initiative  17   a number of systems have used rf signal intensity to determine the location of cellular phones  33  57   however  in the field of outdoor location-sensing  gps  34  is still the standard  wireless localization techniques have also been explored for localization in sensor networks  sensor networks are ad hoc networks of many autonomous nodes deployed to perform a variety of distributed sensing tasks  24,27,39   some techniques use signal properties  including signal strength  21   difference in time-of-arrival for rf versus ultrasound signals  44  and angle of arrival  37   to determine the physical location of sensor nodes  other techniques use such factors as what nodes are in range  7  and routing information  36,38  to localize sensor nodes relative to one-another  sequential monte carlo localization  25  utilizes the movement of sensor nodes to get improved accuracy of localization  wireless location-sensing is actually a specialized case of a well-studied problem in mobile robotics  that of robot localization determining the position of a mobile robot given input from the robots various sensors  possibly including gps  sonar  vision  and ultrasound sensors   robot localization has been described as the most fundamental problem of building autonomous robots  12   our system and others like it use the signal intensity readings from 802.11 cards as a sensor and implement bayesian localization algorithms commonly used in various robotics applications  8  15  19  49   thrun  49  provides a comprehensive survey of probabilistic localization methods used in mobile robotics  our system creates a topological map for localization  a topological map models the environment as a graph  with each node representing a region  such as a particular room or corridor   and each edge representing regions that are connected in space  remolina and kuipers  42  present a comprehensive formal theory of topological mapping  most work on topological mapping was originally explored as a means of building a map of an environment while simultaneously localizing within that map  11,30,50,51,54   2 localization in this section  we describe the basic localization framework that we use and present experimental results for its deployment in an office building  similar to our previous work  31   our current system uses markov localization  49   however  rather than measuring every base stations signal intensity distribution at points spaced 1.5 meters apart  we instead collected signal intensity measurements for whole offices and hallway segments  treating the entire office or hallway segment as a single position  the average area of each such position was 24.6 square meters  265.1 square feet   hallways and large rooms  such as lecture halls  were broken up and treated as multiple positions  each about the size of a large office  the distribution of signal intensities for each base station was then fit to a normal distribution  we experimentally evaluated this distribution-fitting approach against the histogram approach used in our previous work  and our results show that it provides a substantial increase in robustness and a decrease in the number of observations required to train the sensor model  these improvements are in addition to the improvements gained by switching to a topological map from a geometric map  2.1 802.11 wireless networking our localization system is based on the 802.11 wireless networking protocol  which is inexpensive and widely deployed on college campuses and in commercial offices  likewise  most new laptop computers and pdas have built-in support  802.11 uses 11 channels in the 2.4 ghz industrial  scientific  and medical  ism  band  signal propagation in this band is complex  as many previous studies have confirmed  31  46  48   as a part of its normal operation  client-side wireless hardware measures signal intensity from base stations to determine the best base station with which to associate  as a result  this mechanism is a part of the 802.11 specification  and the functionality is readily available in the hardware device driver  the 802.11 network card tunes into each channel in turn  sends a proberequest packet and logs any corresponding proberesponse packets it receives  26   doing this for all 11 channels takes approximately 1.6 seconds with the combination of hardware and drivers we used  as described in section 2.3.1 our localization system uses the signal intensities observed from this process  observation set consists of o = b v  in this paper  we model the signal intensity as a normal distribution determined by the state and base station  given state si and base station b j  the signal intensity distribution is determined by its mean i  j and standard deviation i  j  the probability of observing  b j  v  o at state si is given by   gi  j  v  + p  b j  v  |si =  ni  j where gi  j  v  = z v+1/2  xi  j  /  22i  j  e v1/2 i  j 2 dx  distribution gi  j  v  is a discretization of a gaussian probability   with mean i  j and standard deviation i  j  p  b j  v  |si adds a null hypothesis and normalizes the resulting distribution  is small constant used to represent the probability of observing an artifact and ni  j is a normalizer such that 255 p    b j  v  |si = 1 v=0 2.2 localization models 2.2.1 bayesian localization framework the basic localization problem consists of determining an agents state  or position   s  given one or more observations  the problem can be modeled by using a finite state space s =  s1      sn  and a finite observation space o =  o1      om   each state si corresponds to the case of the agent being in cell i in a probabilistic localization framework  the agents estimate of its state is represented as a probability distribution over s  where i = p  si = s   this method is useful since it can quantify the uncertain relationship between state and observation  in the markov localization  ml  approach  49   the probability distribution over the observation space is determined completely by the current state  in particular  the relationship between state and observation can be represented by a matrix of conditional probabilities which encode the probability of observing o j o given that the agent is in state si  which is written p  o j |si   this matrix of conditional probabilities is referred to as the sensor model  suppose the agent has a prior estimate of its state and observes o j  an updated estimate  is computed using bayes rule as follows  i = p  o j |si  i  where = n p  o j |si  i  i=1 the quantity is the normalizer for the estimate and is sometimes referred to as the confidence  the confidence value can be used to quantify how certain the new position estimate is  in particular  the confidence value can be used for several different algorithmic extensions to markov localization  by examining confidence  the localizer can choose between several different strategies in the case where one strategy is failing systematically  important examples include the sensor resetting localizer  32  and various hybrid monte carlo localizers  53   the confidence is also used to calibrate the system  as described in section 4  2.2.2 gaussian fit sensor model in our implementation  we fix a set b =  b1      bk  of base stations and a set v =  0      255  of signal intensity values  the 2.2.3 histogram sensor model our previous work on localization with 802.11 represented the sensor model explicitly  31   in this explicit model  each p  o j |si  is stored in a table  we call this method the histogram method since for each si  the p  o j |si  are determined by the normalized signal intensity histograms recorded during the training phase  the histogram model can accurately represent non-gaussian signal intensity distributions which can only be grossly summarized by a best-fit gaussian curve  however  as we will see in section 2.4.1  this does not necessarily give increased localization accuracy ; the training can capture transient minor modes  or miss minor modes entirely  also  the gaussian model can be described by only two parameters for each base station and cell ; keeping the entire histogram requires as much as 30 times more storage  2.3 experimental setup 2.3.1 hardware overview our building has 27 cisco aironet 1200 series base stations with 802.11a/b support  which were installed over a year ago ; their locations were chosen so as to provide consistent coverage throughout the building  in addition to these  we used signals from six other base stations in adjacent buildings that covered at least part of our building ; thus  our signal space has 33 dimensions  during both training and testing  we occasionally observed transient stations with essids like linksys and itcomputer  which we ignored  the locations of these base stations remained fixed for all of our experiments  on the client side  we used d-link airplus dwl-650+ wlan pcmcia cards with the texas instruments acx100 chipset  our experiments were performed on a dell latitude x200 laptop running the linux 2.4.25 kernel and an ibm thinkpad t40p running the linux 2.4.20 kernel  we used the open-source acx100 driver from sourceforge  3  with a few modifications for stability  we also optimized the code that handles base station scanning to reduce the time required for each individual scan  base station scans were performed on-demand using a standard function in the linux wireless api ; the network card does not need to be in a special mode to initiate such a scan  as discussed in section 2.1  base station scanning is a standard capability of 802.11 wireless network cards  however  while the wireless network card is performing a scan  it can not be used for data traffic   a   b   c  figure 1  sensor map within duncan hall for a base station located on the second floor  base stations are represented as black diamonds with white antennas ; the base station from which this sensor map was generated is circled   a  is the first floor ;  b  is the second floor ;  c  is the third floor  each shaded square represents a single training and testing cell  darker squares indicate stronger readings   a   b   c  figure 2  map showing robustness of the gaussian localization algorithm in duncan hall   a  is the first floor ;  b  is the second floor ;  c  is the third floor  each shaded square represents a single training and testing cell  the darkness of the square indicates the percent of trials for which the localizer indicated the correct location at that position  2.3.2 our building 2.3.3 topology we divided the building into 510 different cells on the topological map  this was done manually by placing cells on a floor plan of the building and took approximately one hour ; for larger buildings  however  this process can be easily automated  typically there is one cell per office  for large labs and lecture halls  however  the standard deviation of reported signal intensities would have been too high for localization to be usable  as a result  we assigned different cells to different regions of these rooms ; these different cells were trained separately  but could be treated as a single cell for the purpose of localization  we also assigned cells to hallway segments  figures 1 and 2 show how these training points are distributed throughout the building  cell sizes varied over the building  the typical office size  and therefore  cell size  is approximately 2.7 by 4.9 meters  9 by 16 feet   the largest room trained as a single cell is approximately 6 by 6 meters  19.7 by 19.7 feet   most hallways are 1.6 meters  5.3 feet  wide  and are partitioned into cells of segments approximately 5.7 meters  18.7 feet  long  we also trained cells for outdoor locations  including third-floor balconies and a first-floor arcade  to track agents as they move  we built a transition graph over the set of cells  this graph contains 1,159 edges  including selftransition edges   and the average out-degree is 3.55 it represents navigable paths in our building  encoding the fact that one can not pass through walls except via doors  and one can not switch floors except via a staircase  95 percent correct we deployed our location-sensing system in duncan hall on the rice university campus  a building which consists of three stories plus attic and basement utility spaces  duncan hall has over 200 offices  as well as several conference rooms  five classrooms  and an auditorium  the total area of the building is 12,558.4 square meters  135,178 square feet   maps of the three floors of duncan hall are shown in figures 1 and 2 the most notable feature of our building is its complex geometry  the building has a large clerestory ceiling ; the main hall on the east side of the building  the wide hallway connected to it  and staircases beginning at the hall and hallway are all open above  the hallways surrounding the atrium and the hallways passing over the wide hallway on the second and third floors all contain balconies overlooking the first floor  and many of these are open to the clerestory ceiling above  in addition  all of the interior offices on the third floor are open above  and all but eleven of the interior offices have windows into the interior of the building  100 90 85 80 gaussian histogram 75 70 0 2 4 6 sample size 8 10 12 figure 3  bulk accuracy of localization methods after different numbers of observations  we collected a total of 51,249 scans  on average  each scan contains a signal intensity reading from 14.86 of the 33 base stations  we observed intensity values ranging from 1 to 217 ; thus  we estimate about 7.5 bits of usable information  when examining the intensity histograms  we found three fundamental types  most of them were very close to gaussian  so the gaussian fit worked very well  some were sparse  indicating that the base stations were almost out of range ; in these cases  the gaussian fits had fairly large standard deviations  a few were bimodal ; the estimated mean was in the middle  with a large standard deviation  initially  we experimented with a bimodal weighted gaussian fit  but our results for the single-mode estimator show that the improvements in accuracy would be marginal  the sensor map of the entire building for a second-floor base station is shown in figure 1 ; the base station in question is circled  as expected  signal intensity degrades fairly consistently as distance increases from the base station  there are several interesting phenomena of note  first of all  we can still reliably get a signal from the base station while outside or in a disconnected part of the building  that is  through two exterior walls and windows   second  the base station can be detected from across the building even on different floors  finally  at long distances  some offices will see the base station while neighboring offices see nothing  this could be caused by multipath effects or by other variations in building geometry that result in favorable signal propagation  2.3.4 training we obtained a master key for the entire building and collected at least 100 base station scans in each of the 510 cells  the person doing the training spent approximately 2.7 minutes in each cell  this person walked around slowly in order to cover the entire cell  the main goal in collecting the training data was to get a signal sample for each part of the cell ; we did not concern ourselves with the relative position of the operator performing the training  data collection took 28 man-hours overall ; however  we collected many more scans than we needed to ensure that we would have independent data to experiment with  had we only collected one minute of training data per office  the minimum we recommend for production use  training could have been accomplished in less than half the time  keep in mind that data collection can be done concurrently ; we collected our data using two operators  doubling our throughput  2.4 experimental results 2.4.1 localization accuracy the goal of this experiment was to determine the basic localization performance of our system using gaussian-fit curves and to compare it with a system using the same training data but retaining the full histogram of signal intensity observations  we chose five scans at random for each of the 510 cells and removed them from the training set  the remaining scans were used to train our localizer  then  for each cell  we used the scans we had removed from the training set as input to the localizer and attempted to locate ourselves  we performed this experiment 100 times  removing different scans each time  figure 2 shows the test cells on the map of our building and the percentage of experimental trials in which the gaussian method 100 90 90 percent of cells with > 95 % accuracy 100 percent correct 80 70 60 50 40 30 20 gaussian histogram 10 0 0 20 40 60 training set size 80 100 80 70 60 50 40 30 20 gaussian histogram 10 0 0 20 40 60 training set size 80 100 figure 4  training set size versus accuracy for the gaussian and histogram methods  figure 5  training set size versus percent of cells where 95 % of trials returned the correct location  returned the correct cell after five scans  in all cases  the gaussian method determined the correct cell in at least 70 % of trials ; at all but a few locations  the localizer returned the correct cell in more than 90 % of experimental trials  while the histogram method was likewise correct in at least 90 % of trials at most locations  there were several cells where the histogram method was correct in fewer than 50 % of trials  over all experimental trials  the gaussian method was correct in over 97 % of trials  the histogram method was correct in over 95 % of trials  while the histogram methods overall accuracy was comparable to the gaussian methods accuracy  the gaussian method has better behavior in pathological cases  typically returning a cell that is off-by-one from the correct location  this result is discussed in more detail in section 3.1 and illustrated in figure 8 we wanted to explore the behavior of our system as we varied the number of observations from which the system infers location  the fewer observations required to infer a devices location  the faster this inference can be generated ; each additional observation adds an approximately 1.6 second delay in generating each location estimate  we ran the same experiment as above  but chose from one to fifteen random scans for each cell to use for testing the localization  we performed this experiment 100 times for each cell  the results for one through twelve scans are shown in figure 3 ; after twelve scans  the graphs show almost no further variance  the results show that using one scan  both methods successfully infer the location in over 70 % of cases  90 % accuracy is achieved with at least two scans for the gaussian method  and with at least three scans for the histogram method  it takes approximately 1.6 seconds to perform a scan  so at that accuracy  we can localize the agent once every 3.2 seconds using the gaussian method  and once every 4.8 seconds using the histogram method  note that different hardware and driver combinations might be able to perform a scan faster  leading to shorter latencies between usable localization results  building  as before  we chose five scans at random from our data to be our experimental scans  we then pruned the training set to the appropriate size by removing training points at random and finally attempted to localize to each cell  we performed this test 100 times  the percentage of correct location estimates over all experimental trials for the gaussian method versus the histogram method is shown in figure 4 the graph shows that both methods have good overall accuracy even at low training set sizes  however  the histogram method tends to require close to twice as large of a training set as the gaussian method to attain a similar accuracy  the gaussian method attains a 90 % accuracy using only 16 training points ; the histogram method requires 30 training points to attain this accuracy  similarly  the histogram method requires 84 training points to attain a 95 % accuracy ; the gaussian method requires only 30 training points  corresponding to only 48 seconds in each office  accuracy also varies by location  figure 5 graphs the percentage of cells where at least 95 % of experimental trials generated a location estimate corresponding to the actual location  this graph shows that the gaussian method requires 24 elements in its training set to attain a 95 % accuracy over 60 % of the cells  32 elements in its training set to attain a 95 % accuracy over 70 % of the cells  and 46 elements for a 95 % accuracy of 80 % of the cells  by contrast  the histogram method needs 52 elements to attain this accuracy over 60 % of cells  and 74 elements in its training set to attain this accuracy over 70 % of cells  we did not train with enough points for histogram to get 95 % accuracy at 80 % of cells  for other cutoff percentages  that is  other than 95 %   we again observed that approximately half the number of training points are required to attain comparable levels of accuracy for the gaussian method versus the histogram method  finally  we compared how many training points are required at individual cells before the localizer generates a correct location estimate in at least 95 % of experimental trials  table 1 shows the number of cells for which an accuracy of 95 % can be achieved with the histogram method and the gaussian method as the number of training points increases ; the caption provides detailed information on how to interpret the numbers in the table  at only two cells does the gaussian method require more training data than the histogram method to attain a 95 % accuracy  at over 3/4 of the points  the gaussian method requires less than 30 training points  by contrast  2.4.2 training set size to evaluate the behavior of our localization system with smaller training sets  we chose training set sizes ranging from six to 90 samples per cell  when it takes 1.6 seconds to collect each sample  any reduction in the necessary training set size per cell will add up to a significant reduction in data collection labor over a large histogram > 60 105 46 17 68 0 67 table 1  table showing number of cells at which the histogram and gaussian methods first correctly localize to the cell in 95 % of experimental trials as the training set size increases  the rows and columns are labeled with the number of scan records in the training set for each method we used  for instance  the 46 in the top right corner indicates that for 46 cells  the gaussian method requires fewer than 30 training points to achieve 95 % accuracy  and the histogram method requires over 60 training points to achieve this accuracy  for most of the points  the histogram method requires at least 30 training points for 95 % accuracy  and for over 1/3 of the points  it requires over 60 training points  for most points  therefore  a 60second training phase at each point  corresponding to a 37-element training set  is sufficient to localize most points to very good accuracy using the gaussian method  2.4.3 base station density localization accuracy is also influenced by the number n of base stations in the building  if n is reduced  less information is available to the localizer  and thus the accuracy decreases  to quantify this effect  we performed another experiment in which we varied n by randomly removing some of the 33 base stations from our data set  in doing so  we ensured that at least one base station was still visible from each cell  and that at least 50 nonzero scans per cell remained  from the resulting data set  we took five random scans per cell and ran them through a localizer that was trained with the remaining scans  the experiment was performed with both the gaussian method and the histogram method  for each value of n  we chose 20 random subsets of base stations and performed five trials for each subset  we report the overall fraction of trials in which the localizer was able to determine the correct cell  as well as the 20th and 80th percentiles  figure 6 shows our results  even with only 17 instead of 33 base stations  the gaussian method can determine the correct cell in over 90 % of the trials  for lower values of n  the accuracy declines rapidly  while the fluctuations are significantly higher  this is because at lower densities  the exact placement of the base stations starts to matter ; also  the number of scans available to the localizer decreases because some of them contain only values for base stations that have been removed  if this were compensated by using an even larger data set  the results for lower densities would improve  however  in real-world wireless network deployments  it is reasonable to expect some redundancy of base station coverage to improve the quality and robustness of service  3 time-varying phenomena the localizer we have presented in the previous section assumes a static environment and a stationary agent  neither assumption is realistic  the observed signal intensity distributions will often differ from the distributions estimated in the training phase due 100 90 80 percent correct histogram 30 60 70 60 50 40 30 20 gaussian histogram 10 0 5 10 15 20 25 number of base stations 30 35 figure 6  impact of base station density on localization accuracy  256 224 average signal intensity method histogram # of training points < 30 gaussian 234 < 30 gaussian 2 30 60 gaussian 0 > 60 192 160 128 96 64 32 0 18:00 22:00 02:00 06:00 time 10:00 14:00 18:00 figure 7  signal intensity variation over a 24-hour period for three base stations measured from a laptop in a fixed location  to a myriad of time-correlated phenomena  these phenomena include environmental properties such as attenuation due to people in the building or building residents opening and closing their office doors  likewise  transient interference can be caused by other electronic devices including microwave ovens  bluetooth devices  and cordless phones  furthermore  a 2.4 ghz frequency corresponds to a 12.5cm wavelength  implying that multipath fading effects may be experienced even with small changes in the operators location  these dynamic environmental influences can cause the observed signal intensity to vary over both small and large timescales  the movement of the operator in the environment further complicates the task of maintaining an accurate position estimate  3.1 signal variations due to office traffic over the course of the day and throughout the night  many changes occur in the environment which affect the observed signal intensity  each of these changes tend to be local and transient but since the nature and frequency of these events varies with the time of day  we expect that  on average  the signal intensity distribution changes globally on a larger timescale  in order to estimate the size of this 100 90 percent of guesses 80 70 60 50 40 30 gaussian  calibrated  histogram  calibrated  gaussian  uncalibrated  histogram  uncalibrated  20 10 0 0 1 2 3 4 5 6 7 8 distance to actual location  meters  9 10 figure 8  basic daytime performance for 27 cells  the results marked calibrated were obtained using the calibration technique from section 4.2 effect  we collected scans at a fixed location  an office  over a 24hour period  the resulting 52,900 scans were divided into groups of 100  and the signal intensities were averaged over each group  figure 7 shows the result for three different base stations  there are noticeable variations during the day  at nighttime  some of them become less pronounced or more regular  while others disappear almost entirely  time-varying effects have severe implications on the accuracy of localization  to quantify these  we performed localization experiments in 27 different cells at around 11:00 am  when there is relatively heavy traffic in the building  including students either in class or going to or from class  we collected approximately 30 scans in each cell and then ran each possible subset of five consecutive scans through the localizer ; the probability vector was initialized with a uniform distribution each time  the results are presented in figure 8 we observed mediocre results ; using the gaussian method  less than 70 % of location estimates were correct  with the bulk of observed errors within 5.5 meters of the correct location  these results and techniques to improve them are discussed further in section 4  3.2 tracking another time varying phenomenon we examined is the movement of the agent  markov localization works well as a single-shot localization algorithm or for a stationary agent ; however  for a moving agent  the prior position estimate will hamper correct localization  a simplistic solution can be obtained by resetting the distribution to a uniform distribution over all states between each burst of observations  a more elegant and effective solution is to update the state estimate between each set of observations using a markov chain that encodes assumptions about how the agent can move from state to state  suppose at time t  the state estimate is t  between time t and t + 1  the agent moves in some unknown way  at time t + 1  the observations o1      ok are received  the state estimate at time t + 1 is computed as follows  + t+1 i kj=1 p  o j |si  ti =  a b c f i d g j e h k l m figure 9  the floor plan for part of duncan hall and the corresponding markov chain  where + t = at  as before  is a normalizer that ensures t+1 is a probability vector  the probability matrix a encodes the markov chain  which can be thought of as a finite state machine  figure 9   states represent cells  and an edge from state si to state s j indicates that cell j can be reached directly from cell i also  each edge is assigned a transition probability ai  j  in our implementation  we gave a fixed probability to the self-edge at each state and distributed the remaining probability evenly across its outgoing edges  3.3 tracking experiments we wanted to evaluate the effectiveness of markov chains when tracking a moving agent  first  we randomly chose four way-points in our building  then we simulated a person following the shortest path between these way-points ; the simulated agent remained at each way-point between 10 and 15 seconds  and moved with a constant speed between 0 and 4.5 meters per second  between 0 and 10.1 miles per hour  from one way-point to the next  every 1.6 seconds  we chose a random scan from the closest cell to the agents simulated location  this timing simulates the agent performing back-to-back base station scans  the agent would not be able to communicate over the network while tracking  as a compromise  the agent could interleave scans and communication  e.g  by using the interface for data traffic for 1.6 seconds in between each 1.6-second scan  in percent correct 100 95 first the edge from the adjacent office to the hallway  and from there to the correct office  thus correcting for such errors automatically  90 3.4 miscellaneous effects 85 to illustrate the impact of time-varying phenomena on tracking performance  we report some insights from our practical experience with the system  one of the authors was using the tracker over a normal office day  during which he attended a lecture and a presentation  worked at his desk  and walked from office to office  the overall performance was very satisfactory ; the estimated location occasionally jumped to an adjacent cell  but generally matched the true location well  the presentation  which was held in a conference room full of students  turned out to be a worst-case scenario  the signal was not only heavily attenuated  but also changed over time  for example when a fellow student leaned over and thus moved closer to the antenna  this caused the estimated location to jump between the three different cells in the conference room  and occasionally to the cell right outside the door  similar effects were observed when the author met other students in the hallways and was asked to explain the experiment  as soon as the other person moved close to the antenna in order to watch the location estimate  the estimate jumped to an adjacent office  80 75 70 65 60 with adjacent with lag correct 55 50 0 0.5 1 1.5 2 2.5 3 walking speed  m/s  3.5 4 4.5 figure 10  accuracy of dynamic tracking as a simulated person walks around our test area  correct is the overall percent of correct location estimates  lag is the overall percent of location estimates that match either the current or the previous cell  with adjacent is the overall percent of location estimates within one location cell in our topological model  4 calibration this experiment  a person using such a system would appear to be moving at twice her actual speed  these scans were then run  in order  through the localizer  we also passed the location estimate through a hidden markov model of the agents movement through the environment  the initial probabilities for the hidden markov model were set to 1.0 for the correct cell and to 0.0 for all other cells  we performed this experiment 250 times for each speed  the results are shown in figure 10 the correct result is the overall percent of correct location estimates  this value decreases slowly until a velocity of 4 meters per second  8.9 mph   and even at this speed  the localizer has an accuracy of 71 %  the lag result is the overall percent of location estimates that match either the current or the previous cell  by this metric  our method experienced a similar drop-off of accuracy at 4 m/s  the localizer had an accuracy of over 79 % at this speed  finally  the with adjacent result is the overall percent of location estimates within one location cell in our topological model ; by this metric  the localizer had an accuracy of 86 % at 4 m/s  this demonstrates that our localization method  when coupled with a hidden markov model of motion  can accurately track even a fast-moving target  as expected  the overall accuracy is lower than for static localization  even at a slow walking pace  only four scans might be registered before the agent enters a new cell  so it is unsurprising that localization accuracy is lower for moving than for stationary agents  the hidden markov model helps the system by  in effect  anticipating this movement and rejecting unlikely measurements when they would otherwise predict impossible transitions  also note that different hardware and driver combinations might be able to complete a scan faster than the 1.6 seconds we experienced ; this would greatly improve our results  another interesting phenomenon we were concerned about was that the tracker might get stuck in an office adjacent to the agents current location  because there were no direct edges connecting adjoining offices  the tracker might not make the transition  although we considered adding phantom edges to the transition matrix a to account for this behavior  the tracker would  in practice  follow the sensor maps built by our method can only be guaranteed to work for localization if they are used in the same environment as during the training period  however  as shown in the previous section  the environment can change significantly over the course of the day  moreover  the signal intensity values reported by the hardware depend on various factors  including the chipset and the antenna  and can vary considerably between different 802.11 implementations  therefore  a method is needed to adapt the sensor map to the environment in which it is to be used  fortunately  we observed that the effect of environmental changes  including both time-varying effects and different hardware  can be closely approximated by a linear relationship  thus  the sensor map can be adapted to a new environment simply by learning two parameters  this process  which we refer to as calibration  should require little or no user intervention ; ideally  it would be performed in the background  thus enabling the localizer to work out of the box  in this section  we first describe the model we use for calibration and give several examples of different configurations and the corresponding parameters  then we present three different calibration methods  spanning the range from completely manual to completely autonomous  4.1 model the calibration problem can be formulated as follows  given a sensor map and an 802.11 device in a certain environment  find a calibration function c that maps an observed signal intensity value i to the value c  i  that would have been reported by the device that was used to generate the sensor map  if c is known  c  i  can be given as an input to the localizer  and the original sensor map can be used unmodified  as tao et al   48  first observed  there is a linear relation between transmission power level and received signal strength as reported by 802.11 hardware  in our experiments  we discovered that the effects of hardware variation and some time-varying phenomena appear to be linear as well  that is  the calibration function can be relation c  i  = i c  i  = 0.85 i 43.5 c  i  = 2.77 i 409.5 table 2  linear relationships between several different 802.11 cards and the acx100 card we used in training  i is the value reported by the hardware  and c  i  is the equivalent value that would be reported by the acx100  and that can be input into the localization system to accurately determine the devices location  256 224 signal intensity  new card  chipset acx100 prism atheros c  i  = c1 i c2  4.2 manual calibration as mentioned earlier  the parameters of the calibration function can be found by computing a linear fit for a set of measured signal intensities and the corresponding values from the sensor map  e.g  by applying the least-squares method  first  we must collect enough value pairs to perform this calculation  in our prototype implementation  this is done by moving the device to several different cells  in each cell  the user presses the calibrate button  prompting the device to collect a few scans  and then indicates the current cell on a floor plan of the building  since in duncan hall  each cell contributes value pairs for 14.86 base stations on average  a small number of cells  three to five  was usually sufficient  160 128 96 64 unadjusted adjusted ideal 32 closely approximated by the linear relationship 0 0 32 64 96 128 160 192 signal intensity  reference  224 256 figure 11  effect of calibration on the signal strength values reported by the atheros chipset  the intensity values shown are averages over at least five samples  256 224 signal intensity  observed  thus  it is sufficient to learn the parameters c1 and c2 in order to adapt a given sensor map to a new environment  this can be accomplished in various ways ; for example  one can collect some measurements at well-known locations and compute the least-squares fit between the observed values and the corresponding values from the sensor map  using this method  we found the parameters for a number of different cards  these are listed in table 2 the acx100 is the card we used for training  so its calibration function is the identity function  prism is a linksys wpc11 pcmcia card based on the intersil prism2 chipset  atheros is a mini pci card with an atheros chipset and using the ibm thinkpad t40ps built-in antenna  figure 11 shows the effects of calibration for the atheros chipset  this unadjusted graph was generated using pairs  ir  im  of intensity values  where ir is the reference value from the sensor map for a certain cell and base station  and im is the corresponding value measured with the atheros card  the adjusted graph shows  ir  c  im    clearly indicating that after calibration  the two values are almost identical  note that the signal intensities reported by the atheros chipset were 8-bit values as in the acx100 case  but we observed only values between 163 and 224  so there are only 5.9 bits of usable information  that is not to say that the difference in signal strength reporting between any two cards is always a linear relation  in particular  different cards may use different techniques to actually measure the signal strength  as steger et al   47  demonstrated  different cards behave differently in the face of varying signal conditions  in addition  as indicated by our results  the mapping from the actual signal strength to the number returned by the hardware is arbitrary  will vary from one chipset to another  and need not be linear  however  in all the cards we tested  the signal strength readings were linear relations of one another  192 192 160 128 96 64 unadjusted adjusted ideal 32 0 0 32 64 96 128 160 192 signal intensity  reference  224 256 figure 12  average signal intensity values  before and after recalibration for time-varying effects  figure 12 shows an example result from such a calibration  in this case  the 802.11 hardware was the same as during the training period  but the measurements were taken at daytime during heavy office traffic  clearly  both the constant offset and the linear factor changed  yet  after calibration  the signal intensity values correspond almost exactly to the ones from the training phase  in order to quantify the effect of calibration for time-varying effects  we ran the localization with and without performing calibration  the result is shown in figure 8 without calibration  the results are mediocre  less than 70 % of location estimates are correct  and 90 % of estimates are within 5.5 meters for the gaussian method  after calibration  results are greatly improved  88 % of location estimates are correct  and 90 % are within 3 meters  this experiment suggests an important conclusion  that a single linearfit captures most of the deviation induced by slow timescale phenomena  in other words  the signal intensity shifts due to slow time-varying effects seem to be homogeneous on average across various locations  qualitatively  we have observed that running localization without tracking  during the day  is a bit noisy  lags a bit  and is prone to localizing into the room adjacent to the user  once we run the calibration in three or four cells  the localization is extremely stable and very rarely makes mistakes  experiments and data analysis suggest that solving the problem of making a simultaneous localizer and calibrator is tractable  5 discussion 4.3 quasi-automatic calibration 5.1 why a gaussian fit ? manual calibration is clearly effective  but has the disadvantage of requiring the user to specify the current cell  surprisingly  however  calibration can be performed without this information and using only a set of scans from several different but unknown cells  our second calibration method takes advantage of the fact that the observation space is both sparse and non-linear  so there is almost never a linear mapping between observations from different cells  hence  when an incorrect calibration function is used  the calibrated intensity values do not match any reference values from the sensor map  and the confidence value produced by markov localization  see section 2.2.1  is low for all cells ; it is high only if both the calibration function and the cell are correct  therefore  the parameters c1 and c2 can be learned by attempting markov localization and by choosing values such that the confidence is maximized  our most striking departure from previous work is that the most successful systems in the literature have used the entire signal intensity histogram  on the other hand  we have chosen to fit the sensor map data to gaussian distributions  we chose this course for several reasons  first  fitting the data to a gaussian only requires storing two numbers for each base station and cell  keeping the entire histogram requires at least 30 times as much storage  this reduction increases the speed and reduces the memory requirements for localization  making it more suitable for low-power embedded devices that may not have the resources of a modern laptop computer  furthermore  fitting to a gaussian also provides some robustness benefits to our system  the gaussian method tends to provide roughly the same accuracy of localizations for half the training effort  see section 2.4.2   one reason for this is that if the entire histogram is used  the training might capture minor modes that are a result of time varying phenomena and might miss other minor modes not present in the training set  these minor modes will be covered by the normal distribution curve to which the data is fit in the gaussian method  also  previous histogram-based systems required taking as many as 500 scans to train each point  this would make it impractical to build a sensor map as large as the one we built without a significantly longer training time  4.4 automatic calibration although the quasi-automatic method involves less user interaction than the manual method  it still requires the user to press a calibrate button from time to time  however  in order to obtain optimum performance  the user will have to recalibrate several times over the course of the day  which is cumbersome and  in the case of manual calibration  requires a certain familiarity with the building  it would be clearly preferable to have an entirely hands-off solution  toward this end  we have been investigating the problem of running localization  tracking  and calibration simultaneously  our initial results are promising but do not yet match the results we have seen with supervised calibration for online localization and tracking  the basic technique we have been considering uses a history of recent observations as a training sample to construct an estimate of the calibration parameters that are then used to process future data  this algorithm runs in parallel with the localization process  we use an expectation-maximization algorithm  e-m   52  that computes a fixed-point  iterating between inferring a sequence of location estimates from the history and then choosing c1  c2 to maximize the probability of these estimates occurring  the observations and estimates are stored in a sliding window of between 10 and 45 seconds  our current implementation of simultaneous localization and calibration seems about as good as supervised calibration for static localization problems  in the tracking implementation  we have observed that the tracker is a bit sluggish and prone to place the user in adjacent rooms  also  it seems to occasionally get stuck with a bad hypothesis that stays until the sliding window fills with new data  if the size of the sliding window is decreased then the tracker lags  another possible approach that we believe may be attractive is a monte carlo  particle filter  approach  18  53  that maintains a set of c1  c2 hypotheses and gathers data to determine which hypothesis should be used  where our current approach only maintains one hypothesis at a time  this approach would simultaneously try a large number of hypotheses  preventing the system from getting stuck with a local maximum and thereby missing globally optimal settings  in this framework  the confidence values from the localizer   could be used to discriminate between two hypotheses  our 5.2 choosing a training set size although most of our localization results are based on training sets with 90 elements  we determined that for our building  taking a 60second training set  around 37 elements  was adequate for accurate localization in most of our building  see section 2.4.2   the point of diminishing returns  in terms of accurately capturing the sensor map  seems to begin around 35 samples per point  see figure 4   of course this is a minimum ; having additional training data can only help  the optimal number of training points depends on a number of factors  including building geometry  base station density  and building usage  although duncan hall has unusual geometry  the base station density is high ; there are rarely fewer than five base stations in range  even in the corners of the building  buildings with fewer base stations  lower base station density  or more opaque construction materials  would likely need larger training sets  buildings with interesting geometry  such as large open areas  tend to dilute differences in signal intensity  and require more training data  as the sensor map in figure 1 shows  hallways tend to channel signals such that signal intensity drops at a regular rate going down a hallway  large open areas tend to disperse signal  leading to much less distinction among cells  to adequately measure signal maps in other buildings  experimentation may be necessary to determine the ideal set size  for our own building  we started by first collecting training data in a small region of the building  by observing the mean and standard deviations of this data  we could estimate how many samples were necessary for the system to converge  in our own case  we observed that  with 25 scans  the variation of the mean dropped below 2 for experimental purposes  we captured significantly more than 25 scans per cell to help verify our results  it would be possible to encode the above technique into the training system  when the mean and standard deviation stabilize to within a specified threshold  we can conclude that we have collected enough training data to accurately describe a cell  this check could be run in real-time  5.3 changes to the infrastructure in this paper  we implicitly assumed that the sensor map accurately reflects the signal intensities throughout the building  however  this is only true as long as there are no fundamental changes in the environment  such as base station failures or major reconfigurations  while changes of this type are infrequent in practice  they may affect localization accuracy where they do occur  if an individual base station fails  it does not respond to probe requests any more and thus changes the observations made from the surrounding cells  however  because our method only uses positive observations  i.e  probe responses actually received  the only effect this has on the localizer is that there is less information available  reducing accuracy and convergence speed  as long as enough other base stations are in range  the effect should be small  see section 2.4.3   moving an existing base station requires the cells surrounding the old and the new position to be re-trained  however  since base stations are typically wall-mounted and require power and a network connection  they can not be moved easily  so changes of this type should be very rare  the appearance of transient base stations does not affect localization because the localizer can easily determine the set of acceptable stations from the signal map and ignore unknown stations  if a permanent station is added after the training phase  it can be used to improve accuracy by re-training the cells from which it is visible  some base stations choose their channels dynamically ; thus  a major failure such as a power outage may cause the channel assignment to change  this actually happened once during our experiments  when a maintenance event required the entire building to be taken off-line  although the base stations operated on different channels afterwards  we did not observe a significant change in accuracy  believe clustering algorithms may be able to adequately determine the number of attackers and separately localize each one  there are of course privacy implications to being able to track any arbitrary device on an 802.11 network  anyone who has physical access to a building can deploy an ad hoc network of snoopers and track every device in the building  with or without the approval of the buildings management  the only solution is to realize that  by transmitting a packet on an 802.11 network  a mobile agent is effectively revealing its location to motivated adversaries  6 conclusion in this paper  we presented a practical robust scheme for localization over the entirety of an 802.11 network deployed within a multi-story office building  we have shown that the use of a topological model can dramatically reduce the time required to train the localizer  while the resulting accuracy is still sufficient for many location-aware applications  we used a gaussian fit sensor model  which is more robust and requires less training compared to sensor models that use the full histogram of signal strengths  finally we developed a technique by which the training data can be adapted for use with totally different receiver hardware  and under different conditions than during the training phase  to evaluate our localization technique  we have developed a methodology which makes use of excess training data to determine raw localization performance  we deployed our system in a large office building on the rice university campus  in our experiments  we experienced both good overall performance and excellent robustness ; in the rare event that an incorrect position estimate was generated  it was almost always to an adjacent cell  we also discovered how different variables  including training set size  sample size  base station density  and time of day affect localization accuracy  our system is ready to be made available right now in our office building for people who want to use location-aware applications on top of it  and it could be made available in the near future for deployment  after a brief training phase  in any building with an 802.11 network installed  5.4 passive localization passive localization refers to localization in which the mobile device being localized is a passive participant in the localization process  while the device must be transmitting data to be tracked  it is not explicitly performing any part of the localization algorithm  and need not be aware that it is being tracked  since signal propagation is a reversible operation  the same sensor map data should  after calibration  allow someone with access to enough receivers to track any transmitting device  while weve performed some experiments that tend to validate this  more experimentation is in order  the most obvious application of passive localization is for locating an intruder on an 802.11 wireless network  tao et al   48  performed a study of this issue  two problems they overcame were differences in hardware and differences in transmission power  since both of these were fixed by mapping received signal intensity to the training set via a linear relation  the calibration technique we discuss in section 4 should allow us to account for both of these variations  a promising avenue of future work is applying simultaneous localization and calibration  see section 4.4  to automatically account for variations in hardware  movement  and transmission power manipulation on the part of the intruder  finally  more ambitious intruders might attack in coalitions  jointly transmitting packets using the same hardware address  this would make the attacker appear to be jumping all over the map  we 7 acknowledgements this paper has benefited considerably from the comments of the anonymous mobicom reviewers and our shepherds  per gunningberg and farooq anjum  we would like to thank kostas bekris  guillaume marceau  and ping tao for contributions to earlier versions of this work  in addition  thanks to joseph cavallaro  ashutosh sabharwal  and patrick frantz for their insight into how wireless network cards measure signal strength  finally  thanks to all the residents of duncan hall for their cooperation in our experiment  and the department chair  keith cooper  for trusting us with his master key  andreas haeberlen is partly supported by nsf ani-0338856 and by a fellowship from rice university  andrew m ladd is partly supported by nsf 0308237 and a fcar fellowship  algis rudys and dan s wallach are supported by generous gifts from microsoft and schlumberger  lydia e kavraki is partly supported by nsf 0308237 and a sloan fellowship  8 references  1  g abowd  k lyons  and k scott  the rhino project  aug 1998 http  //www.cc.gatech.edu/fce/uvid/ rhino.html   2  g d abowd  c g atkeson  j hong  s long  r kooper  and m pinkerton  cyberguide  a mobile context-aware tour guide  wireless networks  3  5  :421433  oct 1997   3  the acx100/acx111 wireless network driver project  http  //acx100.sourceforge.net   4  p bahl and v n padmanabhan  enhancements to the radar user location and tracking system  technical report msr-tr-2000-12  microsoft research  feb 2000   5  p bahl and v n padmanabhan  radar  an in-building rfbased user location and tracking system  in proceedings of the nineteenth annual joint conference of the ieee computer and communications societies  infocom   volume 2  pages 775784  tel aviv  israel  mar  2000   6  b brumitt  b meyers  j krumm  a kern  and s shafer  easyliving  technologies for intelligent environments  in proceedings of the 2nd international symposium on handheld and ubiquitous computing  bristol  uk  sept 2000   7  n bulusu  j heidemann  and d estrin  gps-less low-cost outdoor localization for very small devices  ieee personal communications magazine  7  5  :2834  oct 2000   8  w burgard  a cremers  d fox  d hahnel  g lakemeyer  d schulz  w steiner  and s thrun  the interactive museum tour-guide robot  in proceedings of the fifteenth national conference on artificial intelligence  aaai   madison  wi  july 1998   9  p castro  p chiu  t kremenek  and r r muntz  a probabilistic room location service for wireless networked environments  in proceedings of the third international conference on ubiquitous computing  ubicomp   atlanta  ga  sept 2001   10  g chen and d kotz  a survey of context-aware mobile computing research  technical report tr-2000-381  department of computer science  dartmouth college  nov 2000   11  h choset and k nagatani  topological simultaneous localization and mapping  slam   toward exact localization without explicit localization  ieee transactions on robotics and automation  17  2  :125137  apr  2001   12  i cox  blanche  an experiment in guidance and navigation of an autonomous robot vehicle  ieee transactions on robotics and automation  7  2  :193204  1991   13  a k dey and g d abowd  cybreminder  a context-aware system for supporting reminders  in proceedings of the second international symposium on handheld and ubiquitous computing  bristol  uk  sept 2000   14  a k dey  g d abowd  and d salber  a context-based infrastructure for smart environments  in proceedings of the first international workshop on managing interactions in smart environments  dublin  ireland  dec 1999   15  g dudek and m jenkin  computational principles of mobile robotics  cambridge university press  cambridge  uk  2000   16  ekahau  inc website  http  //www.ekahau.com/   17  federal communications commission report and order 96264  revision of the commissions rules to ensure compatibility with enhanced 911 emergency calling systems  july 1996 http  //www.fcc.gov/bureaus/wireless/ orders/1996/fcc96264.txt   18  d fox  w burgard  f dellaert  and s thrun  monte carlo localization  efficient position estimation for mobile robots  in proc  of the sixteenth national conference on artificial intelligence  aaai-99   pages 343349  orlando  florida  1999   19  d fox  w burgard  and s thrun  markov localization for mobile robots in dynamic environments  journal of artificial intelligence research   jair   11:391427  nov 1999   20  y gwon  r jain  and t kawahara  robust indoor location estimation of stationary and mobile users  in proceedings the 23rd conference of the ieee communications society  infocom   hong kong  mar  2004   21  t he  c huang  b m blum  j a stankovic  and t abdelzaher  range-free localization schemes for large scale sensor networks  in proceedings of the ninth annual international conference on mobile computing and networking  mobicom   san diego  ca  sept 2003   22  j hightower and g borriello  location systems for ubiquitous computing  ieee computer  34  8  :5766  aug 2001   23  j hightower  r want  and g borriello  spoton  an indoor 3d location sensing technology based on rf signal strength  technical report uw cse 00-02-02  department of computer science and engineering  university of washington  seattle  wa  feb 2000   24  j hill  r szewczyk  a woo  s hollar  d culler  and k pister  system architecture directions for networked sensors  in proceedings of the ninth international conference on architectural support for programming languages and operating systems  asplos-ix   cambridge  ma  nov 2000   25  l hu and d evans  localization for mobile sensor networks  in proceedings of the tenth annual international conference on mobile computing and networking  mobicom   philadelphia  pa  sept 2004   26  institute of electrical and electronics engineers  inc ansi/ieee standard 802.11  wireless lan medium access control  mac  and physical layer  phy  specifications  1999   27  c intanagonwiwat  r govindan  and d estrin  directed diffusion  a scalable and robust communication paradigm for sensor networks  in proceedings of the sixth annual international conference on mobile computing and networking  mobicom   boston  ma  aug 2000   28  j krumm  s harris  b meyers  b brumitt  m hale  and s shafer  multi-camera multi-person tracking for easyliving  in third ieee international workshop on visual surveillance  dublin  ireland  july 2000   29  j krumm and j platt  minimizing calibration effort for an indoor 802.11 device location measurement system  technical report msr-tr-2003-82  microsoft research  seattle  wa  nov 2003   30  b kuipers and y.-t byun  a robot exploration and mapping strategy based on a semantic hierarchy of spatial representations  journal of robotics and autonomous systems  8  1 2  :4763  nov 1991   31  a m ladd  k e bekris  a rudys  g marceau  l e kavraki  and d s wallach  robotics-based location sensing using wireless ethernet  in proceedings of the eighth annual international conference on mobile computing and networking  mobicom   atlanta  ga  sept 2002   32  s lenser and m veloso  sensor resetting localization for poorly modelled mobile robots  in proceedings of icra2000  the international conference on robotics and automation  detroit  mi  apr  2000   33  t liu  p bahl  and i chlamtac  mobility modeling  location tracking  and trajectory prediction in wireless atm networks  ieee journal on selected areas in communications  16  6  :922936  aug 1998   34  t logsdon  understanding the navstar  gps  gis and ivhs  second edition  van nostrand reinhold  new york  1995   35  n marmasse  commotion  a context-aware communication system  in chi extended abstracts on human factors in computing systems  pittsburgh  pa  may 1999   36  r nagpal  h shrobe  and j bachrach  organizing a global coordinate system from local information on an ad hoc sensor network  in proceedings of the second international workshop on information processing in sensor networks  ipsn   palo alto  ca  apr  2003   37  d niculescu and b nath  ad hoc positioning system  aps  using aoa  in proceedings of the 22nd annual joint conference of the ieee computer and communications societies  infocom   san francisco  ca  mar  2003   38  d niculescu and b nath  dv based positioning in ad hoc networks  kluwer journal of telecommunication systems  22  14  :267280  jan 2003   39  g j pottie and w j kaiser  wireless integrated network sensors  communications of the acm  43  5  :5158  may 2000   40  n priyantha  a chakraborty  and h balakrishman  the cricket location support system  in proceedings of the sixth annual international conference on mobile computing and networking  mobicom   pages 3243  boston  ma  aug 2000   41  n priyantha  a miu  h balakrishman  and s teller  the cricket compass for context-aware mobile applications  in proceedings of the seventh annual international conference on mobile computing and networking  mobicom   pages 114  rome  italy  july 2001   42  e remolina and b kuipers  towards a general theory of topological maps  artificial intelligence  152  1  :47104  jan 2004   43  t roos  p myllymaki  h tirri  p misikangas  and j sievanan  a probabilistic approach to wlan user location estimation  international journal of wireless information networks  9  3   july 2002   44  a savvides  c.-c han  and m b strivastava  dynamic fine-grained localization in ad-hoc networks of sensors  in proceedings of the seventh annual international conference on mobile computing and networking  mobicom   rome  italy  july 2001   45  a smailagic  d siewiorek  j anhalt  d kogan  and y wang  location sensing and privacy in a context aware computing environment  pervasive computing  2001   46  j small  a smailagic  and d p siewiorek  determining user location for context aware computing through the use of a wireless lan infrastructure  dec 2000 http  //www-2  cs.cmu.edu/aura/docdir/small00.pdf   47  c steger  p radosavljevic  and p frantz  802.11b operating in a mobile channel  performance and challenges  in communications design conference  san jose  ca  sept 2003   48  p tao  a rudys  a m ladd  and d s wallach  wireless lan location-sensing for security applications  in proceedings of the second acm workshop on wireless security  wise   san diego  ca  sept 2003   49  s thrun  probabilistic algorithms in robotics  ai magazine  21  4  :93109  2000   50  s thrun and a bucken  integrating grid-based and topological maps for mobile robot navigation  in proceedings of the aaai thirteenth national conference on artificial intelligence  portland  oregon  aug 1996   51  s thrun and a bucken  learning maps for indoor mobile robot navigation  technical report cmu-cs-96-121  carnegie mellon university  computer science department  pittsburgh  pa  apr  1996   52  s thrun  w burgard  and d fox  a probabilistic approach to concurrent mapping and localization for mobile robots  machine learning  31  1-3  :2953  1998   53  s thrun  d fox  w burgard  and f dellaert  robust monte carlo localization for mobile robots  artificial intelligence  101:99141  2000   54  s thrun  j.-s gutmann  d fox  w burgard  and b kuipers  integrating topological and metric maps for mobile robot navigation  a statistical approach  in proceedings of the fifteenth national conference on artificial intelligence and tenth conference on innovative applications of artificial intelligence  pages 989995  madison  wi  july 1998   55  r want  a hopper  v falco  and j gibbons  the active badge location system  acm transactions on information systems  10:91102  jan 1992   56  a ward  a jones  and a hopper  a new location technique for the active office  ieee personal communications  4  5  :4247  oct 1997   57  r yamamoto  h matsutani  h matsuki  t oono  and h ohtsuka  position location technologies using signal strength in cellular systems  in proc  of the 53rd ieee vehicular technology conference  rhodes  greece  may 2001   58  m youssef  a agrawala  and a u shankar  wlan location determination via clustering and probability distributions  in proceedings of the ieee international conference on pervasive computing and communications  percom   fort worth  tx  mar  2003 appendix a practical experience during our large-scale experiment  we learned several practical lessons that we believe to be relevant when validating our results or deploying the system in another building  first of all  it is essential to avoid time-varying effects when collecting the training set ; otherwise there may be inconsistencies between different parts of the building or even between adjacent cells  we gathered most of our training data in two consecutive nights during spring break  when the building was empty  second  entering all the rooms in a building raises privacy and trust issues  before we obtained a master key  we notified all the residents of the building and gave them an opportunity to object  or to be present during the experiment  also  we found that there were some rooms  such as the deans office  that even the official master key did not open  third  battery capacity and notebook weight are limiting factors  even a light notebook is impossible to carry with outstretched arms for an extended period of time  also  constantly sending radio signals tends to drain batteries very quickly  finally  in gathering the training data  we were continually reminded that we were essentially violating the personal space of the occupants of our building  offices contained such obscure items as a paper skeleton and a complete knights armor  we were also exposed to the tendency of some occupants of our building to not bathe or dispose of spoiled foods  