journal of location based services vol  0  no  0  january 0  121 mole  a scalable  user-generated wifi positioning engine jonathan ledlie jun-geun park  dorothy curtis  andre cavalcante**  leonardo camara**  afonso costa**  and robson vieira** nokia research center  4 cambridge center  cambridge  usa computer science and artificial intelligence laboratory  massachusetts institute of technology  cambridge  usa ** nokia institute of technology  manaus  brazil  received 00 month 200x ; in final form 00 month 200x  we describe the design  implementation  and evaluation of mole  a mobile organic localisation engine  unlike previous work on crowdsourced wifi positioning  mole uses a hierarchical name space  by not relying on a map and by being more strict than uninterpreted names for places  mole aims for a more flexible and scalable point in the design space of localisation systems  mole employs several new techniques  including a new statistical positioning algorithm to differentiate between neighboring places  a motion detector to reduce update lag  and a scalable cloud-based fingerprint distribution system  moles localisation algorithm  called maximum overlap  mao   accounts for temporal variations in a places fingerprint in a principled manner  it also allows for aggregation of fingerprints from many users and is compact enough for on-device storage  we show through end-to-end experiments in two deployments that mao is significantly more accurate than state-of-the-art bayesian-based localisers  we also show that non-experts can use mole to quickly survey a building  enabling room-grained location-based services for themselves and others  keywords  crowd-sourcing  wifi positioning  localisation 1 introduction the ability for a mobile device to perceive a users location has many applications  from social networking check-ins to location-appropriate content  such as automatically presenting people with a relevant train schedule  while the global positioning system  gps  enables devices to sense their location in most outdoor environments  bad weather and urban canyons can restrict its operation  in addition  there are many indoor positioning applications where gps can provide only limited assistance  as it typically provides a position fix only near windows and doors  to enable room-grain indoor and outdoor positioning in gps-less environments  researchers have used physically-fixed wireless beacons to associate a unique fingerprint with each place or grid point  bahl and padmanabhan  2000 ; priyantha et al  2000 ; haeberlen et al  2004   while the types of wireless beacons have varied over time  most techniques now use 802.11 wifi beacons because of their near ubiquity  particularly in urban and suburban environments  because of the difficulty in translating between distance and received signal strength  pahlavan et al  1998   more compact alternatives to fingerprinting e.g  triangulating among the beacons are generally eschewed  one of the key problems with fingerprinting  however  is learning the fingerprint for each place however places are designated  we call the process where a person links a fingerprint to a place binding  several commercial vendors offer positioning services  which include a fingerprint-generation survey  ekahau   however  these come at a steep price  a large office building can cost $ 10,000 usd with no maintenance included  because this is prohibitively expensive for many applications such as contextualising a devices behavior based on which room of a house it is in several research systems have begun to crowd-source corresponding author  email  jonathan.ledlie @ nokia.com journal of location based services c 0 taylor & francis issn 1748-9725 print / issn 1748-9733 online http  //www.tandf.co.uk/journals doi  10.1080/1748972yyxxxxxxxx 2 j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira fingerprints from end-users  bhasker et al  2004 ; bolliger  2008 ; barry et al  2009 ; park et al  2010   in the model for these wikipedia-style approaches  a single locally-knowledgeable user performs the bind for a place and many visitors can then rely on the database of fingerprints  mole focuses on a new point in the design space of these crowd-sourced  or organic  positioning systems  some systems  such as oil  park et al  2010   present a map to the user  users bind places by clicking on the map  others  like redpin  bolliger  2008   allow the association of any text string with a places fingerprint  in contrast  mole arranges the world hierarchically ; this imposes a clean  intuitive namespace  country  region       and allows for data prefetching at a building scale if not larger  it also isolates problems in the fingerprint database to small portions of the tree  mole relies on compact data structures that allow many fingerprints to be stored on the users device  in turn  this allows the users device not a server to select among potential places with similar fingerprints  improving privacy  here we describe how moles hierarchical namespace leads to a scalable design  where its servers can be easily replicated in the cloud  we show how its new statistical positioning algorithm uses response rate as additional fingerprint information  in our experiments  this leads to an improvement in accuracy of 10 % over the current state-of-the-art  we also show how mole uses accelerometer-based motion detection both to reduce the latency in showing the correct place after a user has moved and to collect clean fingerprints from end-users  through a crowd-sourcing experiment  we show that a multi-story building can be quickly and accurately covered by non-experts  in one hour  four people completely surveyed a mid-sized research lab  after this surveying period  which can be concurrent with use  any person visiting the lab can benefit from room-customised behavior  from location-aware assistance and notifications to device and application contextualization  this articles contributions are  a new organic positioning system  called mole  whose positioning algorithm explicitly accounts for temporal variations in the signal space ; a detailed description of moles hierarchy of places and cloud-based  batch design ; a simulation and experimental analysis of mole  including crowd-sourcing a multi-floor building with untrained users ; the article  which focuses on moles positioning algorithm  proceeds as follows  we describe and show the user interface for the place hierarchy in section 2 we outline our positioning algorithm in section 3 in section 4  we show how moles architecture takes advantage of the cloud  to allow fingerprints to be combined efficiently and for clients to receive the contributions of others quickly  in section 5  we describe our evaluation of mole  examining its positioning algorithm versus the current state-of-the-art  its use of movement detection  and how end-users can use it to build up a working deployment in a multi-story building  we describe related work in section 6 and conclude in section 7  2 model of places mole arranges the discrete  human-designated places of the world in a hierarchy  while the hierarchy could be of variable depth  our current implementation contains five levels  as the estimate in figure 1 illustrates  from coarse to fine  the levels typically refer to country  region  city  area  and unique place  e.g  room   areas are the unit of fingerprint aggregation  transfer  and  therefore  privacy ; the server knows at most what areas you visit  areas typically refer to street addresses  e.g  4 cambridge center in figure 1   although they could refer to larger outdoor areas such as parks  the design also allows aggregation at higher levels  we believe that arranging places in a hierarchy is useful in many organic positioning settings  earlier approaches have used visual maps  bhasker et al  2004 ; park et al  2010  or uninterpreted strings  bolliger  2008  to identify individual places  visual maps require that a fairly accurate map of the area typically a building exists  while well-managed places  such as universities and airports  may be able to generate maps  this approach may not scale to individual homes or businesses  where people may not have the time  knowledge  or interest to create a map of their sets of places  in addition  many users find it non-trivial to locate themselves on indoor maps  particularly in complex buildings  assigning uninterpreted strings 3 mole  a scalable  user-generated wifi positioning engine figure 1 moles user interface  it shows the country  region  city  area  room hierarchy in street address format  the statistics shown are described in section 4.1 to places during a bind has its own challenges  for example  the namespace may rapidly become crowded with similar names  while barry et al   2009  do allow for spaces within buildings  their hierarchy is not intended to cover the world  figure 1 shows the current estimate of a devices position within this hierarchy  while the depth and names of the hierarchy are currently predefined  different countries or cultures could change its shape as they saw fit  assuming the user interface could handle this variation  users click on the incorrect estimate ? button to edit the current estimate and make a new bind  improving future estimates for themselves and other users  the statistics are explained in section 4  3 algorithm in this section  we describe our new  statistical localisation algorithm  3.1   briefly review nave bayesian localisation  3.2   and describe a kernelised rssi histogram variation that can be applied to both localiser types  3.3   3.1 maximum overlap localisation maximum overlap  or mao  selects its estimated place as the one whose fingerprint is most similar to the users fingerprint  using a similarity function we describe below  mao has two key advantages  first  it is efficient to compute  because we anticipate localisation algorithms running continuously in the background on mobile devices  this simple computation should translate into longer battery life  second  it provides a scan distance function  which can be used to estimate physical distances between sets of fingerprinted objects  scan distance functions are also useful for clustering scans  outlier detection  and cleaning scan databases  citation  park10growing   by themselves  distance functions are also useful for estimating the physical distance between the positions where the scans were made  which we show in section 5.4 to create a mao fingerprint  we begin with a standard set of place-to-aps histograms containing raw rssi readings  as in haeberlen et al   2004   we summarise each per-place per-ap histogram with a single gaussian with mean and standard deviation  we describe a kernelised histogram variant in 3.3   every place is assigned a fingerprint  which is a set of mappings from access points to data triples  api hwi  i  i i  1  where wi is the weight of api  the number of observable aps is  and the total weight for each fingerprint i=1 wi is 1 note that the most recent k scans of the user also form a fingerprint using the same method  determining the weight w to apply to each visible ap is an important component of our algorithm  a straw man method would be to simply weigh each visible ap equally  1/  instead  we base the weight on the probability that the given ap will actually be observed in the place  specifically  we set the probability to the response rate  the fraction of a fingerprints scans in which a given ap was observed  when a place p 4 j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira is scanned many times  some aps will be seen in every scan  and some seen only rarely  this captures the intuition that a users device will see the same aps with the same signal strength distribution and the same observation frequency when it is in the same place  these two quantities are only weakly correlated as we show in section 5.1   if the users fingerprint does not contain an ap that is almost always observed when in a particular place  it is highly unlikely that the user is in this place  weighting according to response rate reflects this intuition  specifically  the weight for api is  w i = ri / x rj  2  j=1 where ri is the number of readings of api  to find the similarity between two fingerprints  we determine the similarity in signal strengths of aps that exist in both fingerprints  and penalise for missing aps  weighting both quantities by the response rate  the comparison of any two fingerprints returns a similarity 2 s 1  where a comparison of identical fingerprints returns 1 and of disjoint fingerprints returns -2  disjoint fingerprints are those that share no access points   for fingerprints a and b  s  a  b  = x i  3  iab where i is the effect each api  this delta of each ap is computed as  i = a +b 2 o  a  a  b  b  if i a  i b  a p b p if i a  i / b  if i / a  i b   4  where o   is the overlap coefficient between the two gaussian distributions  inman and bradley  1989  and 0 p 1 is the penalty to apply for missing aps  figure 2 provides an example of computing the similarity between a pair of fingerprints  the example shows two places  top and middle  and the overlap of their fingerprints  bottom   the 20 scans in place1 have sensed three different access points  ap1  ap2  and ap3  the 25 scans in place2 have only sensed two access points  both of which are the same as those seen in place1  ap1  ap2  ap3 was not observed in place2  to compute the weights for place1  we divide the observations for each ap by the total number of observations  20 + 15 + 5 = 40 the same procedure is done for place2  this completes the creation of fingerprints for these two places  the bottom row shows how the similarity between the two fingerprints for places 1 and 2 is computed  s = 0.75 15/40 + 20/45 20/40 + 25/45 + 0.30 5/40 2 2  5  where the penalty p = 1  and 0.75 and 0.30 are the overlap coefficients for ap1 and ap2  respectively  p lace2 could equivalently be a set of scans as seen by a users device  the algorithm to compute their similarity would be the same  because the same comparison applies whether place b is a users fingerprint or any collection of scans such as a location tag it can be used to estimate a physical distance between two real or virtual objects  e.g  virtual graffiti   one particularly nice aspect of this overlap computation is that it exists as a closed-form function when gaussians are used to represent the rssi readings  inman and bradley  1989   alternatively  the results from the function can be stored in a look-up table  linacre  1996  ; we found a table with only hundreds of values gave almost the same results as a function  this simple computation is in contrast to graphical models  madigan et al  2005   which may require thousands of iterations to converge  a special case exists where we have only a few rssi measurements for an ap  in particular  the sample variance  which is a second-order statistical property  is not well-defined with only one sample  because 5 mole  a scalable  user-generated wifi positioning engine ap2 5 obs/20 scans w=5/40 probability probability area=1 area=1 area=1 0 obs/25 scans w=0/45 probability probability probability signal strength  dbm  area=1 area=1 20 obs/25 scans w=20/45 25 obs/25 scans w=25/45 signal strength  dbm  signal strength  dbm  fingerprint2 ap3 15 obs/20 scans w=15/40 20 observations/20 scans weight=20/40 probability fingerprint1 ap1 signal strength  dbm  signal strength  dbm  signal strength  dbm  probability overlap coef.=0.75 probability probability overlap overlap coefficient=0.0 overlap coefficient=0.30 signal strength  dbm  signal strength  dbm  figure 2 example of computing the similarity between two fingerprints using signal strength  dbm  mao  place1 place2 = overlap  this situation by definition exists for rarely observed aps  taking more scans is not advisable as we may need to take many more in order to obtain a stable estimate for  instead  to estimate for these aps  we use a weighted average of this aps sample standard deviation s  if it exists  together with a common prior c  i =  ri 1  s + c ri  6  with this  the overlap coefficient can be computed even with very few rssi values  or even a single value  from a given ap  we found c = 1 worked well in our experiments  3.2 nave bayes localisation we compare mao to state-of-the-art nave bayes localisation in section 5.2 for completeness  we briefly review bayes localisation here  for more detail  see haeberlen et al   2004  and madigan et al   2005    bayesian localisation estimates the most likely location using bayes rule  nave bayes localisation further assumes that the signal strengths from different access points are independent from each other given a location  therefore  given a signal strength vector s =  s1  s2    sk  from k access points  the posterior probability of being in location l is given by p  l|s  = qk i p  si |l  p  l   p  s   7  6 8 raw 7 kernel 6 gaussian 5 4 3 2 1 0 -45 -50 -55 count/pdf count/pdf j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira -60 -65 dbm -70 -75 -80 -85 8 raw 7 kernel 6 gaussian 5 4 3 2 1 0 -45 -50 -55 -60 -65 dbm -70 -75 -80 -85 figure 3 rssi histograms and their kernel and gaussian representations  taken from two aps seen in the same bind  the left figure shows how the peaks of a narrow bimodal can be more accurately captured by a kernel representation  the right figure shows how a gaussian can artificially spread out a bimodal that has two distant peaks  since p  s  is fixed given the observed signal strength vector s  with a uniform prior assumption on p  l   the final location estimate l is given as follows  l = argmax l '' k y i # p  si |l    8  previous work has compared similarity and nearest neighbor-based approaches to bayesian ones and come to differing conclusions  youssef and agrawala  2005 ; dong et al  2009   the main generalizable aspects that mao adds to previous work are  1  its use of a weighting factor that values the effect of aps differently and  2  its penalisation for missing aps  foreshadowing our results  we find in table 1 that two performed equally without these techniques  columns two and six   bayesian localisation has the advantage that it is natural to include prior estimates through a non-uniform valuation of p  l   making it less likely that an estimate will jump across a building for example  while we study these generalizable aspects in the context of mao  we invite other researchers to apply them to bayesian localisers  3.3 kernelising rssi histograms a final algorithmic technique that we have tested in mole is kernelising rssi values essentially spreading a given reading over adjacent bins a technique park et al   2011  used for sharing fingerprints across heterogeneous devices  the key observation is that summarising a set of rssi values with a gaussian can often lead to gaussians that are similar across nearby rooms  the alternative to a gaussian summarisation has typically been to simply leave the rssi values in raw histogram form  for example  a fingerprint based on histograms might include five 78 dbm readings  three 80 dbm  and one 83 dbm reading from a particular access point  by leaving these values in raw form  a reading of e.g  79 dbm will be discounted  instead of contributing to a match as it should  a gaussian summarisation  however  will also not yield an accurate picture for the distributions shape  it is skewed toward 78 instead  as shown in figure 3  we can apply a kernel to each rssi value  effectively spreading it out into adjacent bins without affecting the overall shape  this shape can capture differences between neighboring spaces that would be blurred by a gaussian summary  another advantage of the kernel representation of fingerprints is that it makes a method for sharing fingerprints across heterogeneous devices  park et al  2011  applicable to mao as well  as different rf devices have different signal characteristics both at the hardware and software level  a set of rssi fingerprints captured from one type of device will not produce highly accurate localisation when used unaltered on another type of device  to reduce the fingerprint difference between heterogeneous devices  park et al   2011  applied a linear transformation of signal strengths followed by kernelisation of the rssi histogram  when applied to mao  this kernelisation yields a similarity score more reliable across different devices  because it makes the individual difference of noise characteristics less distinct across devices  one issue with using histograms as compared to gaussians is the requirement that in theory they mole  a scalable  user-generated wifi positioning engine 7 consume an order-of-magnitude more space  this increase in space consumption is due to the range of rssi values  typically 30 to 100 dbm  versus a simple mean and standard deviation  multiplied by many places and many access points  this space consumption arguably could be significant for on-device positioning  in practice  however  because so few bins of the histogram are used even when kernelising that the actual space consumption is only a few floating point numbers more per access point in our experience  histogram kernelisation can be applied both to similarity-based localisers like mao and to bayesian localisers  we compare the accuracy of bayes and mao with and without kernelised histograms in section 5.2  4 implementation moles implementation is divided into client and server components  the client portion periodically scans wifi signals and makes an estimate of the current place available to other applications on the same mobile device  because all position estimates are calculated on the client using a cache of fingerprints  the clients exact position remains private and new estimates can be made in the absence of network connectivity  the server can only know which aggregations of fingerprints have been requested  not which rooms have actually been visited  4.1 client components the client itself consists of two parts  a daemon  which runs continuously in the background  and a user interface  which is displayed when the user wants to make a bind  modify the daemons behavior  or view statistics  figure 1 shows the user interface  its statistics include  the number of scans being used to form the estimate ; the count of distinct aps that were observed within these scans ; the current time between scans  i.e  scan period  ; the number of areas and individual places within those areas under mao consideration ; whether the user is deemed to be moving ; the score of the current estimate  overlap max  ; and churn  the time since the estimate was last changed  the mole daemon exports the current location estimate to all applications on the device  assuming that the user has set sharing to be on  4.1.1 using motion detection  as haeberlen et al   2004  showed  comparing more user scans against each fingerprint improves spot-on accuracy  with diminishing returns after about eight scans with their data  but frequent scanning reduces battery life  and having a fixed  large number of user scans introduces a lag when the user is moving between places  if a device has an accelerometer  mole uses it to find a happy medium between battery consumption and update lag  if the device is estimated to be stationary  it slows down the scan rate and other functions  when walking is detected  the current set of user scans is discarded and the scan rate is increased  up to once per 10s in our current implementation   by truncating the user scans  11 in figure 1   mole returns a less accurate  but more timely estimate  when the user stops moving  the user scans accumulate and the accuracy of the estimate improves  because we simply truncate the positioning and bind queues in response to movement  our method is independent of the choice of the particular motion detection algorithm ; we use shafer and changs detector  shafer and chang  2010   an alternative method would treat the detector as less of a black box and could dynamically adjust the length of the queues based on the magnitude or confidence with which movement was detected  to further reduce battery usage  we run the motion detector every 10 seconds with a duty cycle of 5 % ; at this rate motion detection has little effect on the overall battery consumption of a typical smartphone  we evaluate the effect of using motion detection on update delay and fingerprint creation in section 5.3 client-side filtering and positioning  client localisation involves fetching the correct areas fingerprint file  if it is not cached on-device   filtering down to a few fingerprints to be tested more precisely  and producing a top estimate with mao  as shown in figure 4  the client periodically asks the server for the 4.1.2 8 client server j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira bind database places with new binds fingerprint generator flush binds map server  2  fingerprint server ma c  1  putbind are ge a t a  place  scans  rea  m ac client a   surveyor  /usa/  /27 mead st.sig < sig place=kitchen mac=0xb  / > < sig place=study mac=0xa../ > /fin/  /keilalahdentie 2.sig < sig place=  / >  3  get http  //  /area client b  user   4  pick place w/best match figure 4 interaction between moles client and server components  two paths are shown   a  a bind coming from a surveyor  client a   being added to the bind database  and being processed into an areas fingerprint file  e.g  keilalahdentie 2.sig  and  b  a users device  client b  updating its local cache of fingerprints for the areas that it is potentially in  first it queries to see which areas match a random loud mac with getarea    then it fetches the fingerprint files for those areas  after its cache is up-to-date  it can form a position estimate locally  list of areas associated with one of its visible macs  step 1   and receives the fully-qualified  hierarchical  area name in response  step 2   it then requests the areas fingerprint file  step 3  and localises using the current user scans  step 4   to reduce the number of fingerprints that mao must compare  we apply charrows fingerprint filtering to our local cache to identify a set of nearby locations  charrow  2010  ; in figure 1  ten places have passed this filter  we use the filter twice  first on the cached areas  then on the cached places within the unfiltered areas  because areas can contain many places  this greatly reduces the number of places that must be compared when many areas are cached on the device  in addition  because the filter uses only mac presence/absence  it is far less cpu intensive than a room-level localiser  the more cpu intensive mao then runs on the smaller subset of places that have successfully passed the area and place filtering steps  like other room-level localisers  maos cpu usage is linear in the number of potential places under consideration  so reducing the set under its consideration can reduce battery consumption considerably when many places are cached  4.2 server components figure 4 shows moles four main server components and the key methods clients use to make binds and access fingerprints  moles server side is designed to run elastically in the cloud  its client-facing components  the map server and fingerprint server are easy to replicate  the figure shows the two paths of client actions   a  binding and  b  localising  a client bind is sent to the map server  which acts as a write-back cache  the fingerprint builder periodically monitors the database for places with new binds  or entirely new places   for each of these places  it aggregates all recent binds and determines a new fingerprint  fingerprints for other places in the same area are cached in the database  the builder then writes out each changed areas collection of fingerprints in a single area fingerprint file  because these files change infrequently and are named by the fully-qualified area  they can be trivially cached  versioned  and compared  moles server components are currently hosted on amazon web services 1  while we show only one server instance in the figure  it is fairly trivial to replicate and scale the server components because they can be divided geographically ; that is  the bind database  in particular  can be partitioned down to the level of individual areas if need be  because area fingerprint files change slowly over time after their initial creation period  we serve these files with an efficient static web server  replicas could be further pushed toward the client with a content delivery network  to receive fingerprints created by other nearby users  clients poll for changes in their current areas fingerprint at one minute intervals  the source code for mole has been released under an open source license and we invite contributions 2  the client components are 7k lines of qt/c++ ; the server is written in java and perl and relies on 1 http  //mole.research.nokia.com 2 http  //github.com/organic-positioning mole  a scalable  user-generated wifi positioning engine 9 1.0 response rate 0.8 0.6 0.4 0.2 0.0 -20 -30 -40 -50 -60 -70 -80 -90 mean received signal strength  dbm  -100 figure 5 as previous work has found  there exists a moderate correlation between response rate and received signal strength  these data are from 81 mole binds taken in a variety of indoor environments  several open source libraries  5 evaluation we have successfully tested mole in preliminary trials at several labs  using nokia n900 tablets  here  we examine mole in detail  both at the algorithmic and end-user level  we find that maos weight  based on response rate  and rssi readings contribute independently to uniquely identifying a place  5.1   through a set of controlled experiments  we find that mao has favorable accuracy results as compared to a state-of-the-art bayes localiser  achieving better performance when places are physically adjacent  5.2   we show that use of a motion detector can result in a dramatic improvement in update delay and in unpolluted fingerprint creation in organic settings  5.3   we show how mao can be used to estimate the physical distance between two objects  5.4   using the results from a deployment in a two story building  we show that mole can rapidly crowd-source an accurate location system  5.5   5.1 using response rate before we examine moles performance  it is reasonable to ask whether it is valid to use response rate as the basis for maos weighting factor at all  that is  is the response rate supplying distinct and consistent information as compared with rssi values  or could one be substituted for the other ? specifically  we ask   a  are they redundant quantities ?  b  is response rate consistent over visits to the same space ?  c  do they increase differentiability between different spaces ?  d  how does response rate relate to negative information e.g  the absence of an ap  and  e  does the weight improve end-to-end accuracy ? we also examine the effect of weight experimentally in section 5.2 first  using bind data from different alpha users of mole  we find that they are not redundant quantities  in figure 5  we show a scatter plot of the average rssi value vs the response rate for the same mac  the data is from 81 binds from different indoor environments  e.g  labs  houses  ; response rate is the fraction of scans where the mac was seen in each bind  in this data set  the two are only moderately correlated  2 = 0.62   suggesting that response rate  and therefore moles normalised weighting measure  provide additional information beyond received signal strength  second  to examine consistency over time  we compared an older set of binds to a newer one for eight rooms in one of our labs  the older set were all generated at least six months earlier than the newer set  fingerprints in each place contained 31 distinct mac addresses on average  we found a strong correlation for both response rate  2 = 0.73  and rssi  2 = 0.87   suggesting that these mainly independent values 10 j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira overlap o  a  a  b  b  1.0 0.8 0.6 0.4 0.2 0.0 0.0 0.2 0.4 0.6 0.8 average weight  wi+wj  /2 1.0 + figure 6 while response rate and received signal strength are moderately correlated  see figure 5   the average weight a 2 b and overlap o   only exhibit very low correlation  in this data set  taken from a nine-story building  the two quantities only have 2 = 0.11 this lack of correlation suggests that mao is  in fact  taking advantage of independent sources of information  cdf of places 1.0 0.8 0.6 0.4 0.2 0.0 0 % weighted no weight 10 % 20 % 30 % spot-on error 40 % 50 % figure 7 when the weighting functionality is switched off and all rf sources are counted equally  we found greatly reduced accuracy  for example  only 9 % of places had an error rate of less than 20 % using the weighting function  but 34 % had this same level of accuracy without it  stay consistent over time  and  therefore  can separately assist in identifying individual places  third  we examine whether maos weight is correlated with rssi overlap ; that is  when comparing across places  is it providing additional  differentiable information  using a professionally-collected scan data set b from a nine-story building which contains more than 1,400 distinct places  we compared the weight a + 2 and the overlap o   for all macs in common across places  150 million entries   when overlap is computed with gaussians  we find a correlation of 2 = 0.11 and  when it is computed using kernelised histograms  that of 2 = 0.08 a random sample of the data using gaussian overlap is shown in figure 6  illustrating their independence  we also divided the rooms that were close to each other and far away  less than the median distance of 12m or greater than that  respectively   and found the correlation essentially unchanged  collectively  this set of results suggests that not only are response rate and weight consistent over time  but also that they provide independent information for comparison among places  fourth  we discuss the relationship between response rate and what previous work has referred to as negative information  for example  letchner et al   2005  use the absence of an ap to bias the estimate in cases where the positive  presence  information is sparse or symmetric  we similarly use the absence of aps to reduce ambiguity between two sets of scans  fingerprints   in maos case  we penalize the overlap when aps are missing ; letchner et al  solve this by assigning an out-of-range dbm value to the missing aps  what is significantly different is the extent to which we penalize missing aps  if an ap is rarely seen in a given place  mao only weakly penalizes for its absence ; conversely  it penalizes strongly if an ap ought to be seen  how often does this occur ? if response rates were highly bimodal  then these two approaches would be effectively the same  in figure 8  we show two distributions of response rates for the same nine-story building  as collected by two different types of devices at different times  the data show that 35-40 % of access points had a response rate of 20 %  in a short scan on a users device  there is a reasonable likelihood that these aps would not be sensed  however  they could well be part of the mole  a scalable  user-generated wifi positioning engine cdf of access points 1.0 0.8 11 survey a survey b 0.6 0.4 0.2 0.0 0.0 0.2 0.4 0.6 0.8 1.0 response rate of access point in multi-minute bind figure 8 because response rates range fairly uniformly  penalizing equally for the absence of an ap does not appear to be the best use of negative information  the figure shows the distribution of response rates of access points from binds lasting several minutes from two surveys of the same nine-story building  survey a was conducted by a commercial location systems provider using their own proprietary equipment and includes 482 binds  survey b used nokia n900s and consists of 47 binds  response rates across these two surveys was similar and in line with other surveys in other locations  fingerprint for that same space because the ap is occasionally sensed there  especially if the fingerprint is an aggregation of crowd-sourced scans   because response rates range fairly uniformly  applying the same penalty for all missing aps too strongly penalizes aps that are unlikely to be observed and too weakly penalizes aps whose presence is expected  lastly  we examined the effect of eliminating the weighting factor on positioning accuracy  in simulation  we prepared a scan data set from the same nine-story building as above  we first excluded places with fewer than three visible aps or fewer than ten scans  removing 6 % of places  next we assigned a fingerprint to each place  assuming knowledge of all scans of the place  for each place  we took eight scan samples to build a user fingerprint  and then observed which place had the maximum matching fingerprint  if the place the localiser estimated was the same as the users  this was deemed a spot-on estimate  we repeated this test 1000 times for each place  for example  an accuracy of 80 % means that we correctly 800 times  using the scan trace  figure 7 shows the effect of weighting according to response localised 1000 rate as compared to weighting each ap equally  i.e  setting w = 1  while it is possible other refinements exist  such as weighting according to the maximum rssi value seen for the given ap  it is clear that a reasonable weighting is more accurate than simply valuing all aps equally  in addition to comparing mao to a bayesian localiser  we confirm the positive effect of basing a weight on response rate experimentally in the following section  5.2 positioning algorithms to examine moles positioning performance in a controlled setting  we conducted three experiments in two different labs  shown in figure 9 the goal of these experiments is to compare mao with a state-of-the-art nave bayes algorithm  using both gaussian summaries and kernelised histograms  in lab a  we conducted two end-to-end comparisons  a nearby experiment and a distant experiment  in the nearby experiment  the target rooms were adjacent to each other  separated by less than three meters  and had glass walls on one side  in the distant experiment  the targets are spread uniformly over the floor  in both experiments  we placed a stationary spot-check device in each target room  the spot-check devices did not move throughout the experiment ; they polled the server for new fingerprints at one minute intervals  performed scans at ten second intervals  and computed four estimates one for each algorithm using the same set of scans and fingerprints at the same time  another device acted as the roving  crowd-sourcing surveyor  with it in hand  a member of our team walked to 6-8 rooms on the floor  including those being tested  and bound each room with 2-3 minutes worth of scans  the bind data was sent to the server  processed into a fingerprint  and made available for download by the spot-check tablets  the bind database was cleared before each experiment  results from the distant experiment showed that all of the algorithms were able to perfectly distinguish rooms when the rooms under test were tens of meters apart  here  the target rooms were r1  r4  and r10  as highlighted in figure 9a  the mean distance between each of these target rooms and all of the other 12 j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira  a  lab a third floor map  stationary tablets for nearby experiment were placed in r7  r8  and r9  in red  ; those for the distant experiment were places in r1  r4  and r10  in green    b  lab a second floor map  volunteers spent about 25 % of their time on this floor during the crowd-sourcing experiment  5.5   320 304 308 309 303 302 321 310 311 316 312 313 319 322  c  lab b map figure 9 floor plans for the two different labs where we conducted experiments  room id mole  a scalable  user-generated wifi positioning engine 13 12 11 10 9 8 7 6 5 4 3 2 1 13 mao/gauss mao/hist bayes/gauss bayes/hist binds correct room 0 5 10 15 20 25 30 35 time  minutes  40 45 50 room id figure 10 when the locations with fingerprints are tens of meters apart  all of the localisation algorithms were able to successfully select the correct space  the spot-check tablet was located in room r4  soon after the roving tablet bound r4  all of the algorithms running on the stationary device in r4 selected it  16 15 14 13 12 11 10 9 8 7 6 5 4 mao/gauss mao/hist bayes/gauss bayes/hist correct room binds 0 5 10 15 20 time  minutes  25 figure 11 the time series from the nearby experiment illustrates how both 30 35 mao and bayes can exhibit instability  rooms where binds were performed  r2  r3  r5  r11  r13  was 21.59m  15.90m and 22.59m  respectively  data from the spot-check tablet in room r4 are shown in figure 10 initially  all devices select room r1 because that was the only entry in the database  the roving survey tablet binds room r4 at minute 10 after the spot-check tablet fetches the areas new fingerprint  which now includes r10  all of the algorithms change their prediction to r10  even with binds in three rooms that are less than 14m away   r5  r11  r13   the algorithms continue to estimate the correct room to the end of the experiment  in contrast to the distant experiment  the nearby one exemplifies the challenges in fine-grain wifi localisation  the three rooms  r7  r8  r9  are small meeting rooms  each 5.8m2  they lie in a line with the two end rooms 2.7m from the center one  r8  the entry walls and doors are glass  and join a common hallway  we examined the average spot-on hit rate for each rooms stationary tablet  in addition to the mean error and its deviation  the results show that  while bayes with gaussians had the lowest mean error for the two end rooms  mao with kernelised histograms had the best overall performance  its average hit rate was 90.7 % while bayes with gaussians  the next best  was 68.4 %  two interesting behaviors  in particular  are apparent from examining time-series plots for the stationary tablets  first  mao is more willing to shift between rooms sometimes to its advantage  sometimes to its detriment  it does this because it has no hysteresis  or prior  like nave bayes does  mao with gaussians was particularly unstable in this experiment  see  for example  minutes 22-25 in figure 11   second  mao with kernelised histograms was the only algorithm able to consistently differentiate between the two immediately adjacent spaces ; this is what leads it to having the highest average hit rate  from this we conclude that any of the algorithms are acceptable in medium to coarse grained scenarios  as in the distant experiment  but that mao with kernelised histograms may supply the best average-case performance if room-grain accuracy is required  in lab b  we had more spot-check tablets available and conducted a larger-scale  longer duration experiment  we first instrumented the tablets to run six localisers in parallel  each producing an estimate using the same set of scans at the same time  in particular  we wanted to see the effect of different parameters for mao with kernelised histograms in a live setting  referring to equation 4  we ran mao   a  with no weight  treating all aps equally  as in figure 7  and with no penalty for missing aps   b  with weight but no penalty  weighting aps by response rate  but still without the a p and b p factors  and  c  14 j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira table 1 algorithm comparison  lab b   spot-on hit rate  floor plan in figure 9c  room mao/ gauss mao/ hist./ no wt  mao/ hist./ no pen  mao/ hist./ penalty bayes/ gauss bayes/ hist 302 303 304 308 309 310 311 312 313 316 319 320 321 322 92.87 90.59 92.09 99.84 32.86 1.59 90.59 42.88 100.00 100.00 99.84 100.00 99.22 88.38 100.00 100.00 98.73 99.84 42.70 10.95 41.15 93.67 100.00 100.00 100.00 98.74 100.00 100.00 100.00 100.00 100.00 100.00 59.37 41.75 87.08 90.03 100.00 100.00 100.00 100.00 100.00 100.00 100.00 100.00 100.00 100.00 58.89 81.59 94.90 70.89 100.00 100.00 100.00 100.00 100.00 99.53 100.00 74.64 91.46 90.49 31.75 24.76 87.56 70.09 99.16 98.73 98.57 99.37 100.00 92.15 100.00 88.52 79.75 100.00 43.33 11.43 95.37 72.47 100.00 100.00 97.14 100.00 100.00 97.33 all 80.46 84.49 91.17 93.16 82.52 84.43 with weight and a penalty  where p = 41  since the tablets were stationary  the motion detector was not a factor   we placed fourteen spot-check devices in different rooms in the lab  including three in public spaces without doors between them  320  321  and 322 in figure 9   using two roving devices  we bound the spaces starting in room 312 and moving clockwise around the lab ; each bind contributed approximately five minutes worth of scans  about 30 scans   all data collection was done during an active workday with people moving around the lab during the experiment  we examined the spot-on accuracy of the stationary tablets during two periods  immediately after all of the rooms had been bound and 24 hours later  we report on the later data although the results were similar  we highlight three aspects of the results  shown in table 1 first  in contrast to previous simulation results which found that bayes with gaussians exhibits accuracies above 95 %  haeberlen et al  2004   it had a spot-on hit rate of 82.5 % in this more challenging live setting  i.e  the largest mean error   second  as in the nearby experiment above  no algorithm was able to consistently differentiate between small  adjacent offices that had doors open to a common hallway  309  310  311  312  ; the centroids of the rooms are about 2.5m apart  mao with kernelised histograms and with a weak penalty for missing aps performed best  on average  but it could not consistently select the spot-on choice  if we examine the rooms that were selected  however  mao with kernelised histograms did choose one of the four nearby rooms in 94.4 % of cases  while the topmost bayesian algorithm selected a nearby room in 88.3 % of cases  we conjecture that it may be possible to reflect this uncertainty back to the user by highlighting a set of rooms instead of supplying only a single room as the result  our third main result from this experiment was that mao with weighted kernelised histograms together with a small penalty for missing aps performed best overall  in particular  it was significantly more stable throughout the lab and was 10 % more accurate than bayes with kernelised histograms  the current state-of-the-art  5.3 motion detection we wanted to examine the effect of using a motion detector to improve update lag and fingerprint clarity  update lag occurs when a person moves from one room to another but the localiser does not reflect the new room immediately  this lag occurs because the localiser uses stale data  scans collected in a previous accel  mag  mole  a scalable  user-generated wifi positioning engine 20 16 room a room b room c 12 8 4 walking walking 0 0 1 2 3 4 5 time  minutes  15 6 scans used  a  accelerometer magnitude  at 10ms intervals  12 9 room a 6 3 0 0 1 incorrect estimate 2 rm  b room c incorrect estimate 3 4 time  minutes  5 6 scans used  b  place estimates without motion detector 12 9 room a 6 3 0 0 1 rm  b rm  c incorrect estimates 2 3 4 time  minutes  5 6  c  place estimates with motion detector figure 12 using a motion detector to vary the number of scans used by the localiser significantly reduces update lag  presenting more up-to-date results to the user  each + shows when the localiser received a new scan and produced a new estimate  the dashed line shows when the periodic motion detector determined that the user was walking  room or while walking are still being used to form the estimate of the current location  we performed an experiment where we examined the use of a simple motion detector to expire old scans ; the users fingerprint repopulated with scans when the user stopped moving  intuitively we would like to use as many scans as possible  but only if those scans come from the location the user is actually in  figure 12 illustrates how using a walk detector can significantly improve the user experience  in this experiment  we walked from room a to room b to room c  staying in room b for about two minutes  we logged the raw accelerometer readings at 10ms intervals  figure 12a  and ran two instances of mole on the same device  both running mao with gaussians  one instance did not use the motion detector and the other used the periodic motion detector described in section 4.1  sampling for 0.5 seconds every 10 seconds  all fingerprints were cached and did not change during the experiment  when mole did not use a motion detector  figure 12b   the estimate lagged behind the ground truth for one to two minutes because it used stale scans  when the instance running the motion detector detects motion  the dashed lines in figure 12c   the localisers scan queue is immediately truncated and there is far less delay before the correct space is chosen  a second significant benefit to using a motion detector in a crowd-sourced positioning system is improved fingerprint clarity  in a crowd-sourced environment  a user can walk into a room  notice the estimate is incorrect  and immediately send a correcting bind  unfortunately  this can lead to scans collected prior to the user entering the room becoming part of the fingerprint  a polluted fingerprint  to mitigate this problem  we truncate the on-device bind queue whenever walking is detected  this queue constitutes the scans that will be bound to the place if the user makes a correction  to illustrate fingerprint pollution  we conducted the same nearby experiment as described in section 5.2 only with the motion detector switched off  figure 13 illustrates two instances where the fingerprint for room r9  where the spot-check tablet is located  is polluted by binds in other rooms  when the roving tablet binds room r7 for the second time at minute 20  we observe a shift in the estimates from r9 to r7  this occurred because many of the scans that were collected in room r9 were not dropped when the user walked into room r7  causing r7s fingerprint to become similar to r9s  the second instance is when room r14 is bound at minute 39  soon after the user leaves the target room  r9  again  this causes j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira room id 16 16 15 14 13 12 11 10 9 8 7 6 5 4 mao bayes correct room 0 10 polluting binds 20 30 40 time  minutes  50 60 70 figure 13 in a crowd-sourced positioning system without motion detection  fingerprints can easily become polluted with scans from old rooms  the data show that the two fingerprints of rooms r7 and r14 erroneously acquired scans collected in room r9  causing the estimate for r9 to vacillate with both positioning algorithms  fingerprint similarity 1.0 0.5 0.0 -0.5 -1.0 0 50 100 150 200 250 300 centroid distance  ft  350 400 figure 14 fingerprint-to-physical distance correlation  the data show that there is a strong correlation between fingerprint similarity and physical distance  particularly when spaces are nearby to one another  physical distance is measured as centroid-to-centroid in a nine-story building which contains more than 1,400 distinct spaces  the top and bottom whiskers show the top 5 % and bottom 5 %  respectively  box plot lines mark the 25th  50th  and 75th pcts  r14 and r9 to erroneously have similar fingerprints  resulting in the localisers vacillating between several locations  as figure 11 shows  with the motion detector switched on  fingerprints do not become polluted when new binds occur  5.4 using fingerprint similarity one advantage of mao as compared to bayesian localisers is that it provides an abstract similarity function between any two fingerprints  either by using equation 4 directly or by replacing o   with the overlap of the two histograms  inferring physical distance from fingerprint distance has many uses  from the canonical finding the nearest printer to proximity-based notifications and device-pairing  krumm and hinckley  2004   by processing the scans from the 1,400 room building discussed above  we found that a useful correlation existed between the physical distance and fingerprint similarity across pairs of rooms  using mao with gaussians  we show the correlation for this data set in figure 14 given objects or spaces tagged with fingerprints  this suggests that mao can be used to estimate physical distances between them at a finer grain than simply observing that they can see the same mac  for example  in this data set  spaces which had a fingerprint similarity > 0.5 were always less than 100 feet apart  closer spaces have a similarity nearer to 1   because the fingerprint similarity computation is fairly trivial  it would also be possible to see if any k devices were likely to be within some physical distance of one another  a second use for fingerprint similarity is that  even when the correct place is not the most similar to the users fingerprint  it is almost always one of of the most similar  because mao returns a similarity score for each potential place  it is possible to look down the list of returned places beyond the top ranked place  figure 15 shows that the correct place is almost always in the top four ranked places  in a visual map application  all of the highly ranked places could be highlighted if one did not stand out  assisting the user in making a correction  mole  a scalable  user-generated wifi positioning engine 17 cdf of places 1.0 0.8 0.6 rank 4 3 2 only 1 0.4 0.2 0.0 0 % 5 % 10 % spot-on error 15 % 20 % figure 15 many of the places in our data set are topologically close to one another  topologically close places often have similar rf fingerprints  which occasionally confounds rf-based localisation  if we allow for non-exact matches  the data show that the true correct place is often only a few steps away from our best guess  we foresee several algorithmic and user-facing uses for fingerprint similarity  first  similarity can be translated into degrees of proximity  e.g  nearby  distant   we have added a proximity user interface to mole  allowing a user to see which other users are nearby  it is not enabled by default   second  fingerprint similarity could be used to construct multiple fingerprints per space  some rooms are  in fact  long hallways or large outdoor areas  a single fingerprint does not capture the signal variation throughout  by comparing binds for the same space  the fingerprint builder could decide to either merge them into a single fingerprint or to create an additional fingerprint associated with the same space  a final related use is outlier detection  if sets of scans linked to the same space are very different  an error condition can be raised  potentially lowering the confidence in other contributions by the same user  evaluating uses of proximity and fingerprint similarity is future work  5.5 crowd-sourcing behavior for our last experiment  we wanted to understand whether mole could be used by untrained participants  we first modified the user interface to include a positive feedback button  estimate ok   signifying that the displayed estimate was  in fact  correct  we recruited four volunteers from lab a ; they had seen us testing mole previously  but were otherwise untrained  before giving the tablets to the volunteers  we performed one bind in room r1 on an empty database  in effect  this initialized the hierarchy shown on all of the tablets so the volunteers would only need to edit the room label  they were given instructions to walk from room to room  fixing the estimate when it was wrong and clicking estimate ok when it was correct  they were allowed to wait up to 30 seconds  three scans  for the estimate to become correct before marking ok and up to 60 seconds  six scans  before binding a correction  in the middle of the workday  the volunteers then surveyed two floors for seventy minutes  splitting their time about 75/25 across the third and second floors  respectively  see figure 9   two of the meeting rooms  r14 and r17  were occupied during the experiment  and so were left unbound  figure 16 shows how coverage and spot-on hit rate changed during the experiment  we calculated hit rate as a ten minute moving average of spot-on accuracy  i.e  when the volunteer clicked estimate ok  ; this included the first bind for each room which is  by definition  an incorrect estimate  once the rooms were surveyed after minute 50  the hit rate remained above 85 % as it had done in our controlled experiments  no incorrect floor estimates were encountered  more qualitatively  the results show that a space shared by many people approximately 150 people work on the two floors covered in the experiment can be collaboratively surveyed by only a handful  the volunteers provided us with feedback on moles usability and utility  they found the motion detector was occasionally not sensitive enough and that the device needed to be artificially shaken when it did not detect their walking  we had instructed them to do this   because binds are sent to the server and not immediately applied to the binding clients area fingerprint cache  see figure 4   there can be up to a twenty second delay in reflecting binds back to the user ; several volunteers found this confusing  we plan on fixing this and the motion detector in upcoming versions  in general  the volunteers found mole highly accurate  although they noticed the estimates were most often wrong in the same small  adjacent rooms 18 j ledlie  j park  d curtis  a cavalcante  l camara  a costa  and r vieira hit rate & coverage 100 % 80 % 60 % 40 % 20 % coverage hit rate 0 % 0 10 20 30 40 time  minutes  50 60 70 figure 16 four untrained volunteers were able to quickly survey a two story lab  with resulting accuracies above 85 %  no floor errors were encountered  we used for the nearby case  5.2   they enthusiastically described several potential use cases such as navigating shopping malls  airports  and museums  finding promotions when shopping  and locating friends  6 related work mole builds on two decades of prior work on positioning in gps-less environments  early systems  such as active badge  want et al  1992  and cricket  priyantha et al  2000   used customized beacons and receivers  developing both main components of their respective positioning systems  as wifi and cellular beacons have come to provide long-lived physical beacons at no additional infrastructure cost and as people have come to regularly carry personal mobile devices  the parameters of the indoor positioning problem have  in general  become more constrained  most research now assumes a fixed beaconing infrastructure is available  but whose main purpose is communication  not positioning  since then  as first presented in the radar project more than a decade ago  bahl and padmanabhan  2000   researchers have tended to focus on two main approaches to gps-less positioning   a  a radio map approach  where first the position of the beacons is estimated  and then the position of the mobile device is triangulated using methods such as a rssi-to-distance conversion  e.g  griswold et al   2004   or angle-of-arrival  e.g  niculescu and badrinath  2003    and  b  a fingerprint approach where the position of the beacons is ignored  and  instead  some method is used to select the best matching grid point or place from a database  e.g  haeberlen et al   2004    both of these broad classes require periodic surveying  which is typically a manual  laborious process and both classes have merit depending on the application  in general  the radio map approach is far more compact  its storage is o  radio beacons    while the fingerprint approach is o  spaces   however  because of the confounding properties of varying building materials and multipath  hashemi  1993 ; pahlavan et al  1998   most comparisons have found the fingerprint approach to be more accurate  e.g  10m for the radio map of griswold et al  versus a few meters for haeberlen et al   very recent work using multiple antennae may again open up this question to debate  xiong and jamieson  2012   mole uses fingerprints for positioning  approach b above   end-users collect its fingerprints through crowd-sourcing  and it uses mao for position estimation  haeberlen et al   2004  suggested summarizing rssi distributions with gaussians  we used the overlap coefficient of pairs of gaussian summaries  weighted by response rate  as one of maos localisers  we found that using the overlap of kernelised histograms provided superior accuracy  however   lemelson et al   2009  use unweighted gaussian overlap not to localise but to anticipate the likely estimate localisation error for a given point  they show that points with very similar fingerprints  as determined by the overlap function  tend to have poor localisation accuracy  because they are often confused with adjacent points  an example where this method without the weighting would clearly perform poorly is a case where many spaces occasionally observe many aps  and always observe exactly one unique ap  in this case  the noweighting method would lose the single unique characteristic in the noise  whereas the weighting method would select the right space  although this is an extreme example  it illustrates a problem that often occurs in environments with dense but intermittent ap coverage  our results show that gaussian overlap mole  a scalable  user-generated wifi positioning engine 19 with weighting is clearly superior to a weighting based on response rate  which performs the worst of the algorithms under test in table 1 the reponse rate of an ap  which mao uses as a weighting function for its overlap coefficient  has also been considered as an altervative to rssi measurements for rf-based localization  cheng et al   2005  explored the use of the reponse rate for 802.11-based localization in outdoor environments  showing that it has a strong correlation to the distance from the originating ap  bargh and de groote  2008  used the reponse rate for bluetooth-based localization as an alternative to signal strengths  which is much more difficult to obtain on bluetooth devices than on 802.11 devices  relatedly  letchner et al   2005  use negative information the absence of an ap to bias the estimate toward places where that ap is absent  we showed in section 5.1 how  because many aps may only be sensed from rarely in a given place  that this use of negative information is quite rigid and unlikely to give good results  in this work  we combined the response rate with the signal strength  achieving significant gain in localization accuracy compared to using the signal strength alone  we showed how mole varies the length of the localisers scan queue to use many recent scans  but only if those scans are likely to be from the current place  truncating the scan queue on movement detection also prevented bind pollution  5.3   several pieces of prior work have used accelerometer-based motion detection in location systems in different ways  kim et al   2010  use motion detection to save energy  after a user has arrived at a place and enough scans have been collected  and the variance in the motion detected is low enough  the wifi radios are turned off  once the motion variance exceeds its threshold  wifi scanning is resumed  shafer and chang  2010  detect movement and  if walking is detected  perform what they refer to as a full localisation  which presumably entails taking many scans over a short period after truncating the scan queue  if a users walk is longer than the movement detection period  this can result in significantly more battery drain than our method because long series of scans will be repeatedly discarded  they also propose using low variance to detect idleness  choosing to scan slowly rather than switch off wifi entirely  bolliger et al   2009  describe asynchronous interval labeling which allows sets of scans collected during the same stationary period to be retroactively bound at a more convenient time  earlier  krumm and horvitz  2004  used wifi  not accelerometers  to infer motion  using a hidden markov model to identify motion and location simultaneously  7 conclusion this article presented mole  a mobile organic localisation engine  and focused primarily on its positioning algorithm mao  in addition to mao  we described in detail its hierarchical arrangement of places  which allows for unambiguous interpretation of users location input  and its cloud-based server design  which improves scalability and privacy  together  these components contribute to a positioning system that can run compactly on a broad range of mobile devices and scale worldwide  in particular  through controlled experiments and simulations  we showed that our localisation algorithm was 10 % more accurate than the current state-of-the-art  this boost in accuracy occurred because we used discriminating information a weighting based on response rate that prior work had ignored  we also showed how the use of a motion detector can significantly reduce user-perceived estimation latency and eliminate bind pollution  where scans collected outside of a room spuriously become part of that rooms fingerprint  finally  we gave mole to untrained users and found that they could quickly survey a medium-sized building  resulting in an accurate  shared location database that could be used for many applications  in the future  we plan to extend the hierarchical and scalable structure of mole to a visual map-based ui and to construct a browser plug-in version of mole to work with more mobile devices and operating systems  we also plan to research combining slow background scans  an idleness detector  and a distinguishing mao score to generate automatic binds that maintain an areas fingerprints as access points change over time due to maintenance events  20 references acknowledgment we thank the rvsn research group  especially prof seth teller  at mit for their on-going collaboration and insights  references bahl  p and padmanabhan  v.n  2000 radar  an in-building rf-based user location and tracking system  in  ieee infocom  tel aviv  israel  775784 bargh  m.s  and de groote  r  2008 indoor localization based on response rate of bluetooth inquiries  in  international workshop on mobile entity localization and tracking in gps-less environments  melt   san francisco  ca  4954 barry  a  fischer  b  and chang  m  2009 a long-duration study of user-trained 802.11 localization  in  international workshop on mobile entity localization and tracking in gps-less environments  melt   orlando  fl  197212 bhasker  e.s  brown  s.w  and griswold  w.g  2004 employing user feedback for fast  accurate  low-maintenance geolocationing  in  international conference on pervasive computing and communications  percom   orlando  fl  111120 bolliger  p  2008 redpin  adaptive  zero-configuration indoor localization  in  international workshop on mobile entity localization and tracking in gps-less environments  melt   san francisco  ca  5560 bolliger  p  partridge  k  chu  m  and langheinrich  m  2009 improving location fingerprinting through motion detection and asynchronous interval labeling  in  symposium on location and context awareness  loca   tokyo japan  3751 charrow  b  2010 organic indoor location  infrastructure and applications  masters thesis  massachusetts institute of technology  cheng  y.c  chawathe  y  lamarca  a  and krumm  j  2005 accuracy characterization for metropolitan-scale wi-fi localization  in  international conference on mobile systems  applications  and services  mobisys   seattle  wa  233245 dong  f  chen  y  liu  j  ning  q  and piao  s  2009 a calibration-free localization solution for handling signal strength variance  in  international workshop on mobile entity localization and tracking in gps-less environments  melt   orlando  fl  7990 ekahau  2010 ekahau positioning engine  http  //ekahau.com   online ; accessed 29-may-2012   griswold  w.g  shanahan  p  brown  s.w  boyer  r.t  ratto  m  shapiro  r.b  and truong  t.m  2004 activecampus  experiments in community-oriented ubiquitous computing  ieee computer  37  10   7381 haeberlen  a  flannery  e  ladd  a.m  rudys  a  wallach  d.s  and kavraki  l.e  2004 practical robust localization over large-scale 802.11 wireless networks  in  international conference on mobile computing and networking  mobicom   philadelphia  pa  7084 hashemi  h  1993 impulse response modeling of indoor radio propagation channels  ieee journal on selected areas in communications  11  7   967978 inman  h.f and bradley  e.l  1989 the overlapping coefficient as a measure of agreement between probability distributions  communications in statistics-theory and methods  18  10   38513874 kim  d.h  kim  y  estrin  d  and srivastava  m.b  2010 sensloc  sensing everyday places and paths using less energy  in  embedded networked sensor systems  sensys   zurich  switzerland  4356 krumm  j and hinckley  k  2004 the nearme wireless proximity server  in  ubiquitous computing  nottingham  uk  283300 krumm  j and horvitz  e  2004 locadio  inferring motion and location from wi-fi signal strengths  in  international conference on mobile and ubiquitous systems  mobiquitous   cambridge  ma  4 13 lemelson  h  kjaergaard  m  hansen  r  and king  t  2009 error estimation for indoor 802.11 location fingerprinting  in  symposium on location and context awareness  loca   tokyo japan  138155 references 21 letchner  j  fox  d  and lamarca  a  2005 large-scale localization from wireless signal strength  in  twentieth national conference on artificial intelligence  pittsburgh  pennsylvania  1520 linacre  j.m  1996 overlapping normal distributions  rasch measurement transactions  10  1   487488 madigan  d  einahrawy  e  martin  r.p  ju  w.h  krishnan  p  and krishnakumar  a.s  2005 bayesian indoor positioning systems  in  ieee infocom  miami  fl  12171227 niculescu  d and badrinath  b.r  2003 ad hoc positioning system  aps  using aoa  in  infocom  san franciso  ca  pahlavan  k  krishnamurthy  p  and beneat  j  1998 wideband radio propagation modeling for indoor geolocation applications  ieee communications magazine  36  6065 park  j  charrow  b  curtis  d  battat  j  minkov  e  hicks  j  teller  s  and ledlie  j  2010 growing an organic indoor location system  in  international conference on mobile systems  applications  and services  mobisys   san francisco  ca  271284 park  j  curtis  d  teller  s  and ledlie  j  2011 implications of device diversity for organic localization  in  ieee infocom  shanghai  china  31823190 priyantha  n  chakraborty  a  and balakrishnan  h  2000 the cricket location-support system  in  international conference on mobile computing and networking  mobicom   boston  ma  3243 shafer  i and chang  m.l  2010 movement detection for power-efficient smartphone wlan localization  in  international conference on modeling  analysis and simulation of wireless and mobile systems  wswim   miami beach  fl  want  r  falcao  v  and gibbons  j  1992 the active badge location system  acm trans on information systems  10  91102 xiong  j and jamieson  k  2012 towards fine-grained radio-based indoor location  in  international workshop on mobile computing systems and applications  hotmobile   san diego  ca  youssef  m and agrawala  a  2005 the horus wlan location determination system  in  international conference on mobile systems  applications  and services  mobisys   seattle  wa  