deepble  localized navigation using low energy bluetooth dept  of cis  senior design 2013-2014 eric kim erkim @ seas.upenn.edu univ  of pennsylvania philadelphia  pa abstract with the widespread availability of the smart phone  individual navigation has been refined such that a user can navigate to and from a particular address  the statrd used today for outdoor navigation relies on gps satellites to track the device location  gps is generally not well suited for indoor use for two reasons  1 gps does not provide a high level of accuracy  and 2 the gps signal breaks down indoors due to line of sight  los   so rather than using gps satellites  indoor navigation and positioning has been accomplished largely through using networks of nearby anchors or waypoints  that have a static known position  the most commonly used framework for anchors makes use of wifi access points  a device detects a wifi access point with a unique id ; once multiple access points are detected  we can triangulate the exact position of the device  indeed there are several existing companies that will set up the neccessary pieces to allow for step by step navigation through a shopping mall or departmental store  1 google and apple have both introduced a technology called low energy bluetooth  also known as ble or bluetooth smart  into their smartphones that has opened up a new way to navigate indoors  apple in their recent release of ios7 has included in their apis a technology called ibeacon that uses ble extensively for the purpose of geolocation  1   any beacon that is set up will be available for general iphone users to navigate with ; what makes this technology remarkable is that it uses very little energy  as the name suggests  has considerable range  especially comapred to wifi  and most importantly  it is lightweight and portable  similarily  android in their recent os release has implemented apis for using ble as well and although it is has not advanced quite as far as the apple technology  primarily due to googles preference of near field communication  or nfc   it is well defined enough to develop upon  4   as of writing the writing of this paper  smart phones are shipped with ble hardware built in  but only the most recent smart phone releases have the os that provides a native api to utilize ble  suffice it to say  leveraging ble for the purposes of navigation is still in its early stages  a method of context free positioning has many important use cases  one example is in emergency response situations  where location awareness is of utmost importance  existing indoor navigation solutions rely heavily on installed sensor networks  whereas emergency agents are more interested in fully auto-deployable systems  8   the current wifi implementation requires wifi access points  a data service that computes location  and keeps track of all the locations at any given point   and a location specific context  a blueprint overlay of the building ; the access points can not transmit any information themselves  and the phone must overlay the context of its position after it calculates its location   although this may be feasible for shopping malls and deparmental stores  it can not be extended into scenarios where such a framework can not be readily or cheaply set up  we may be able to use pre existing wifi networks  but without a distributed consensus  software to identify the various wifi networks and translate the signal strength data   it can not be extended to an emergency response scenario  in addition  wifi access points may be unreliable  inconvenient  and poorly placed for the situation at hand  with ble  all we need to do is drop a few anchors to detect devices  where they can communicate small pieces of data to each other  and we can successfully track location  1 currently  mobile phones are the primary method of navigation  however  indoor positioning and navigation poses a unique problem because the global positioning system  gps  satellites normally used to navigate oudoors have limited use indoors  one solution is using wifi access points as anchors  measuring the signal strength and calulating position using trilateration  indeed  there are tools today that provide the framework for such an implementation  however  there are certain disadvantages with using wifi  namely that there are heavy setup costs in laying the foundation for wifi position tracking  this application aims to address this issue by implementing a different method of indoor positioning  one that uses the recently developed bluetooth low energy  ble   with the new apis released by google  we can now use bluetooth devices to act as anchors  the key feature of ble is the lightweight communication between devices that allows us to provide just enough context  while still being agile and portable  this peer to peer messaging opens up many possibilities  ranging from applications in shopping malls to emergency response situations  the application will demonstrate the simplicity and robustness of ble  as well as its many extendable applications and capabilities  the relevant code for the application discussed in the article can be found at https  //github.com/erkim/deepble 1 introduction advisor  boon thau loo  boonloo @ cis.upenn.edu   see meridianapps.com and senionlab.com current positioning systems are too inflexible ; they are neither portable nor easy to set up  in addition  particularly with wifi  a key feature that is lacking is scalability  the field in which navigation is possible is entirely restricted by where wifi access points can be placed  this is clearly a larger issue outdoors  where it may not be feasible nor particularly cost effective to place wifi access points just for the purpose of navigation  herein lies the fundamental problems of current navigation  although they take advantage of current frameworks and systems already in place  they are entirely bound by these frameworks  any issues that may arise must always take into consideration that these frameworks are unaccomodating ; one can not alter the gps network because a particular location gets bad reception  nor can one freely alter the wifi access point network to more convenient locations conducive to position tracking  to tackle these inflexibilities  we explore the usability and robustness of ble with a simple app designed specifically to take advantage of bles low cost  portability and easy setup  and its rising ubiquity as leverage against the wifi and gps based positioning systems in place today  we address the issue of scalability  portability  and robustness all at once by making full use of the lightweight  grassroots nature of bluetooth  issues of line of sight  los   signal reception  accuracy  scalability  can all be addressed by freely altering the bluetooth anchor network  either manipulating the individual anchors or simply adding more  ble is not without its disadvantages however  since an individual anchor in a ble network works with a much smaller scale  los has a much bigger impact on a single device than it would on wifi or gps  for this reason  we depart from the traditional step by step navigation that characterizes the other frameworks  instead the anchors act much more like waypoints  points of fixed location with enough information about its own location to point a user to the right direction  we will cover this in greater detail in the system implementation details ; suffice it to say  with ble  it is neither desirable nor the most effective to calculate accuracy to 1 meter or less  like the other implementations do  another important issue is the security between devices ; bluetooth anchors advertise their information  and it is possible to replicate this behavior  or manipulate the information  we will discuss possible approaches and solutions to address this  finally  ble is a relatively new technology  with only the more recent smart phones built with the hardware  the apis are still under development  and the implementation will be ever changing in the next few years  2 related work fully functional indoor navigation apps  although a relatively recent innovation  have been implemented before  for example  the company senionlab provides a way for third parties  primarily shopping malls and departmental stores  to integrate an indoor navigation api to their existing applications  7  2  the api includes location based advertising  allowing for companies to send tailored advertisements to the customers that walk by their store  location analytics  the ability to gather data on user behavior  and most importaantly  a fully functional step by step naviga2 senionlab  the website contains a splendid video demonstrating the capabilities of their turn by turn navigation http  //senionlab.com tion system that works at the granular level  as discussed previously  these apps rely on wifi access points as the anchors  although this allows the application to pinpoint the exact location of the device and track it as it moves  it does not provide environmental awareness  these wifi based implementations do not carry any data about their particular locations  such as whether a store carries a particular product  or if the store is currently having a sale  a fundamental assumption is being made in this case  that is  users already know where they want to go  rather than what they want to do  and this is the basic issue we seek to resolve  we can not forget the costs of implementing a framework that uses wifi access points  wifi needs to be set up well in advanced  and a data service that calculates position must be implemented  finally  wifi has associated costs that the party must invest in  such as monthly internet charges  maintenance  and an app for users to download so that all of the positioning has the correct context and protocols  this is on top of the previously mentioned weakness of wifi in general  with ble  we no longer have to make this assumption  ble singal transmitters are low cost  for example  with apples ibeacon  beacons as theyre called costs as little as 30 to 40 dollars  as the name suggests  ble uses little energy  most important of all they can be ubiquitous  shopping mall where every store has a proximity sensor  or an anchor  can achieve much more granularity than wifi access points could ever provide  with this granularity comes enriched data  anchors no longer just provide a specific location  they can provide specialized promotions  tailored directions  and more important for our purposes  contextualized notifications  5   this means that a user can navigate through a room and discover information about their specific location  such as other users in the room or immediate area  indoor navigation using older bluetooth technology  bluetooth classic as it is now called  has also been implemented  these systems compare the signal strengths of surrounding bluetooth devices to a database of measurement taken across the indoor area  in order to estimate the users position  accuracies of approximately 1.5 meters have been achieved through such methods  2   although we will not be implementing step by step navigation  as these systems have done  it is certainly possible to extend ble navigation such that we can achieve these levels of accuracy  also important to note is that there are certainly companies that implement a ble based positioning system  6   indoo.rs for example  offers a package of bluetooth anchors along with and api for navigation  their system involves integrating their sdk with existing applications  features include navigation  not specifically for indoor use  but optimized for indoors   routing  and analytics that track user movements  the main difference between our application and the sdk created by inddo.rs is that our application aims to be completely stand alone  optimized for the emergency response use case  our biggest motivation is to remove the need for setting up complex systems in order to start navigating  the app is developed on googles android  and although the apis are well founded  apples ios7 has a much more mature api allowing for more powerful applications of ble  as such  the implementation details are android specific ; with more capabilities  an iphone implementing a ble application may behave differently from our application  in deed  the previously mention indoor navigation apis are optimized for apples iphones  3 system model acceptes attribute protocol requests  commands and confirmations form the client  it then sends responses to requests and when configured  send indication and notifcations asynchronously to the client when specified events occur on the server  its clear that our anchors will take the server role in this case  complement to the server role is the client role  client devices transmit and receive data to and from the server devices  note that these roles are not necessarily set in stone ; the roles are interchangeable  and in the device to device communication case in particular  a device takes on both roles  there are other times where this is not the case  for example a bluetooth headset with no storage capabilities will naturally act as the client  paired to the server device  figure 2  the central peripheral relationship figure 1  ble client anchor system model following our design goals of portability  scalability and robustness  our ble app will provide just enough context with each anchor  with the primary advantage of being fully customizable  the user enters information about the anchor  instead of relying on a predefined context  before moving forward  a few details about how the bluetooth low energy system works must be discussed  as designed by bluetooth themselves  ble centers around the use of the generic attribute  gatt  profile  9   the gatt profile is a general specification for sending and receiving short pieces of data known as attributes over an le link  this profile allows highly customizable applications suited for their individual purposes  enabling devices to co-operate predictably in particular environments  the attributes are defined by a set of services and characteristics  services and the characteristics associated with them are essentially tailored protocols for communication for certain devices  for example  the link loss service defines behavior when a link is lost between two devices  this service consists of a single characteristic  the alert level characteristic  each characteristic contais a single value  with any number of descriptors describing the characteristic  in our example  the alert level characteristic carries an indication on how devices should behave when a link is disconnected  important to note is that there is an extensive list of predefined servies and characteristics available for most common applications  and in addition  custom services and characteristics may be defined  either through a generic attribute service  or a developer defined service  the gatt profile defines a server client relationship between devices  the server acts as a database  holding information about the device  whether it be its current coordinates  or the context in which the device is placed  it stores the data transported over the attribute protocol  and unique to bluetooth low energy are the central and peripheral roles  this relationship is quite similar to the server client relationship  but now with bluetooth low energy  the peripheral role has additional functionality  in addition to being able to store data for client devices to retrieve  peripheral devices actively broadcast the information they carry  this is made possible due to the gatt profile ; previously for a device to communicate with another  it had to pair  or establish a connection  this central peripheral relationship is one of the primary reasons that ble consumes the energy it does ; no longer is this pairing required for two devices to communicate  a peripheral device can simply broadcast its information  while central devices in the area can collect that data  the important innovation to note here is that a device no longer has to maintain a constant link between another to receive or transmit data  by following the protocols of the gatt profile  devices are now able to quietly collect and advertise data  for our application  anchors take the server/peripheral role  containing data about their location and broadcasting information about their location ; specifically  a custom defined service that holds a string containing some context about the device will handle the communication between the anchor and the client device  user devices take the central role  collecting anchor data as they pass through the anchors bluetooth fields  for our purposes  a device may switch from the client to the server role  since bluetooth devices specifically designed to act as anchors broadcasting their context are out of reach  to address this  we simply allow for a smartphone to take the role of an anchor ; it is easy to see how one would design hardware devoted entirely to being an anchor  the application provides a user the option to set their device as an anchor ; the device will then sit quietly and allow other devices to discover it  if not an anchor  a device will then be able to scan for other anchors  once it finds an anchor  it will update its own location according to the information received from the anchor  if there are multiple anchors in range  the device will connect with whichever anchor the user chooses  see figure 1 put together  the application will provide users with a simple interface to connect to anchors as they navigate  client devices will scan as they move  picking up location information from each of the anchors it connects with  this is the basic waypoint navigation discussed earlier  we purposely avoid calculating exact position in our application  for precise position estimations  the dependence between distance and received signal strength has to be accurately measured and scaled accordingly  in addition  particularly indoors  boundary conditions like reflections and wall damping make the use of the equation for the free-field propogation impossible  in order to calculate exact position  we need precise received signal strength indicator  rssi  measurements  3   although android allows for easy access to rssi  we sacrifice scalability and fault tolerance by having client devices calculate exact positions  4 system implementation before moving on to the system implementation  some details regarding the bluetooth low energy specifications are included  technical specification distance/range over the air data rate application throughput security latency peak current consumption other info bluetooth low energy  9  > 100m  > 330ft  1 mbit/s 0.27 mbit/s 128-bit aes with counter mode cbc-mac  user defined application layer 6ms < 15 ma includes message integrity check  adaptive frequency hopping the application has two main parts  a context page  where a user can define relevant details regarding the device  and a device scan activity  where anchors are discovered and connected to  in the context page  the user is able to name their device ; this is the primary method in which a user can describe the context of the device  this is most important when the device is set to act as an anchor  client devices that connect to this anchor will recognize this device as whatever the user has decided to name the anchor  since the context here is a simple string  it is suggested that a user inputs something descriptive about where the device is located  for example  a user can name their anchor as home  and all clients that detect and connect with this anchor will have their current anchor set as home  a custom gatt profile was designed off of the generic access profile  device verification  verifying the device is using the same gatt protocol  is done using universally unique identifiers  uuids   the gatt profiles provided by bluetooth all have a uuid that acts as a verification between devices  that the profile and service in question are relevant   a custom  random uuid was generated for our purposes  and on this uuid the device context characteristic was defined  this characteristic contains the string that the user defined earlier in the device context page  client de figure 3  the device context activity vices contain a global variable called currentanchor  which contains the instance of the anchor that the client device is currently connected to  client devices then read the characteristic transmitted by the anchor device  where it will then appropriately record the information it receives  figure 4  the device scan activity on the device scan activity  a search for discoverable devices can be initiated  to handle this  a separate bluetoothleservice class was defined to take care of all ble related services  which included connecting to a device  writing and reading characteristics  broadcasting updates  initiating discovery  and defining which gatt services are relevant to the device  once a scan is initiated  the user will then be able to choose out of the anchors in the users range which to connect to and gather context from  the connection and data transfer is implemented using bluetooth classic  currently  the android apis do not sup port devices taking the peripheral role ; that is  devices can not yet broadcast their information and push it down to client devices that are scanning  this is purely a limitation of the android apis  and it is foreseen that android will release hardware and software support for devices to take on the peripheral role  since this was the case  bluetooth low energy was not used to transmit data  unfortunately  this causes the application to lose many of the benefits stated earlier associated with bluetooth low energy  most importantly  this required a client device to pair with an anchor and maintain a channel between which the devices could transmit and receive data  characteristics were still written thanks to the bluetoothleservice class  and all the appropriate protocols associated with the gatt profile and followed  but this is not exposed to the user  since in practice the communication itself is done entirely through bluetooth classic  it should also be noted that  since the device only needs to maintain connection long enough to receive the context information from the anchor  the connection does not have to be maintained for extended periods of time  once the information is transmitted  the device promptly disconnects the pairing with the device anchor  with the use of bluetooth classic  a separate bluetoothservice class was defined to handle the bluetooth connection  since bluetooth classic involves a continuous connection between devices  synchrony was of utmost importance  the bluetoothservice class is in many ways similar to the bluetoothleservice  but with some additional restrictions  all the same function calls  such as connecting  writing  reading and sending messages  and broadcasting updates were included and modified to maintain synchrony between the device it is paired with  each function call runs as a thread in parallel with the paired device to maintain synchrony   a  main screen  b  set anchor prompt figure 5  the main anchor activity controlling these two activities is the main device activity  where a user has the option to start scans or view and edit their information  here  the option to set the device as an anchor is presented  once a user decides to set the device as an anchor  the application ensures that the device becomes discoverable to other devices for 300 seconds  this is a hard limit set by the android bluetooth api before it requires user input to initiate discoverability again   one of the drawbacks of using bluetooth classic here is the energy cost associated with ensuring a device is discoverable ; the device has to broadcast its presence and open up a channel for other clients to connect with  due to this  the hard limit of 300 seconds was imposed by android  and this further inconveniences the user  forcing them to reset the device as an anchor every five minutes  this introduces a inflexibility of the anchors  a user must reinitiate discoverability every 5 minutes  once android releases their apis for the peripheral role  this will likely not be an issue any longer  as a device can remain discoverable for any amount of time using ble  the relevant libraries include the android bluetooth library  bluetoothadapter  bluetoothprofile  bluetoothgatt   and the android library  4   a custom class called proximitygattattributes was also defined ; this class contains the custom defined gatt characterisitics used to describe the anchor context  also included are the generated uuids on which the service and characteristics are built upon  the protocols and specifications set out by bluetooth were also extensively used  9   the relevant code can be found at https  //github.com/erkim/deepble 5 results the application behaved as expected  a user can connect to a device and initate a pairing  after which the relevant contextual information was transmitted  one of the more interesting results was the devices sensitivity to los  step by step navigation is indeed inpractical  primarily due to interuptions in signal strength due to los  the triangulation measurements rely on very minute changes in received signal strength indication  rssi  to correctly calculate position ; when a devices connection is interrupted by a wall or object  the calculations result in very erratic position estimations  in addition bluetooth classic only allows for one device to be paired at a time  this prevents the necessary three devices a device used to triangulate its own position  however  it is possible to effectively reduce the field of detection of a device  a device can ignore the signal received from devices outside a developer specified range  allowing for more accurate location measurements  the robustness of bluetooth was made the most apparent ; it is quick and simple to setup additional devices as anchors  although in this implementation  due to the reliance of bluetooth classic for data transfer  discoverability must be manually reinitiated  and therefore it is impractical to setup large amount of anchors   with the addition of the peripheral role by android  it is easy to see how anchors can be placed freely and judiciously to increase accuracy  fault tolerance  and effective range  a major flaw discovered when implementing the peer to peer communication was the interference of other devices  again  with the use of bluetooth classic  we lose the generic attribute profile associated with bluetooth low energy  one of the important jobs of the gatt profile is to filter out the irrelevant devices that are in the area ; clearly a user has no interest in the bluetooth headset a few feet away  both bluetooth and ble scans were implemented  and ble was by far the more accessible of the two  only the devices carrying the correct gatt profiles were detected  allowing for the user to easily see which devices are anchors  in addition  the bluetooth classic scans do not allow transmission of information without first establishing a pairing  the only information made available to other users during discovery are device names  which in general are very unfriendly  as such  it is very difficult for a user to judge which devices are anchors without prior knowledge of devices  relevant or not  in the area  again  this limitation should be lifted when the peripheral role is introduced to android ; without a connection requirement  anchors can freely advertise their presence and information  which the central client devices can gather according the the gatt protocol  inherently with this user inputted context is the lack of absolute information  with traditional navigation systems and a predefined context  direction  absolute position  and a rendered map comes naturally  with ble  we avoid the use of a global predefined context which overlays the network  this prevents ble applications from using more universal methods of navigation  such as direction or absolute position  the user must know beforehand what context the anchors are placed in  for example  in a shopping mall  it is easy to input as an anchor name a particular store  the user can see that the anchor corresponds to the particular store  and using that information infer where they are  there is an inherent reliance on the users to know where they are with respect to their surroundings  in addition  there is an assumption that the anchors description is actually accurate  or even easily comprehended by the users ! descriptive and user-friendly anchor names are suggested ; the application leaves it entirely to the person setting up the anchor network to decide how the anchors are described  finally  the app sought to test the capabilities of bluetooth le  it did not address issues of security  since the context of a location is entirely user defined  a user is free to feed misinformation to the anchor  potentially confusing a user trying to navigate using the existing anchors  to take this one step further  in the large scale use case  removing or altering any of the anchors can disrupt the entire network  which poses problems particularly in the large scale case  where it may be difficult to identify which anchors are accurate  the anchors are limited by the 100 meter range of bluetooth  and so there is no global communication between anchors ; if one of the anchors fails or is broadcasting incorrect information  the other devices will independently run without correcting the issue  to address this  a distributed consensus protocol must be implemented  as well as method for anchors to communicate with one another to form a loose network  6 future work one of the primary goals of designing an application that can effectively use ble was to demonstrate how the application could be extended to a wide variety of use cases  the strength of ble comes from its scalability ; additional anchors are easy to add to the network  and they seamlessly contribute accuracy  range and robustness to the network  ble navigation may have limited use with two or three anchors  but it immediately gains strength with the addition of two or more anchors  when we enable anchor to anchor communication  ideally this will be feasible with the peripheral role   we open up interesting graph related applications  namely  the anchors can contain localized information about the anchors surrounding them  forming a loosely connected network of anchors  in the most simple case  the anchor should not need to maintain constant communication with the other devices  since the anchors are unmoving  with some additional information about its immediate surroundings  we can represent each anchor as a node in a graph with knowledge of its neighbors and nothing else  by doing so  we can then implement graph search algorithms to optimize navigation for client devices  a new custom gatt profile would be required to implement this  as the anchors would require a protocol to communicate with client devices the anchors in its vicinity  combining this information  a client device can conceivably navigate step by step  if the contextual information is tailored for that purpose  an example of a use case would be ocean navigation  with various anchors placed on particular longitude latitude coordinates  if the anchor context is defined as these coordinates  a client device can navigate through the various anchors  a highly desirable feature to add would be this graphical representation of the bluetooth network  that updates as the user passes through other anchors  with the extensive use of the bluetooth protocol  it is easy to integrate the application with existing bluetooth hardware  an example use case would be bluetooth navigation to aid the visually impaired  with a well designed bluetooth headset  we can use anchors as waypoints to help the visually impaired navigate  finally  to optimize navigation and allow for large scale use  dedicated anchors must be designed that will interact with the application  using smartphones as anchors is both inefficient and inpractical  in real life scenarios  anchors should be durable and portable to see widespread use  7 ethics the extended application has many commercial and non commercial use cases  any situation where contextual awareness or navigation is required will find bluetooth navigation useful  due to the portability of bluetooth  this method of navigation can see widespread use in all fields  but one of the most important issues that must be addressed before the app can be extended to large scale use is the security of the anchors  when designing dedicated anchors  it is of the upmost importance that the proper measures are in place in case of a security threat  one use case that this may be valid in is in military applications  where location awareness is extremely valuable  if this method of navigation was implemented in the military setting  the highest priority must be placed on preventing information from leaking or being tampered with  8 conclusion bluetooth low energy provides us with an alternative to traditional technologies used for navigation  such as wifi or gps  the technology is most useful in localized settings  where scalability and portability are important  with apple already implementing ibeacon in their recent ios7 release  and with google soon to follow by adding peripheral support to their bluetooth api  ble applications will become increasingly ubiquitous  currently  android does not provide hardware or api support for the essential ble peripheral role  and as such  current bluetooth navigation systems based on android are limited to very small scale applications  however  the decentralized method of navigation remains a strong alternative to the highly centralized networks in place today  making basic navigation accessible everywhere  ble has opened up new possiblities with this alternative method ; it may even replace the current frameworks in place today  companies are rapidly recognizing the power of ble  and it will not be long before full support is available for all devices  once this is the case  navigation using bluetooth low energy will be one of the more powerful applications of ble  9 references  1  apple  ios developer library  core bluetooth programming guide  https  //developer.apple.com/library/ios/ documentation/networkinginternetweb/conceptual/ corebluetooth_concepts/aboutcorebluetooth/ introduction.html  retrieved 2014-04-28   2  anja bekkelien  bluetooth indoor positioning  masters thesis  university of geneva  2012   3  silke feldmann  kyandoghere kyamakya  ana zapater  and zighuo lue  an indoor bluetooth-based positioning system  concept  implementation and experimental evaluation  in weihua zhuang  chi-hsiang yeh  olaf droegehorn  c.-t toh  and hamid r arabnia  editors  international conference on wireless networks  pages 109113  2003   4  google  android developers  bluetooth low energy  http  //developer.android.com/guide/topics/ connectivity/bluetooth-le.html  retrieved 2014-04-28   5  gottipati harry  with ibeacon  apple is going to dump on nfc and embrace the internet of things  http  //gigaom.com/2013/09/10/with-ibeaconapple-is-going-to-dump-on-nfc-and-embracethe-internet-of-things/  2013   6  indoo.rs  ble based indoor positioning  http  //indoo.rs/  indoo.rs offers a ble based indoor navigation sdk to integrate with existing applications  it includes navigation capabilities  analytics on user movement  and routing tools  retreived 2014-04-28   7  senionlab  meridian  http  //senionlab.com and http  //meridianapps.com  senionlab and meridian both offer wifi based indoor navigation apis to integrate with existing applications  retrieved 2014-04-28   8  valerie renaudin  okan yalak  philip tome  and betrand merminod  indoor navigation of emergency agents  european journal of navigation  5  3   july 2007   9  bluetooth sig  bluetooth core specification version 4.0 bluetooth  june 2010 https  //www.bluetooth.org/enus/specification/adopted-specifications  retrieved 2014-04-30 appendix abbreviations ble  bluetooth low energy gatt  generic attribute app  application rssi  received signal strength indicator los  line of sight uuid  universally unique identifier api  application programming interface gps  global positioning system nfc  near field communication 