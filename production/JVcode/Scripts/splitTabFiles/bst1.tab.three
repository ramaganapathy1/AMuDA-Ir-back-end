binary search trees	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees a binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
binary search tree	0.0000000000	0.0	0.0	1.99270072993	4.75488750216	False
distinct each node	0.0000000000	0.0	0.0	0.0	1.58496250072	False
graph traversal strategies	0.0000000000	0.0	0.0	0.0	1.58496250072	False
objects to visit	0.0000000000	0.0	0.0	0.0	1.58496250072	False
subtree we assume	0.0000000000	0.0	0.0	0.0	1.58496250072	False
inorder the ordering	0.0000000000	0.0	0.0	0.0	1.58496250072	False
preorder the ordering	0.0000000000	0.0	0.0	0.0	1.58496250072	False
postorder the ordering	0.0000000000	0.0	0.0	0.0	1.58496250072	False
inorder traversal pseudocode	0.0000000000	0.0	0.0	0.0	1.58496250072	False
pseudocode this recursive	0.0000000000	0.0	0.0	0.0	1.58496250072	False
recursive algorithm takes	0.0000000000	0.0	0.0	0.0	1.58496250072	False
input a pointer	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree and executed	0.0000000000	0.0	0.0	0.0	1.58496250072	False
executed inorder traversal	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree while doing	0.0000000000	0.0	0.0	0.0	1.58496250072	False
traversal it prints	0.0000000000	0.0	0.0	0.0	1.58496250072	False
out the key	0.0000000000	0.0	0.0	0.0	1.58496250072	False
nil then return	0.5633802817	0.0	0.0	5.98783454988	7.92481250361	False
write a similar	0.0000000000	0.0	0.0	0.0	1.58496250072	False
pseudocode for preorder	0.0000000000	0.0	0.0	0.0	1.58496250072	False
preorder and postorder	0.0000000000	0.0	0.0	0.0	1.58496250072	False
inorder preorder postorder	0.0000000000	0.0	0.0	0.0	1.58496250072	False
outcome of inorder	0.0000000000	0.0	0.0	0.0	1.58496250072	False
traversal and preorder	0.0000000000	0.0	0.0	0.0	1.58496250072	False
finds the keys	0.0000000000	0.0	0.0	0.0	1.58496250072	False
keys in nondecreasing	0.0000000000	0.0	0.0	0.0	1.58496250072	False
operations on bst	0.0000000000	0.0	0.0	0.0	1.58496250072	False
key we assume	0.0000000000	0.0	0.0	0.0	1.58496250072	False
key is searched	0.0000000000	0.0	0.0	0.0	1.58496250072	False
start node bst-search	0.0000000000	0.0	0.0	0.0	1.58496250072	False
minimum to find	0.0000000000	0.0	0.0	0.0	1.58496250072	False
find the minimum	0.0000000000	0.0	0.0	0.0	1.58496250072	False
identify the leftmost	0.0000000000	0.0	0.0	0.0	1.58496250072	False
i.e the farthest	0.0000000000	0.0	0.0	0.0	3.16992500144	False
branches to find	0.0000000000	0.0	0.0	0.0	1.58496250072	False
find the maximum	0.0000000000	0.0	0.0	0.0	1.58496250072	False
identify the rightmost	0.0000000000	0.0	0.0	0.0	1.58496250072	False
right branches bst-minimum	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert a node	0.0000000000	0.0	0.0	0.0	1.58496250072	False
search we find	0.0000000000	0.0	0.0	0.0	1.58496250072	False
find a nil	0.0000000000	0.0	0.0	0.0	1.58496250072	False
break the bst-property	0.0000000000	0.0	0.0	0.0	1.58496250072	False
return ? error	0.0000000000	0.0	0.0	0.0	1.58496250072	False
predecessor the successor	0.0000000000	0.0	0.0	0.0	1.58496250072	False
key that belongs	0.0000000000	0.0	0.0	0.0	1.58496250072	False
idea for finding	0.0000000000	0.0	0.0	0.0	1.58496250072	False
finding the successor	0.0000000000	0.0	0.0	0.0	1.58496250072	False
right branches backward	0.0000000000	0.0	0.0	0.0	1.58496250072	False
roles of left	0.0000000000	0.0	0.0	0.0	1.58496250072	False
roles of maximum	0.0000000000	0.0	0.0	0.0	1.58496250072	False
maximum and minimum	0.0000000000	0.0	0.0	0.0	1.58496250072	False
delete a node	0.0000000000	0.0	0.0	0.0	1.58496250072	False
promote the unique	0.0000000000	0.0	0.0	0.0	1.58496250072	False
right child promote	0.0000000000	0.0	0.0	0.0	1.58496250072	False
treat the loss	0.0000000000	0.0	0.0	0.0	1.58496250072	False
algorithm this algorithm	0.0000000000	0.0	0.0	0.0	1.58496250072	False
bst t bst-delete	0.0000000000	0.0	0.0	0.0	1.58496250072	False
resetting is unnecessary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
nil then root	0.0000000000	0.0	0.0	0.0	1.58496250072	False
set the parent	0.0000000000	0.0	0.0	0.0	3.16992500144	False
move other data	0.0000000000	0.0	0.0	0.0	1.58496250072	False
summary of efficiency	0.0000000000	0.0	0.0	0.0	1.58496250072	False
efficiency analysis theorem	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree of height	0.0000000000	0.0	0.0	0.0	1.58496250072	False
made to run	0.0000000000	0.0	0.0	0.0	1.58496250072	False
randomly built bst	0.0000000000	0.0	0.0	0.0	1.58496250072	False
built bst suppose	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert n distinct	0.0000000000	0.0	0.0	0.0	1.58496250072	False
initially empty tree	0.0000000000	0.0	0.0	0.0	3.16992500144	False
empty tree assuming	0.0000000000	0.0	0.0	0.0	1.58496250072	False
study this question	0.0000000000	0.0	0.0	0.0	1.58496250072	False
process of constructing	0.0000000000	0.0	0.0	0.0	1.58496250072	False
constructing a tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
inserting in order	0.0000000000	0.0	0.0	0.0	1.58496250072	False
order randomly selected	0.0000000000	0.0	0.0	0.0	1.58496250072	False
selected n distinct	0.0000000000	0.0	0.0	0.0	1.58496250072	False
matter what matters	0.0000000000	0.0	0.0	0.0	1.58496250072	False
process of construction	0.0000000000	0.0	0.0	0.0	1.58496250072	False
view the process	0.0000000000	0.0	0.0	0.0	1.58496250072	False
keys is selected	0.0000000000	0.0	0.0	0.0	1.58496250072	False
uniformly at random	0.0000000000	0.0	0.0	0.0	1.58496250072	False
keys are inserted	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree thus constructed	0.0000000000	0.0	0.0	0.0	1.58496250072	False
number of keys	0.0000000000	0.0	0.0	0.0	1.58496250072	False
analysis we claim	0.0000000000	0.0	0.0	0.0	1.58496250072	False
inequality a function	0.0000000000	0.0	0.0	0.0	1.58496250072	False
taking the log	0.0000000000	0.0	0.0	0.0	1.58496250072	False
randomly build bst	0.0000000000	0.0	0.0	0.0	1.58496250072	False
