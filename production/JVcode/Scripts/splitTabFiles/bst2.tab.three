binary search treelecture	0.0000000000	0.0	0.0	0.0	1.58496250072	False
search treelecture notes	0.0000000000	0.0	0.0	0.0	1.58496250072	False
notes on binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
binary search trees	0.5294117647	0.0	0.0	12.9567010309	33.2842125151	False
principles of imperative	0.0000000000	0.0	0.0	0.0	1.58496250072	False
imperative computation frank	0.0000000000	0.0	0.0	0.0	1.58496250072	False
computation frank pfenning	0.0000000000	0.0	0.0	0.0	1.58496250072	False
frank pfenning lecture	0.0000000000	0.0	0.0	0.0	1.58496250072	False
previous two lectures	0.0000000000	0.0	0.0	0.0	1.58496250072	False
exploit the structure	0.0000000000	0.0	0.0	0.0	1.58496250072	False
structure of binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees in order	0.0000000000	0.0	0.0	0.0	1.58496250072	False
efficiently implement priority	0.0000000000	0.0	0.0	0.0	1.58496250072	False
implement priority queues	0.0000000000	0.0	0.0	0.0	1.58496250072	False
queues a priority	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert an arbitrary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
element and delete	0.0000000000	0.0	0.0	0.0	1.58496250072	False
delete the minimal	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert and delete	0.0000000000	0.0	0.0	0.0	1.58496250072	False
balanced binary tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
maximal depth log	0.0000000000	0.0	0.0	0.0	1.58496250072	False
storing n elements	0.0000000000	0.0	0.0	0.0	1.58496250072	False
elements with binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
obtain efficient insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert and search	0.0000000000	0.0	0.0	0.0	3.16992500144	False
times for associative	0.0000000000	0.0	0.0	0.0	1.58496250072	False
implemented as hash	0.0000000000	0.0	0.0	0.0	1.58496250072	False
worst-case asymptotic complexity	0.0000000000	0.0	0.0	0.0	1.58496250072	False
complexity for insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
extends to delete	0.0000000000	0.0	0.0	0.0	1.58496250072	False
discuss that operation	0.0000000000	0.0	0.0	0.0	1.58496250072	False
operation in lecture	0.0000000000	0.0	0.0	0.0	1.58496250072	False
core of binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
ordering invariant ordering	0.0000000000	0.0	0.0	0.0	1.58496250072	False
invariant ordering invariant	0.0000000000	0.0	0.0	0.0	1.58496250072	False
node with key	0.4864864865	0.0	0.0	5.99175257732	6.33985000288	False
binary search tree	0.0000000000	0.0	0.0	12.9484536082	39.624062518	False
insertion function maintains	0.0000000000	0.0	0.0	0.0	1.58496250072	False
maintains this invariant	0.0000000000	0.0	0.0	0.0	1.58496250072	False
invariant lecture notes	0.0000000000	0.0	0.0	0.0	3.16992500144	False
lecture notes march	0.9000000000	0.0	0.0	5.9793814433	15.8496250072	False
number of nodes	0.0000000000	0.0	0.0	0.0	1.58496250072	False
invariant would ensure	0.0000000000	0.0	0.0	0.0	1.58496250072	False
ensure that search	0.0000000000	0.0	0.0	0.0	1.58496250072	False
key has asymptotic	0.0000000000	0.0	0.0	0.0	1.58496250072	False
number of elements	0.0000000000	0.0	0.0	0.0	3.16992500144	False
found the entry	0.0000000000	0.0	0.0	0.0	1.58496250072	False
array we traverse	0.0000000000	0.0	0.0	0.0	1.58496250072	False
traverse a tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree data structure	0.0000000000	0.0	0.0	0.0	1.58496250072	False
interface we assume	0.0000000000	0.0	0.0	0.0	1.58496250072	False
defines a type	0.0000000000	0.0	0.0	0.0	1.58496250072	False
elem of elements	0.0000000000	0.0	0.0	0.0	1.58496250072	False
key of keys	0.0000000000	0.0	0.0	0.0	1.58496250072	False
functions to extract	0.0000000000	0.0	0.0	0.0	1.58496250072	False
keys from elements	0.0000000000	0.0	0.0	0.0	1.58496250072	False
implementation of binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees will provide	0.0000000000	0.0	0.0	0.0	1.58496250072	False
provide a type	0.0000000000	0.0	0.0	0.0	1.58496250072	False
bst and functions	0.0000000000	0.0	0.0	0.0	1.58496250072	False
functions to insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert an element	0.0000000000	0.0	0.0	0.0	1.58496250072	False
client-side interface declarations	0.0000000000	0.0	0.0	0.0	1.58496250072	False
typedef ___ key	0.0000000000	0.0	0.0	0.0	1.58496250072	False
key ; typedef	0.0000000000	0.0	0.0	0.0	1.58496250072	False
___ * elem	0.0000000000	0.0	0.0	0.0	1.58496250072	False
library-side interface declarations	0.0000000000	0.0	0.0	0.0	1.58496250072	False
typedef struct bst	0.0000000000	0.0	0.0	0.0	1.58496250072	False
bst * bst	0.0000000000	0.0	0.0	0.0	1.58496250072	False
bst ; bst	0.0000000000	0.0	0.0	0.0	1.58496250072	False
replace if elem	0.0000000000	0.0	0.0	0.0	1.58496250072	False
stipulate that elem	0.0000000000	0.0	0.0	0.0	1.58496250072	False
form of pointer	0.0000000000	0.0	0.0	0.0	1.58496250072	False
function to delete	0.0000000000	0.0	0.0	0.0	1.58496250072	False
delete an element	0.0000000000	0.0	0.0	0.0	1.58496250072	False
key the compare	0.0000000000	0.0	0.0	0.0	1.58496250072	False
compare function provided	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tables for binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
function to return	0.0000000000	0.0	0.0	0.0	1.58496250072	False
return an integer	0.0000000000	0.0	0.0	0.0	1.58496250072	False
representation with pointers	0.0000000000	0.0	0.0	0.0	1.58496250072	False
pointers unlike heaps	0.0000000000	0.0	0.0	0.0	1.58496250072	False
easily represent binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
represent binary search	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees with arrays	0.0000000000	0.0	0.0	0.0	1.58496250072	False
preserved the heap	0.0000000000	0.0	0.0	0.0	1.58496250072	False
lot of flexibility	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert new elements	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees the position	0.0000000000	0.0	0.0	0.0	1.58496250072	False
child a missing	0.0000000000	0.0	0.0	0.0	1.58496250072	False
child is represented	0.0000000000	0.0	0.0	0.0	1.58496250072	False
represented as null	0.0000000000	0.0	0.0	0.0	1.58496250072	False
two null pointers	0.0000000000	0.0	0.0	0.0	1.58496250072	False
null pointers typedef	0.0000000000	0.0	0.0	0.0	1.58496250072	False
pointers typedef struct	0.0000000000	0.0	0.0	0.0	1.58496250072	False
typedef struct tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree * tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree ; struct	0.0000000000	0.0	0.0	0.0	1.58496250072	False
data ; tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
left ; tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
case just consists	0.0000000000	0.0	0.0	0.0	1.58496250072	False
size struct bst	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insertion and search	0.0000000000	0.0	0.0	0.0	3.16992500144	False
data structure invariant	0.0000000000	0.0	0.0	0.0	1.58496250072	False
turns out finding	0.0000000000	0.0	0.0	0.0	1.58496250072	False
finding a good	0.0000000000	0.0	0.0	0.0	1.58496250072	False
function to test	0.0000000000	0.0	0.0	0.0	1.58496250072	False
test the invariant	0.0000000000	0.0	0.0	0.0	1.58496250072	False
signifi- cant challenge	0.0000000000	0.0	0.0	0.0	1.58496250072	False
programming with pointers	0.0000000000	0.0	0.0	0.0	1.58496250072	False
strictly true lecture	0.0000000000	0.0	0.0	0.0	1.58496250072	False
true lecture notes	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees l17.4 bool	0.0000000000	0.0	0.0	0.0	1.58496250072	False
l17.4 bool is_ordtree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
implementing the informal	0.0000000000	0.0	0.0	0.0	1.58496250072	False
description above recall	0.0000000000	0.0	0.0	0.0	1.58496250072	False
recall that compare	0.0000000000	0.0	0.0	0.0	1.58496250072	False
ensures \ result	0.0000000000	0.0	0.0	0.0	3.16992500144	False
null ; int	0.0000000000	0.0	0.0	0.0	1.58496250072	False
practice an iterative	0.0000000000	0.0	0.0	0.0	1.58496250072	False
check the invariant	0.0000000000	0.0	0.0	0.0	1.58496250072	False
ordered when tree_search	0.0000000000	0.0	0.0	0.0	1.58496250072	False
is_bst would guarantee	0.0000000000	0.0	0.0	0.0	1.58496250072	False
invariant is preserved	0.0000000000	0.0	0.0	0.0	1.58496250072	False
inserting an element	0.0000000000	0.0	0.0	0.0	3.16992500144	False
find a node	0.0000000000	0.0	0.0	0.0	1.58496250072	False
overwrite its data	0.0000000000	0.0	0.0	0.0	1.58496250072	False
place this last	0.0000000000	0.0	0.0	0.0	1.58496250072	False
creates lecture notes	0.0000000000	0.0	0.0	0.0	1.58496250072	False
l17.5 a small	0.0000000000	0.0	0.0	0.0	1.58496250072	False
hit a null	0.0000000000	0.0	0.0	0.0	1.58496250072	False
parent can modify	0.0000000000	0.0	0.0	0.0	1.58496250072	False
modify itself tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insert null element	0.0000000000	0.0	0.0	0.0	1.58496250072	False
create new node	0.0000000000	0.0	0.0	0.0	1.58496250072	False
node and return	0.0000000000	0.0	0.0	0.0	1.58496250072	False
right = null	0.0000000000	0.0	0.0	0.0	1.58496250072	False
null ; return	0.0000000000	0.0	0.0	0.0	1.58496250072	False
modify in place	0.0000000000	0.0	0.0	0.0	1.58496250072	False
left = tree_insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
right = tree_insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
expect the subtrees	0.0000000000	0.0	0.0	0.0	1.58496250072	False
make recursive calls	0.0000000000	0.0	0.0	0.0	1.58496250072	False
calls the result	0.0000000000	0.0	0.0	0.0	1.58496250072	False
ordered for analogous	0.0000000000	0.0	0.0	0.0	1.58496250072	False
reasons the returned	0.0000000000	0.0	0.0	0.0	1.58496250072	False
root void bst_insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
root = tree_insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
checking the ordering	0.0000000000	0.0	0.0	0.0	1.58496250072	False
analyze the structure	0.0000000000	0.0	0.0	0.0	1.58496250072	False
recursive functions implementing	0.0000000000	0.0	0.0	0.0	1.58496250072	False
functions implementing search	0.0000000000	0.0	0.0	0.0	1.58496250072	False
search and insert	0.0000000000	0.0	0.0	0.0	1.58496250072	False
search is ordered	0.0000000000	0.0	0.0	0.0	1.58496250072	False
left- > data	0.0000000000	0.0	0.0	0.0	1.58496250072	False
right- > data	0.0000000000	0.0	0.0	0.0	1.58496250072	False
ordering invariant stated	0.0000000000	0.0	0.0	0.0	1.58496250072	False
beginning of lecture	0.0000000000	0.0	0.0	0.0	1.58496250072	False
lecture before reading	0.0000000000	0.0	0.0	0.0	1.58496250072	False
check your understanding	0.0000000000	0.0	0.0	0.0	1.58496250072	False
invariant to exhibit	0.0000000000	0.0	0.0	0.0	1.58496250072	False
exhibit a tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
violate the ordering	0.0000000000	0.0	0.0	0.0	1.58496250072	False
ordering invariant lecture	0.0000000000	0.0	0.0	0.0	1.58496250072	False
tree would pass	0.0000000000	0.0	0.0	0.0	1.58496250072	False
pass this test	0.0000000000	0.0	0.0	0.0	1.58496250072	False
root an alternative	0.0000000000	0.0	0.0	0.0	1.58496250072	False
establish an upper	0.0000000000	0.0	0.0	0.0	1.58496250072	False
establish a lower	0.0000000000	0.0	0.0	0.0	1.58496250072	False
traverse the tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
interval with lower	0.0000000000	0.0	0.0	0.0	1.58496250072	False
lower and upper	0.0000000000	0.0	0.0	0.0	1.58496250072	False
illustrates this idea	0.0000000000	0.0	0.0	0.0	1.58496250072	False
idea we start	0.0000000000	0.0	0.0	0.0	1.58496250072	False
allowing any key	0.0000000000	0.0	0.0	0.0	1.58496250072	False
usual in mathematics	0.0000000000	0.0	0.0	0.0	1.58496250072	False
mathematics we write	0.0000000000	0.0	0.0	0.0	1.58496250072	False
leaves we write	0.0000000000	0.0	0.0	0.0	1.58496250072	False
write the interval	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees l17.8 interval	0.0000000000	0.0	0.0	0.0	1.58496250072	False
difficulty in implementing	0.0000000000	0.0	0.0	0.0	1.58496250072	False
implementing this idea	0.0000000000	0.0	0.0	0.0	1.58496250072	False
element which bounds	0.0000000000	0.0	0.0	0.0	1.58496250072	False
bounds the tree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
extract the element	0.0000000000	0.0	0.0	0.0	1.58496250072	False
null in case	0.0000000000	0.0	0.0	0.0	1.58496250072	False
lower or upper	0.0000000000	0.0	0.0	0.0	1.58496250072	False
upper bound bool	0.0000000000	0.0	0.0	0.0	1.58496250072	False
bound bool is_ordered	0.0000000000	0.0	0.0	0.0	1.58496250072	False
false ; key	0.0000000000	0.0	0.0	0.0	1.58496250072	False
false ; return	0.0000000000	0.0	0.0	0.0	1.58496250072	False
pass in null	0.0000000000	0.0	0.0	0.0	1.58496250072	False
null && is_ordtree	0.0000000000	0.0	0.0	0.0	1.58496250072	False
shape of binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
balanced binary search	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees has good	0.0000000000	0.0	0.0	0.0	1.58496250072	False
search the question	0.0000000000	0.0	0.0	0.0	1.58496250072	False
balanced this depends	0.0000000000	0.0	0.0	0.0	1.58496250072	False
order of insertion	0.0000000000	0.0	0.0	0.0	1.58496250072	False
insertion of numbers	0.0000000000	0.0	0.0	0.0	1.58496250072	False
order we obtain	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees in sequence	0.0000000000	0.0	0.0	0.0	1.58496250072	False
sequence of binary	0.0000000000	0.0	0.0	0.0	1.58496250072	False
keys in order	0.0000000000	0.0	0.0	0.0	1.58496250072	False
items these observations	0.0000000000	0.0	0.0	0.0	1.58496250072	False
important to pay	0.0000000000	0.0	0.0	0.0	1.58496250072	False
search trees balanced	0.0000000000	0.0	0.0	0.0	1.58496250072	False
lecture lecture notes	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trees l17.10 exercises	0.0000000000	0.0	0.0	0.0	1.58496250072	False
l17.10 exercises exercise	0.0000000000	0.0	0.0	0.0	1.58496250072	False
update the pointers	0.0000000000	0.0	0.0	0.0	1.58496250072	False
replace a node	0.0000000000	0.0	0.0	0.0	1.58496250072	False
trailing ? pointer	0.0000000000	0.0	0.0	0.0	1.58496250072	False
