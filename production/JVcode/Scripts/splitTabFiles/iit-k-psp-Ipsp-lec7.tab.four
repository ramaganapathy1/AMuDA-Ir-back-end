introduction to problem solving	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
problem solving and programming	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
solving and programming lecture	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
lecture we have talked	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
boolean types and character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
types and character types	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
syntax in what expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression is essentially denotation	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression has a type	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
long integer short char	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type is always determined	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression and the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
value of the expression	0.4680851064	0.0666666666667	0.0	0.0	0.0	1	1.99311531842	8.0	False
variable also an expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
four one seven etcetera	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
out of these kinds	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
kinds of simple expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression by using operator	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operator like plus minus	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operator has some operand	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
binary operator which means	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operand for the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
lets talk little bit	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literal of various kinds	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
integer and floating point	0.0000000000	0.133333333333	0.0	0.0666666666667	0.0	1	0.0	4.0	False
floating point constants literals	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
literals have familiar notation	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
notation will not deliver	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
syntax of these integers	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two is an integer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
integer literals or twenty	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
twenty five and forty	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
etcetera so the integer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literal essentially a sequence	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
optionally followed optionally preceded	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
examples of floating point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point literals five point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
minus sign ten point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point zero e minus	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
ten to the power	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point literals by default	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literals by default integer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literals of this kind	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
kind have the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	4.0	False
type int and floating	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
int and floating point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literals of these kind	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literal or the floating	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
constant use the suffix	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
similarly if a suffix	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
thetype becomes unsigned int	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type long and forty	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
similarly for the floating	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
suffix after the constant	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
long double respectively remember	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
remember that before type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type of floating point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
four has a type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type double five point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
float and five point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point four has type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
wondering why the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
components of the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression determines the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
depending on the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type from the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
talk about the types	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
component that is expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
talked about the character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type or the char	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
constant of type char	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
char remember that character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
cides inside the machine	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
machine so a character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
character constant is denoted	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
denoted by the character	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
quotes or c capital	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
constant literal of type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literal of type character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literal denotes an integer	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
integer of type char	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
char and the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
value of the integer	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
integer is the ascii	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
code of the character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
call that the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type of a byte	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
byte size one byte	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
byte or eight bit	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
integers but the integer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
denotes has the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literal five within quotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
quotes is the integer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
code for the character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
put no quotes arounthe	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literals have the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
denoted in this notation	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
quotes within single quotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
single quotes letters backslash	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
denotes the new line	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
backslash t will denotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
denotes the tab character	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
backslashes within the quotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
quote character is denoted	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	4.0	False
quote followed by backslash	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
words within single quotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
single quotes backslash quote	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
quotes backslash quote denotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
denotes the single quotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
similarly the double quotes	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
quote within the quote	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
quote character ok lets	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
character ok lets move	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
begin with arithmetic operators	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
minus star which stands	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
multiplication and the slash	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
stands for the division	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two operands the operators	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operators plus and minus	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operand but the behavior	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
behavior is slightly difference	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
case of the division	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operator in the slash	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
slash operator the result	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operator the result differ	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
depending upon the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operand so the operands	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operands are integer type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type then the result	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
division is the quotient	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
dividing the two numbers	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
number are of floating	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result of the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
quotient of the division	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two and five slash	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point zero five point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point zero both result	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result in the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	4.0	False
case the two operands	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two operands are floating	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operands are floating point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operator called percent operator	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
essentially returns the remainder	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
remainder of the division	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two and the remainder	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type of the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result of type floating	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point with the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
integer with the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
answer and the answer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operands for an operator	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
types then the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
value of the operand	0.0000000000	0.133333333333	0.0	0.0666666666667	0.0	1	0.0	2.0	False
low type is promoted	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
conversion we will discuss	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
higher and lower type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
means is a minute	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
store the largest set	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
largest set of values	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
higher than the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	4.0	False
type of the integer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
literal to two point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
double is higher type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
higher type than int	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
happen is the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result of the operation	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
double bit the operands	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
double and the answer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point five of type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
double in this case	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
case the five divided	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
divided by two point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	4.0	False
type of float value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
value is two point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two point zero suppose	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
slightly different expression lets	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
change as the result	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result of the implicit	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
int but the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
change so the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point zero and type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type will become floating	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type is being changed	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
changed ok so lets	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
error at higher end	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
higher end lower type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
speaking the higher type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
hold a larger range	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
larger range of value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
imagine that the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
long then unsigned int	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
unsigned int and int	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
int more than unsigned	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
hold the largest sets	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
sets of the values	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
value can be stored	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
stored in the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
language defined type unsigned	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
types like short unsigned	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
short unsigned short char	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
short char and unsigned	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
char and unsigned char	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
promoted to the type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	4.0	False
two which would result	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result in a integer	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
value of integer value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two so the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
two point five applied	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
rules five has type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type int two point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point five has type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
divides double two point	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result is the value	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
point zero with type	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
type double ok lets	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
notion associated with expressions	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
notion of the precedence	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
unambiguously specify the operands	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operands for each operator	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
operator in the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
first if you recall	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
bodmas rules from school	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
precedence brackets are evaluated	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
first followed by division	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
division multiplication and addition	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
addition and then subtraction	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
left to right rule	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operators to be left	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
languages if i find	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
similar rule for determining	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
determining how the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression can be evaluated	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
evaluated when the operands	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
slash percent and ampersand	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
ampersand have higher precedence	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operator by unary operator	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
lets consider the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operands for these operators	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operators is this expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression so minus star	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
evaluated before the minus	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
out of these star	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
slash since the associativity	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
access from the left	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
left will be evaluated	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
evaluated first which means	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
means that operator star	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
first followed by slash	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
right which essentially means	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operator on the left	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
first therefore the evaluation	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
evaluation of these operands	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
star followed by slash	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
slash followed by minus	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
thing divide by ten	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
added to the result	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
result of the subtraction	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
note that the precedence	0.0000000000	0.0666666666667	0.0	0.0	0.0	1	0.0	2.0	False
precedence and the associativity	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
order the different operators	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
operators within the excursion	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
order the two operand	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
evaluated before the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression before the expression	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
first of the kinds	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
make it any difference	0.0000000000	0.0	0.0	0.0	0.0	0.0	0.0	2.0	False
expression denotes a simple	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
denotes a simple computation	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
type determined at compile	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
value that is generally	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operaor with its operands	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
integer literals have type	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
literals have type int	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
point literals have type	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
literals have type double	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
types of numeric constants	0.0	0.0666666666667	0.0	0.0	0.0	2	0.0	0.0	False
type long unsigned int	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
suffix after a floating	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
type float or long	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
type char the value	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
code of th character	0.0	0.0666666666667	0.0	0.0	0.0	3	0.0	0.0	False
value of the constant	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
thc mutant ii rui	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
ascii code of character	0.0	0.0666666666667	0.0	0.0	0.0	3	0.0	0.0	False
representing some special characters	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
thc double quote character	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
familiar with some arthmetic	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operators all these operators	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
note that with integer	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
returns only the integer	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
part of the result	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
quotient the reminder resulting	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
division can be obtained	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operands of an operator	0.0	0.133333333333	0.0	0.0666666666667	0.0	1	0.0	0.0	False
operand of the lower	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
higher of the two	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
two types is roughly	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
types is roughly speaking	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
store a larger set	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
larger set of values	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operand is a variable	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operation does not change	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
type of the variable	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
computation of the expression	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
higher to lower long	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
lower long double double	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
float unsigned long long	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
unsigned long long insigned	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
long long insigned int	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
long insigned int int	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
integer operands of type	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operands of type smaller	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
type smaller than int	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
converted to type int	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
int thus any arithmetic	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
results in a type	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
recall the bodmas rule	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
associate left to right	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
evaluation of the operands	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
expression is thus interpreted	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
rules do not state	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
relational operators compare two	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operators compare two quantities	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
return a boolean value	0.0	0.133333333333	0.0	0.133333333333	0.0	1	0.0	0.0	False
logical operators have boolean	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operators have boolean operands	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
operators more on yhis	0.0	0.0666666666667	0.0	0.0	0.0	1	0.0	0.0	False
precedence and associativity table	0.0	0.0666666666667	0.0	0.0	0.0	2	0.0	0.0	False
